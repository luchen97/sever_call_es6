{"version":3,"sources":["module/Notification.js","module/Socket.js","reducers/largeVideoReducer.js","reducers/roomCreateReducer.js","reducers/streamReducer.js","reducers/userOnRoomReducer.js","reducers/uiReducer.js","reducers/remoteReducer.js","reducers/modalReducer.js","reducers/messageReducer.js","reducers/remoteElementReducer.js","reducers/localElementReducer.js","redux/rootReducer.js","redux/store.js","Components/Video/Video.jsx","Components/Audio/Audio.jsx","Components/Video/UserComponent.jsx","global/UserRoom.js","Components/Video/Audio.jsx","Components/Video/UserCloneComponent.jsx","Components/RemoteVideo/RemoteVideo.jsx","Components/LocalVideo/LocalVideo.jsx","Layouts/SliderRight.jsx","Components/Clock/Clock.jsx","Components/Video/LargeVideo.jsx","events/EVENTS.js","global/Role.js","module/RoomClient.js","Components/Option/CameraOption.jsx","Layouts/SliderLeft.jsx","Components/Menu/Menu.jsx","Components/Option/MicOption.jsx","Components/Footer/FooterTool.jsx","Components/MutilpleMedia/MediaElement.jsx","Components/MutilpleMedia/MultipleMediaContainer.jsx","Components/Modal/ModalComponent.jsx","Components/Chat/Chat.jsx","Layouts/Container.jsx","Layouts/Start.jsx","module/RoomClientClone.js","Pages/HomePage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Notification","type","message","notification","description","placement","SocketClone","url","request","data","Promise","resolve","reject","socket","emit","status","this","io","connect","ACTION_TYPES","setLargeVideo","stream","payload","setRoomCreate","room","initializeStream","local","remote","setStream","setUserOnRoom","viewOneCamera","setViewOneCamera","Map","setRemoteStream","visible","header","render","setModal","initializeMessage","setMessage","setRemoteElement","element","videos","audio","screenCast","setLocalElementReducer","combineReducers","streamRemoteState","state","action","streamState","largeVideoState","userOnRoomState","roomCreateState","ui","modalState","messageState","remoteElementState","localElementState","middleware","thunk","store","createStore","rootReducer","applyMiddleware","Video","componentDidMount","videoRef","srcObject","props","componentDidUpdate","prevProps","onClick","id","autoPlay","ref","width","height","style","background","paddingTop","PureComponent","ColorList","UserComponent","item","audioRef","video","setState","hasVideo","prevProp","mute","e","preventDefault","muted","onHandleSetLargeVideos","dispatch","peerId","border","active","position","display","justifyContent","alignItems","color","fontWeight","maxWidth","bottom","peerName","shape","danger","top","left","zIndex","icon","className","borderRadius","backgroundColor","Math","floor","random","verticalAlign","size","Component","Audio","UserCloneComponent","onVideoClick","marginBottom","textShadow","length","map","index","RemoteVideo","onHandleSetLargeVideo","setActive","currentStream","j","i","overflow","padding","LocalVideo","window","roomClient","username","screen","SliderRight","Clock","count","seconds","minutes","hours","formatted","right","margin","fontSize","LargeVideo","console","log","el","EVENTS","RTC_EVENTS","Role","micEnable","cameraEnable","password","undefined","mediaType","_EVENTS","exitRoom","openRoom","startVideo","stopVideo","startAudio","stopAudio","startScreen","stopScreen","RoomClient","mediasoupClient","room_id","name","successCallback","createRoom","roomName","a","reponse","join","loadDevice","device","initTransports","myRoom","newMap","socketId","currentMap","getState","get","set","filter","value","routerRtpCapabilities","Device","error","load","forceTcp","rtpCapabilities","producerTransport","createSendTransport","on","callback","errback","dtlsParameters","transport_id","kind","rtpParameters","producerTransportId","producer_id","producer_name","close","consumerTransport","createRecvTransport","initSockets","consumer_id","removeConsumer","consume","exit","produce","deviceId","mediaConstraints","min","ideal","canProduce","producerLabel","has","navigator","mediaDevices","getDisplayMedia","getUserMedia","track","getAudioTracks","getVideoTracks","params","encodings","rid","maxBitrate","scalabilityMode","codecOptions","videoGoogleStartBitrate","producer","producers","push","closeProducer","delete","event","userOnRoom","cloneMap","getConsumeStream","then","consumer","consumers","currentUser","producerId","consumerTransportId","MediaStream","addTrack","resumeProducer","resume","forEach","user","getAllRemoteVideo","dataMap","key","getAllChat","messages","roomInfo","info","changePassword","res","evt","eventListeners","isOpen","_isOpen","Object","keys","pause","offline","clean","off","catch","warn","finally","CameraOption","enumerateDevices","devices","deviceInfo","onActiveOptionCamera","currentVideo","label","SliderLeft","MenuComponent","openFullscreen","elem","document","documentElement","fullscreen","exitFullscreen","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","MicOption","mic","speaker","onActiveOptionMic","currentMic","currentSpeaker","FooterTool","onChangeView","openCamera","openMic","onDisplayChat","onDisplayRoomInfo","overlay","Menu","trigger","onStartScreenShare","onStopMic","forceRender","onOpenMic","onEndCall","onStopCamera","onOpenCamera","onShareLink","onDisplayRemote","MediaElement","elementWidth","match","MultipleMediaContainer","widthMediaElement","clone","Array","from","ModalComponent","handleCancel","onOk","title","onCancel","closable","Footer","Layout","Content","Chat","sendMessage","values","sendMessageChat","span","src","marginTop","marginRight","marginLeft","float","layout","onFinish","Item","placeholder","htmlType","Header","Sider","Container","chatElement","getElementById","getMessageInRoom","addonBefore","TwitterOutlined","disabled","Password","onChange","target","Modal","content","Search","onSearch","select","execCommand","allowClear","enterButton","data-clipboard-target","CopyOutlined","location","href","footer","linkInput","onCreateRoom","RoomClientClone","roomname","initRoomClient","create","initSocket","joinRoom","initRTC","getRouterCapabilities","routerCapabilities","initProducerTransport","initConsumeTransport","consumeTransport","getProducerOfRoom","consumerId","closeConsumer","remoteElement","rl","findIndex","remoteElementClone","cs","serverIp","port","listProducer","transport","listProduce","videoProduce","audios","audioProduce","screenProduce","splice","HomePage","form","displayName","formRef","rules","required","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"wUAEMA,EAAe,SAACC,EAAMC,GACxBC,IAAaF,GAAM,CACfC,QAAS,mBACTE,YAAaF,EACbG,UAAW,iBCFbC,EACJ,WAAYC,GAAM,IAAD,gCAIjBC,QAAU,SAACP,GAAqB,IAAfQ,EAAc,uDAAP,GACtB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,EAAKC,OAAOC,KAAKb,EAAMQ,GAAM,SAACA,GACV,IAAdA,EAAKM,QACPf,EAAa,QAAQS,EAAKP,SAE1BU,EAAOH,EAAKA,OAEZE,EAAQF,EAAKA,aAXnBO,KAAKH,OAASI,IAAGC,QAAQX,I,iBCNhBY,EACM,kBAebC,EAAgB,SAACC,GACrB,MAAO,CACLpB,KAAMkB,EACNG,QAASD,IClBAF,EACK,iBA8BZI,EAAgB,SAACC,GACrB,MAAO,CACLvB,KAAMkB,EACNG,QAASE,ICnCAL,EACC,aAERM,EAAmB,CAAEC,MAAO,GAAIC,OAAQ,IAaxCC,EAAY,SAACP,GACjB,MAAO,CACLpB,KAAMkB,EACNG,QAASD,IClBAF,EACK,iBAEZM,EAAkB,GA4BlBI,EAAgB,SAACL,GACrB,MAAO,CACLvB,KAAMkB,EACNG,QAASE,I,OClCAL,EACkB,sBAEzBM,EAAmB,CACfK,eAAe,GAanBC,EAAmB,WACf,MAAO,CACG9B,KAAOkB,ICpBdA,EACgB,oBAEvBM,EAAmB,IAAIO,IAavBC,EAAkB,SAACZ,GACf,MAAO,CACGpB,KAAMkB,EACNG,QAASD,ICnBhBF,EACA,YAEPM,EAAmB,CAAES,SAAS,EAAOC,OAAQ,GAAIC,OAAQ,MAazDC,EAAW,SAAChB,GAChB,MAAO,CACLpB,KAAMkB,EACNG,QAASD,ICnBAF,EACE,cAETmB,EAAoB,GAapBC,EAAa,SAAClB,GAClB,MAAO,CACLpB,KAAMkB,EACNG,QAASD,ICnBAF,EACW,qBAElBM,EAAmB,GAanBe,EAAmB,SAACC,GACtB,MAAO,CACHxC,KAAMkB,EACNG,QAASmB,ICnBJtB,EACU,oBAEjBM,EAAmB,CAAEiB,OAAQ,GAAIC,MAAO,GAAIC,WAAY,IAaxDC,EAAyB,SAACJ,GAC5B,MAAO,CACHxC,KAAMkB,EACNG,QAASmB,ICPFK,cAAgB,CAC7BC,kBLR0B,WAAuC,IAAtCC,EAAqC,uDAA7BvB,EAAkBwB,EAAW,uCACxD,OAAQA,EAAOhD,MACL,KAAKkB,EAEK,OADA6B,EAAQC,EAAO3B,QAGzB,QACU,OAAO0B,IKEnCE,YRToB,WAAuC,IAAtCF,EAAqC,uDAA7BvB,EAAkBwB,EAAW,uCAC1D,OAAQA,EAAOhD,MACb,KAAKkB,EAEH,OADA6B,EAAQC,EAAO3B,QAGjB,QACE,OAAO0B,IQGXG,gBVVwB,WAAuC,IAAtCH,EAAqC,uDAFvC,KAE4BC,EAAW,uCAC9D,OAAQA,EAAOhD,MACb,KAAKkB,EAEH,OADA6B,EAAQC,EAAO3B,QAGjB,QACE,OAAO0B,IUIXI,gBPVwB,WAAuC,IAAtCJ,EAAqC,uDAA7BvB,EAAkBwB,EAAW,uCAC9D,OAAQA,EAAOhD,MACb,KAAKkB,EAEH,OADA6B,EAAQC,EAAO3B,QAEjB,QACE,OAAO0B,IOKXK,gBTXwB,WAAuC,IAAtCL,EAAqC,wDAAXC,EAAW,uCAC9D,OAAQA,EAAOhD,MACb,KAAKkB,EAEH,OADA6B,EAAQC,EAAO3B,QAEjB,QACE,OAAO0B,ISMXM,GNVgB,WAAuC,IAAtCN,EAAqC,uDAA7BvB,EAAkBwB,EAAW,uCAC9C,OAAQA,EAAOhD,MACL,KAAKkB,EAEK,OADA6B,EAAMlB,eAAiBkB,EAAMlB,cACtB,eAAIkB,GACrB,QACU,OAAOA,IMKnCO,WJdmB,WAAuC,IAAtCP,EAAqC,uDAA7BvB,EAAkBwB,EAAW,uCACzD,OAAQA,EAAOhD,MACb,KAAKkB,EAEH,OADA6B,EAAQC,EAAO3B,QAGjB,QACE,OAAO0B,IIQXQ,aHfqB,WAAwC,IAAvCR,EAAsC,uDAA9BV,EAAmBW,EAAW,uCAC5D,OAAQA,EAAOhD,MACb,KAAKkB,EAEH,OADA6B,EAAQC,EAAO3B,QAGjB,QACE,OAAO0B,IGSXS,mBFhB2B,WAAuC,IAAtCT,EAAqC,uDAA7BvB,EAAkBwB,EAAW,uCAC/D,OAAQA,EAAOhD,MACX,KAAKkB,EAED,OADA6B,EAAQC,EAAO3B,QAGnB,QACI,OAAO0B,IEUjBU,kBDjB0B,WAAuC,IAAtCV,EAAqC,uDAA7BvB,EAAkBwB,EAAW,uCAC9D,OAAQA,EAAOhD,MACX,KAAKkB,EAED,OADA6B,EAAQC,EAAO3B,QAGnB,QACI,OAAO0B,MEKbW,EAAa,C,OACfC,GAEEC,EAAQC,YAAYC,EAAaC,IAAe,WAAf,EAAmBL,I,gCCc3CM,E,4MA/BbC,kBAAoB,WAAO,IAAD,EACxB,EAAKC,SAASC,UAAd,UAA0B,EAAKC,aAA/B,aAA0B,EAAYD,W,EAGxCE,mBAAqB,SAACC,GACW,IAAD,EAA1BA,IAAc,EAAKF,QACrB,EAAKF,SAASC,UAAd,UAA0B,EAAKC,aAA/B,aAA0B,EAAYD,Y,EAI1CI,QAAQ,WACJ,EAAKH,MAAMG,QAAQ,EAAKL,W,uDAGlB,IAAD,OACP,OACE,uBACEM,GAAG,QACHC,UAAU,EACVC,IAAK,SAACA,GACJ,EAAKR,SAAWQ,GAElBC,MAAO,OACPC,OAAQ,IACRC,MAAO,CAAEC,WAAY,QAASC,WAAY,GAC1CR,QAASxD,KAAKwD,c,GA1BFS,iB,ICCAA,gB,2BCKdC,ICRO,IAAIlD,I,ODQC,CAChB,UACA,UACA,UACA,kBACA,UACA,UACA,kBACA,YAEImD,G,kDACJ,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IAIRH,kBAAoB,WAAO,IAAD,IAClBkB,EAAK,EAAKf,MAAMe,KACtB,EAAKC,SAASjB,UAAd,OAA0BgB,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAMzC,aAAhC,aAA0B,EAAatB,OACvC,EAAK8C,SAASC,UAAd,OAA0BgB,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAME,aAAhC,aAA0B,EAAajE,OACnC,EAAK8C,SAASC,UAChB,EAAKmB,SAAS,CAAEC,UAAU,IAE1B,EAAKD,SAAS,CAAEC,UAAU,KAZX,EAgBnBlB,mBAAqB,SAACmB,GACpB,GAAI,EAAKpB,MAAMe,OAASK,EAASL,KAAM,CAAC,IAAD,IAC7BA,EAAK,EAAKf,MAAMe,KACtB,EAAKC,SAASjB,UAAd,OAA0BgB,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAMzC,aAAhC,aAA0B,EAAatB,OACvC,EAAK8C,SAASC,UAAd,OAA0BgB,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAME,aAAhC,aAA0B,EAAajE,OACnC,EAAK8C,SAASC,UAChB,EAAKmB,SAAS,CAAEC,UAAU,IAE1B,EAAKD,SAAS,CAAEC,UAAU,MAxBf,EA6BnBE,KAAO,SAACC,GACNA,EAAEC,iBACF,IAAMF,EAAO,EAAK1C,MAAM0C,KAItB,EAAKL,SAASQ,OAHXH,EAKL,EAAKH,SAAS,CAAEG,MAAOA,KArCN,EAwCnBtE,cAAgB,SAACuE,GACf,EAAKtB,MAAMyB,yBACXjC,EAAMkC,SAAS3E,EAAc,CAAEC,OAAQ,EAAK8C,SAASC,cAxCrD,EAAKpB,MAAQ,CAAE0C,MAAM,EAAOF,UAAU,GAFrB,E,qDA6CT,IAAD,WACP,OACE,sBACEf,GAAIzD,KAAKqD,MAAMe,KAAKY,OACpBxB,QAASxD,KAAKI,cACd0D,MAAO,CACLmB,OAAQjF,KAAKqD,MAAMe,KAAKc,OAAS,gBAAkB,OACnDC,SAAU,WACVvB,MAAO,OACPC,OAAQ,OACRuB,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAVhB,UAaE,sBAAMxB,MAAO,CAAEyB,MAAO,OAAQC,WAAY,OAAQL,SAAU,WAAYM,SAAU,MAAOC,OAAQ,GAAjG,mBACG1F,KAAKqD,MAAMe,YADd,aACG,EAAiBuB,WAEnB3F,KAAKgC,MAAM0C,KACV,cAAC,KAAD,CACElB,QAASxD,KAAK0E,KACdzF,KAAK,OACL2G,MAAM,SACNC,QAAM,EACN/B,MAAO,CAAEqB,SAAU,WAAYW,IAAK,EAAGC,KAAM,EAAGC,OAAQ,IACxDC,KAAM,mBAAGC,UAAU,iBAAb,0BAGR,cAAC,KAAD,CACE1C,QAASxD,KAAK0E,KACdzF,KAAK,OACL2G,MAAM,SACNC,QAAM,EACN/B,MAAO,CAAEqB,SAAU,WAAYW,IAAK,EAAGC,KAAM,EAAGC,OAAQ,IACxDC,KAAM,mBAAGC,UAAU,iBAAb,yBAGRlG,KAAKgC,MAAMwC,SAuBT,KAtBF,qBACEf,GAAG,cACHK,MAAO,CACLyB,MAAO,OACPH,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBF,SAAU,WACVgB,aAAc,MACdvC,MAAO,GACPC,OAAQ,IAVZ,SAaE,cAAC,KAAD,CACEC,MAAO,CAAEsC,gBAAgB,GAAD,OAAKlC,GAAUmC,KAAKC,MAAsB,GAAhBD,KAAKE,YAAmBC,cAAe,UACzFC,KAAK,QAFP,mBAIGzG,KAAKqD,MAAMe,YAJd,aAIG,EAAiBuB,aAMxB,uBACEhC,IAAK,SAACA,GACJ,EAAKR,SAAWQ,GAElBF,GAAG,QACHC,UAAU,EACVE,MAAO,OACPC,OAAQ,IACRC,MAAO,CAAEC,WAAY,QAASkB,OAAQ,uBAExC,uBACEtB,IAAK,SAACA,GACJ,EAAKU,SAAWV,GAElBF,GAAG,QACHC,UAAU,W,GA1HQgD,aAgJbxG,aAff,SAAyB8B,GACvB,MAAO,CACLD,kBAAmBC,EAAMD,kBACzBU,mBAAmBT,EAAMS,sBAYW,KAAzBvC,CAA+BiE,IAA/BjE,IEvIAyG,G,4MAxBbzD,kBAAoB,WAAO,IAAD,EACxB,EAAKmB,SAASjB,UAAd,UAA0B,EAAKC,aAA/B,aAA0B,EAAYD,W,EAGxCE,mBAAqB,SAACC,GACW,IAAD,EAA1BA,IAAc,EAAKF,QACrB,EAAKgB,SAASjB,UAAd,UAA0B,EAAKC,aAA/B,aAA0B,EAAYD,Y,uDAIhC,IAAD,OACP,OACE,uBACEU,MAAO,CAAEF,MAAO,OAAQC,OAAQ,OAAQuB,QAAS,QACjDzB,IAAK,SAACA,GACJ,EAAKU,SAAWV,GAElBF,GAAG,QACHC,UAAU,Q,GAnBEO,iBCMdC,GAAY,CAChB,UACA,UACA,UACA,kBACA,UACA,UACA,kBACA,WAoEa0C,G,4MAhEbC,aAAe,SAACvC,GACd,EAAKjB,MAAMyB,yBACXjC,EAAMkC,SAAS3E,EAAc,CAAEC,OAAQiE,EAAMlB,c,uDAGrC,IAAD,eACP,OACE,sBACEU,MAAO,CACLF,MAAO,OACPC,OAAQ,OACRoB,OAAQ,oBACR6B,aAAc,GACdX,aAAc,EACdhB,SAAU,YAPd,UAUE,sBACErB,MAAO,CACLyB,MAAO,UACPwB,WAAY,YACZvB,WAAY,OACZL,SAAU,WACVM,SAAU,MACVC,OAAQ,GAPZ,mBAUG1F,KAAKqD,MAAMe,YAVd,aAUG,EAAiBuB,WAEc,IAAjC3F,KAAKqD,MAAMe,KAAKE,MAAM0C,OACrB,qBACEvD,GAAG,cACHK,MAAO,CACLyB,MAAO,OACPH,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBF,SAAU,WACVgB,aAAc,MACdvC,MAAO,GACPC,OAAQ,IAVZ,SAaE,cAAC,KAAD,CACEC,MAAO,CAAEsC,gBAAgB,GAAD,OAAKlC,GAAUmC,KAAKC,MAAsB,GAAhBD,KAAKE,YAAmBC,cAAe,UACzFC,KAAK,QAFP,mBAIGzG,KAAKqD,MAAMe,YAJd,aAIG,EAAiBuB,aAKpB,KACH3F,KAAKqD,MAAMe,KAAKE,MAAM2C,KAAI,SAAC3C,EAAO4C,GACjC,OAAO,cAAC,EAAD,CAAmB9D,UAAWkB,EAAMjE,OAAQmD,QAAS,EAAKqD,cAA9CK,MAErB,cAAC,GAAD,CAAO9D,UAAS,UAAEpD,KAAKqD,MAAMe,YAAb,iBAAE,EAAiBzC,aAAnB,aAAE,EAAwBtB,gB,GAzDjBqG,aCN3BS,G,kDACJ,WAAY9D,GAAQ,IAAD,8BACjB,cAAMA,IAKR+D,sBAAwB,SAAChD,EAAM8C,GAC7B,EAAKG,UAAUH,IAPE,EAUnBG,UAAY,SAACH,GAGX,IAFA,IAAMI,EAAa,eAAQ,EAAKjE,MAAMnB,aAChCxB,EAAQ4G,EAAc5G,MACnB6G,EAAI,EAAGA,EAAI7G,EAAMsG,OAAQO,IAAK,CACrB7G,EAAM6G,GACdrC,QAAS,EAEnB,IAAK,IAAIsC,EAAI,EAAGA,EAAI,EAAKnE,MAAMjB,gBAAgB4E,OAAQQ,IAAK,CAC1D,IAAM/F,EAAU,EAAK4B,MAAMjB,gBAAgBoF,GAEzC/F,EAAQyD,OADNsC,IAAMN,EAMZ,EAAK7D,MAAMxC,cAAc,EAAKwC,MAAMjB,iBACpC,EAAKiB,MAAMzC,UAAX,eAA0B0G,KAxB1B,EAAKtF,MAAQ,CAAE0C,MAAM,GACrB,EAAKL,SAAW,KAHC,E,qDA6BT,IAAD,OACP,OACE,qBAAKP,MAAO,CAAEF,MAAO,OAAQC,OAAQ,OAAQ4D,SAAU,OAAQC,QAAS,GAAxE,SACG1H,KAAKqD,MAAMZ,mBAAmBwE,KAAI,SAAC7C,EAAM8C,GACxC,OAME,aALA,CAKC,GAAD,CAEE9C,KAAMA,EACNU,uBAAwB,kBAAM,EAAKsC,sBAAsBhD,EAAM8C,KAF1DA,Y,GAzCOR,aAmEXxG,oBAhBf,SAAyB8B,GACvB,MAAO,CACLE,YAAaF,EAAME,YACnBE,gBAAiBJ,EAAMI,gBACvBK,mBAAoBT,EAAMS,uBAI9B,SAA4BsC,GAC1B,MAAO,CACL3E,cAAe,SAACX,GAAD,OAAUsF,EAAS3E,EAAcX,KAChDmB,UAAW,SAACnB,GAAD,OAAUsF,EAASnE,EAAUnB,KACxCoB,cAAe,SAACpB,GAAD,OAAUsF,EAASlE,EAAcpB,QAIrCS,CAA6CiH,ICzEtDQ,G,4MACJd,aAAe,SAACvC,GAEdzB,EAAMkC,SAAS3E,EAAc,CAAEC,OAAQiE,EAAMlB,c,uDAIrC,IAAD,OACP,OACE,sBAAKU,MAAO,CAAEF,MAAO,OAAQC,OAAQ,OAAQ4D,SAAU,QAAvD,UACGzH,KAAKqD,MAAMX,kBAAkBhB,OAAOuF,KAAI,SAAC3C,EAAO4C,GAAW,IAAD,EACzD,OACE,sBAEEpD,MAAO,CACLqB,SAAU,WACVvB,MAAO,OACPC,OAAQ,OACRuB,QAAS,OACTC,eAAgB,SAChBC,WAAY,UARhB,UAWE,uBACExB,MAAO,CACLyB,MAAO,OACPwB,WAAY,gBACZvB,WAAY,OACZL,SAAU,WACVM,SAAU,MACVC,OAAQ,GAPZ,oBAUGkC,OAAOC,kBAVV,aAUG,EAAmBC,SAVtB,WAYA,cAAC,EAAD,CAAO1E,UAAS,OAAEkB,QAAF,IAAEA,OAAF,EAAEA,EAAOjE,OAAQmD,QAAS,EAAKqD,iBAtB1CK,MA2BVlH,KAAKqD,MAAMX,kBAAkBd,WAAWqF,KAAI,SAACc,EAAQb,GAAW,IAAD,EAC9D,OACE,sBAEEpD,MAAO,CACLqB,SAAU,WACVvB,MAAO,OACPC,OAAQ,OACRuB,QAAS,OACTC,eAAgB,SAChBC,WAAY,UARhB,UAWE,uBACExB,MAAO,CACLyB,MAAO,OACPwB,WAAY,gBACZvB,WAAY,OACZL,SAAU,WACVM,SAAU,MACVC,OAAQ,GAPZ,oBAUGkC,OAAOC,kBAVV,aAUG,EAAmBC,SAVtB,WAYA,cAAC,EAAD,CAAO1E,UAAS,OAAE2E,QAAF,IAAEA,OAAF,EAAEA,EAAQ1H,OAAQmD,QAAS,EAAKqD,iBAtB3CK,a,GA3CMR,aAqFVxG,oBAZf,SAAyB8B,GACvB,MAAO,CACLU,kBAAmBV,EAAMU,sBAI7B,SAA4BqC,GAC1B,MAAO,CACL3E,cAAe,SAACX,GAAD,OAAUsF,EAAS3E,EAAcX,QAIrCS,CAA6CyH,ICtFtDK,G,uKAEF,OACE,qBAAKlE,MAAO,CAAEF,MAAO,OAAQC,OAAQ,QAArC,SACE,cAAC,GAAD,U,GAJkB6C,aAuBXxG,oBAbf,SAAyB8B,GACvB,MAAO,CACLE,YAAaF,EAAME,eAWiB,KAAzBhC,CAA+B8H,I,UCE/BC,G,kDA3BL,WAAY5E,GAAQ,IAAD,8BACT,cAAMA,IACDrB,MAAQ,GACb,EAAKkG,MAAQ,EAHJ,E,qDAOT,OACU,cAAC,KAAD,CACUC,QAAS,EACTC,QAAS,EACTC,MAAO,EACPjH,OAAQ,YAA6C,IAA1CkH,EAAyC,EAAzCA,UAAyC,EAA9BD,MAA8B,EAAvBD,QAAuB,EAAdD,QAC5B,OACU,qBAAKrE,MAAO,CAAEqB,SAAU,WAAYa,OAAQ,EAAGjC,WAAY,OAAQyB,WAAY,IAAKM,IAAK,EAAGyC,MAAO,GAAnG,SACU,oBAAGzE,MAAO,CAAE0E,OAAQ,EAAGpD,QAAS,OAAQE,WAAY,SAAUmD,SAAU,IAAxE,UACU,mBAAG3E,MAAO,CAAE2E,SAAU,IAAKvC,UAAU,iBAArC,mBACCoC,c,GAlB7D5B,aCEdgC,G,4MAMIxF,kBAAoB,WAAO,IAAD,EAChB,EAAKC,SAASC,UAAd,UAA0B,EAAKC,MAAMlB,uBAArC,aAA0B,EAA4B9B,Q,EAGhEiD,mBAAqB,SAACC,GAAe,IAAD,EAGoC,GAF9DoF,QAAQC,IAAR,UAAY,EAAKvF,MAAMlB,uBAAvB,aAAY,EAA4B9B,QAEpCkD,EAAUpB,kBAAoB,EAAKkB,MAAMlB,mBACnC,EAAKgB,SAASC,UAAd,UAA0B,EAAKC,MAAMlB,uBAArC,aAA0B,EAA4B9B,S,uDAIhE,IAAD,OACC,OACU,sBAAKyD,MAAO,CAAEqB,SAAU,WAAYvB,MAAO,OAAQC,OAAQ,OAAQE,WAAY,SAA/E,UACU,cAAC,GAAD,IACA,uBAAOL,UAAQ,EAACC,IAAK,SAACkF,GAAS,EAAK1F,SAAW0F,GAAM/E,MAAO,CAAEqB,SAAU,WAAYvB,MAAO,OAAQC,OAAQ,OAAQE,WAAY,kB,GAtB9I2C,aA0CVxG,oBAbf,SAAyB8B,GACf,MAAO,CACGG,gBAAiBH,EAAMG,mBAWH,KAAzBjC,CAA+BwI,I,sCC/CxCI,GAE2B,8BAF3BA,GAGkB,qBAHlBA,GAIoB,uBAJpBA,GAKiB,aALjBA,GAQqB,wBARrBA,GASqB,wBATrBA,GAUiB,oBAVjBA,GAWiB,mBAXjBA,GAYkB,sBAZlBA,GAa0B,6BAb1BA,GAciB,qBAIjBC,GACgB,uBADhBA,GAEiB,wBAFjBA,GAGc,iBAHdA,GAIc,iBAJdA,GAMuB,0BANvBA,GAOY,eAPZA,GAQY,eARZA,GASc,iBATdA,GAUa,gBC5BbC,GAAO,CACHC,WAAW,EACXC,cAAc,EACdC,cAASC,GCQbC,GAAY,CAChB1H,MAAO,YACP2C,MAAO,YACPyD,OAAQ,cAEJuB,GAAU,CACdC,SAAU,WACVC,SAAU,WACVC,WAAY,aACZC,UAAW,YACXC,WAAY,aACZC,UAAW,YACXC,YAAa,cACbC,WAAY,cAGRC,G,WACJ,WAAYC,EAAiBnK,EAAQoK,EAASC,EAAMf,EAAUgB,GAAkB,IAAD,gCA2B/EC,WA3B+E,uCA2BlE,WAAOC,EAAUlB,GAAjB,eAAAmB,EAAA,sEACW,EAAKzK,OAAOL,QAAQsJ,GAA2B,CAAEuB,WAAUlB,aADtE,OACLoB,EADK,OAEX5B,QAAQC,IAAI2B,GAFD,2CA3BkE,6DAgC/EC,KAhC+E,uCAgCxE,WAAON,EAAMD,EAASd,GAAtB,yBAAAmB,EAAA,sEACC,EAAKzK,OAAOL,QAAQsJ,GAA8B,CAAEhB,SAAUoC,EAAMG,SAAUJ,EAASd,aADxF,uBAEc,EAAKtJ,OAAOL,QAAQuJ,IAFlC,cAECtJ,EAFD,OAGLkJ,QAAQC,IAAInJ,GAHP,SAIc,EAAKgL,WAAWhL,GAJ9B,cAIDiL,EAJC,OAKL,EAAKA,OAASA,EALT,UAMC,EAAKC,eAAeD,GANrB,yBAQgB,EAAK7K,OAAOL,QAAQsJ,IARpC,QAYL,IAJM8B,EARD,OASCC,EAAS,IAAI7J,IACnB2H,QAAQC,IAAI,SAASgC,GAEZ1D,EAAQ,EAAGA,EAAQ0D,EAAO5D,OAAQE,IACrC0D,EAAO1D,GAAO4D,WAAa,EAAKjL,OAAO4D,KACzCkF,QAAQC,IAAI,WACNmC,EAAalI,EAAMmI,WAAWjJ,kBAAkBkJ,IAAIL,EAAO1D,GAAO4D,UACxED,EAAOK,IAAIN,EAAO1D,GAAO4D,SAAU,CAAE5F,QAAQ,EAAOvD,MAAK,OAAEoJ,QAAF,IAAEA,OAAF,EAAEA,EAAYpJ,MAAO2C,MAAK,OAAEyG,QAAF,IAAEA,OAAF,EAAEA,EAAYzG,SAhBhG,OAmBLzB,EAAMkC,SAAS9D,EAAgB4J,IAC/BhI,EAAMkC,SAASlE,EAAc+J,EAAOO,QAAO,SAAAC,GAAK,OAAIA,EAAM3H,KAAO,EAAK5D,OAAO4D,QApBxE,UAqBC,EAAK5D,OAAOC,KAAKiJ,IArBlB,4CAhCwE,+DAwD/E0B,WAxD+E,uCAwDlE,WAAOY,GAAP,eAAAf,EAAA,sDAEX,IACEI,EAAS,IAAI,EAAKV,gBAAgBsB,OAClC,MAAOC,GACY,qBAAfA,EAAMrB,MACRvB,QAAQ4C,MAAM,yBAEhB5C,QAAQ4C,MAAMA,GARL,gBAULb,EAAOc,KAAK,CAChBH,0BAXS,gCAaJX,GAbI,2CAxDkE,2DAwE/EC,eAxE+E,uCAwE9D,WAAOD,GAAP,iBAAAJ,EAAA,sEAGM,EAAKzK,OAAOL,QAAQuJ,GAA6B,CAClE0C,UAAU,EACVC,gBAAiBhB,EAAOgB,kBALb,YAGPjM,EAHO,QAQJ8L,MARI,uBASX5C,QAAQ4C,MAAM9L,EAAK8L,OATR,iCAYb,EAAKI,kBAAoBjB,EAAOkB,oBAAoBnM,GAEpD,EAAKkM,kBAAkBE,GAAG,UAA1B,uCAAqC,aAA2BC,EAAUC,GAArC,eAAAzB,EAAA,6DAAS0B,EAAT,EAASA,eAC5CrD,QAAQC,IAAIoD,GADuB,kBAG3B,EAAKnM,OAAOL,QAAQuJ,GAA8B,CAAEiD,iBAAgBC,aAAcxM,EAAKgE,KAH5D,OAIjCqI,IAJiC,gDAMjCC,EAAQ,EAAD,IAN0B,yDAArC,sCAAA/L,KAAA,gBAUA,EAAK2L,kBAAkBE,GAAG,UAA1B,uCAAqC,aAAgCC,EAAUC,GAA1C,uBAAAzB,EAAA,6DAAS4B,EAAT,EAASA,KAAMC,EAAf,EAAeA,cAAf,kBAEY,EAAKtM,OAAOL,QAAQuJ,GAA2B,CAC1FqD,oBAAqB,EAAKT,kBAAkBlI,GAC5CyI,OACAC,kBAL+B,gBAEzBE,EAFyB,EAEzBA,YAAaC,EAFY,EAEZA,cAKrBR,EAAS,CAAErI,GAAI4I,EAAaC,kBAPK,kDASjCP,EAAQ,EAAD,IAT0B,0DAArC,sCAAA/L,KAAA,gBAaA,EAAK2L,kBAAkBE,GAAG,yBAAyB,SAAC7J,GAClD,OAAQA,GACN,IAAK,aAEL,IAAK,YAEH,MACF,IAAK,SACH,EAAK2J,kBAAkBY,YA7ChB,UAuDM,EAAK1M,OAAOL,QAAQuJ,GAA6B,CAAE0C,UAAU,IAvDnE,aAuDPhM,EAvDO,QAwDJ8L,MAxDI,wBAyDX5C,QAAQ4C,MAAM9L,EAAK8L,OAzDR,2BA6Db,EAAKiB,kBAAoB9B,EAAO+B,oBAAoBhN,GACpD,EAAK+M,kBAAkBX,GAAG,UAA1B,uCAAqC,aAA2BC,EAAUC,GAArC,eAAAzB,EAAA,6DAAS0B,EAAT,EAASA,eAAT,kBAE3B,EAAKnM,OAAOL,QAAQuJ,GAA8B,CAAEkD,aAAc,EAAKO,kBAAkB/I,GAAIuI,mBAFlE,OAGjCF,IAHiC,gDAKjCC,EAAQA,GALyB,yDAArC,sCAAA/L,KAAA,gBASA,EAAKwM,kBAAkBX,GAAG,wBAA1B,uCAAmD,WAAO7J,GAAP,SAAAsI,EAAA,2DACzCtI,EADyC,OAE1C,eAF0C,OAK1C,cAL0C,OAU1C,WAV0C,sEAW7C,EAAKwK,kBAAkBD,QAXsB,iGAAnD,kCAAAvM,KAAA,gBAvEa,4CAxE8D,2DAoK/E0M,YAAc,WACZ,EAAK7M,OAAOgM,GAAG,mBAAmB,SAACpM,GACjCkJ,QAAQC,IAAInJ,GACZoD,EAAMkC,SAASxD,EAAW9B,OAG5B,EAAKI,OAAOgM,GAAG,eAAf,uCAA+B,qCAAAvB,EAAA,6DAASJ,EAAT,EAASA,KAAT,EAAezG,GAC5CtE,IAAY,KAAS,CACnBD,QAAS,kBACTE,YAAa8K,EAAO,iDACpB7K,UAAW,gBAJgB,SAMR,EAAKQ,OAAOL,QAAQ,iBANZ,OAQ7B,IAFMoL,EANuB,OAOvBC,EAAS,IAAI7J,IACVkG,EAAQ,EAAGA,EAAQ0D,EAAO5D,OAAQE,IACrC0D,EAAO1D,GAAOzD,KAAO,EAAK5D,OAAO4D,KAC7BsH,EAAalI,EAAMmI,WAAWjJ,kBAAkBkJ,IAAIL,EAAO1D,GAAOzD,IACxEoH,EAAOK,IAAIN,EAAO1D,GAAOzD,GAAI,CAAEyB,QAAQ,EAAOvD,MAAK,OAAEoJ,QAAF,IAAEA,OAAF,EAAEA,EAAYpJ,MAAO2C,MAAK,OAAEyG,QAAF,IAAEA,OAAF,EAAEA,EAAYzG,SAG/FzB,EAAMkC,SAASlE,EAAc+J,EAAOO,QAAO,SAAAC,GAAK,OAAIA,EAAM3H,KAAO,EAAK5D,OAAO4D,QAC7EZ,EAAMkC,SAAS9D,EAAgB4J,IAfF,2CAA/B,kCAAA7K,KAAA,gBAkBA,EAAKH,OAAOgM,GAAG,eAAf,uCAA+B,qCAAAvB,EAAA,6DAASJ,EAAT,EAASA,KAAT,EAAezG,GAC5CtE,IAAY,QAAY,CACtBD,QAAS,kBACTE,YAAa8K,EAAO,oDACpB7K,UAAW,gBAJgB,SAMR,EAAKQ,OAAOL,QAAQ,iBANZ,OAQ7B,IAFMoL,EANuB,OAOvBC,EAAS,IAAI7J,IACVkG,EAAQ,EAAGA,EAAQ0D,EAAO5D,OAAQE,IACrC0D,EAAO1D,GAAOzD,KAAO,EAAK5D,OAAO4D,KAC7BsH,EAAalI,EAAMmI,WAAWjJ,kBAAkBkJ,IAAIL,EAAO1D,GAAOzD,IACxEoH,EAAOK,IAAIN,EAAO1D,GAAOzD,GAAI,CAAEyB,QAAQ,EAAOvD,MAAK,OAAEoJ,QAAF,IAAEA,OAAF,EAAEA,EAAYpJ,MAAO2C,MAAK,OAAEyG,QAAF,IAAEA,OAAF,EAAEA,EAAYzG,SAG/FzB,EAAMkC,SAASlE,EAAc+J,EAAOO,QAAO,SAAAC,GAAK,OAAIA,EAAM3H,KAAO,EAAK5D,OAAO4D,QAC7EZ,EAAMkC,SAAS9D,EAAgB4J,IAfF,2CAA/B,kCAAA7K,KAAA,gBAkBA,EAAKH,OAAOgM,GAAG,kBAAkB,YAAsB,IAAnBc,EAAkB,EAAlBA,YAClChE,QAAQC,IAAI,oBAAqB+D,GACjC,EAAKC,eAAeD,MAEtB,EAAK9M,OAAOgM,GAAG9C,GAAf,uCAAwC,WAAOtJ,GAAP,uBAAA6K,EAAA,sDACtC3B,QAAQC,IAAInJ,GACHyH,EAAQ,EAFqB,YAElBA,EAAQzH,EAAKuH,QAFK,yBAGMvH,EAAKyH,GAAvCmF,EAH4B,EAG5BA,YAAa1G,EAHe,EAGfA,SAAUX,EAHK,EAGLA,OAHK,SAI9B,EAAK6H,QAAQR,EAAa1G,EAAUX,GAJN,OAEGkC,IAFH,0DAAxC,kCAAAlH,KAAA,gBAQA,EAAKH,OAAOgM,GAAG,cAAc,WAC3B,EAAKiB,MAAK,OA3NiE,KA+N/EC,QA/N+E,uCA+NrE,WAAO9N,GAAP,6CAAAqL,EAAA,sDAAa0C,EAAb,+BAAwB,KAC5BC,EAAmB,GACnBtL,GAAQ,EACRoG,GAAS,EAHL,KAIA9I,EAJA,cAKDoK,GAAU1H,MALT,SAcD0H,GAAU/E,MAdT,UAiCD+E,GAAUtB,OAjCT,0BAMJkF,EAAmB,CACjBtL,MAAO,CACLqL,SAAUA,GAEZ1I,OAAO,GAET3C,GAAQ,EAZJ,oCAeJsL,EAAmB,CACjBtL,OAAO,EACP2C,MAAO,CACLV,MAAO,CACLsJ,IAAK,IACLC,MAAO,MAETtJ,OAAQ,CACNqJ,IAAK,IACLC,MAAO,MAETH,SAAUA,IA1BV,oCAkCJC,GAAmB,EACnBlF,GAAS,EAnCL,kEAyCH,EAAK2C,OAAO0C,WAAW,UAAazL,EAzCjC,wBA0CNgH,QAAQ4C,MAAM,wBA1CR,+BA6CJ,EAAK8B,cAAcC,IAAIrO,GA7CnB,wBA8CN0J,QAAQC,IAAI,yCAA2C3J,GA9CjD,yCAmDG8I,EAnDH,kCAmDkBwF,UAAUC,aAAaC,kBAnDzC,6DAmDmEF,UAAUC,aAAaE,aAAaT,GAnDvG,mCAmDN5M,EAnDM,KAoDAsN,EAAQhM,EAAQtB,EAAOuN,iBAAiB,GAAKvN,EAAOwN,iBAAiB,GACrEC,EAAS,CACbH,SAEGhM,GAAUoG,IACb+F,EAAOC,UAAY,CACjB,CACEC,IAAK,KACLC,WAAY,IAEZC,gBAAiB,QAEnB,CACEF,IAAK,KACLC,WAAY,IACZC,gBAAiB,QAEnB,CACEF,IAAK,KACLC,WAAY,IACZC,gBAAiB,SAGrBJ,EAAOK,aAAe,CACpBC,wBAAyB,MA5EvB,UA+EgB,EAAKzC,kBAAkBoB,QAAQe,GA/E/C,QA+EN,EAAKO,SA/EC,OAgFN,EAAKC,UAAUpD,IAAI,EAAKmD,SAAS5K,GAAI,EAAK4K,UAGrC1M,IACGO,EADI,eACeW,EAAMmI,WAAW9I,aACpCxB,EAAQwB,EAAYxB,MACpBC,EAASuB,EAAYvB,OAC3BD,EAAM6N,KAAK,CACTlO,SACAoD,GAAI,EAAK4K,SAAS5K,GAClByG,KAAM,EAAKA,KACX1F,UAAU,IAEZ3B,EAAMkC,SAASnE,EAAU,CAAEF,QAAOC,YAClCkC,EAAMkC,SAAS3E,EAAc,CAAEC,aAGjC,EAAKgO,SAASxC,GAAG,cAAc,WAC7BlD,QAAQC,IAAI,qBACZ,EAAK4F,cAAcvP,MAGrB,EAAKoP,SAASxC,GAAG,kBAAkB,WACjClD,QAAQC,IAAI,4BACZ,EAAK0F,UAAUG,OAAO,EAAKJ,SAAS5K,OAGtC,EAAK4K,SAASxC,GAAG,SAAS,WACxBlD,QAAQC,IAAI,oBACZ,EAAK0F,UAAUG,OAAO,EAAKJ,SAAS5K,OAGtC,EAAK4J,cAAcnC,IAAIjM,EAAM,EAAKoP,SAAS5K,IAhHrC,KAkHExE,EAlHF,cAmHCoK,GAAU1H,MAnHX,UAsHC0H,GAAU/E,MAtHX,UAyHC+E,GAAUtB,OAzHX,2BAoHF,EAAK2G,MAAMpF,GAAQK,YApHjB,oCAuHF,EAAK+E,MAAMpF,GAAQG,YAvHjB,oCA0HF,EAAKiF,MAAMpF,GAAQO,aA1HjB,kHAiINlB,QAAQC,IAAR,MAjIM,2DA/NqE,2DAoW/EiE,QApW+E,uCAoWrE,WAAOR,EAAa1G,EAAUX,GAA9B,eAAAsF,EAAA,sDAEJqE,EAAa,EAAKC,SAAS/L,EAAMmI,WAAWjJ,mBAChD,EAAK8M,iBAAiBxC,GAAayC,MAAK,YAAiC,IAA9BC,EAA6B,EAA7BA,SAAU1O,EAAmB,EAAnBA,OAAQ6L,EAAW,EAAXA,KAC3D,EAAK8C,UAAU9D,IAAI6D,EAAStL,GAAIsL,GAChC,IAAIE,EAAcN,EAAW1D,IAAIjG,GAE5BiK,IAGQ,UAAT/C,EACF+C,EAAY3K,MAAQ,CAAErF,KAAM,QAASoB,SAAQoD,GAAIsL,EAAStL,IAE1DwL,EAAYtN,MAAQ,CAAE1C,KAAM,QAASoB,SAAQoD,GAAIsL,EAAStL,IAE5DkF,QAAQC,IAAI,MAAMvI,GAElBwC,EAAMkC,SAAS9D,EAAgB0N,IAC/BI,EAASlD,GAAG,cAAc,WACxBlD,QAAQC,IAAI,qBACZ,EAAKgE,eAAemC,EAAStL,OAE/BsL,EAASlD,GAAG,kBAAkB,WAC5BlD,QAAQC,IAAI,2BACZ,EAAKgE,eAAemC,EAAStL,WAxBzB,2CApWqE,+DAiY/EoL,iBAjY+E,uCAiY5D,WAAOK,GAAP,+BAAA5E,EAAA,6DACToB,EAAoB,EAAKhB,OAAzBgB,gBADS,SAEE,EAAK7L,OAAOL,QAAQuJ,GAA2B,CAChE2C,kBACAyD,oBAAqB,EAAK3C,kBAAkB/I,GAC5CyL,eALe,cAEXzP,EAFW,SAOmBA,EAAKqO,OAAjCrK,EAPS,EAOTA,GAAIyI,EAPK,EAOLA,KAAMC,EAPD,EAOCA,cAEdgC,EAAe,GATF,SAUM,EAAK3B,kBAAkBK,QAAQ,CACpDpJ,KACAyL,aACAhD,OACAC,gBACAgC,iBAfe,cAUXY,EAVW,OAiBjBpG,QAAQC,IAAImG,EAASpB,QAEftN,EAAS,IAAI+O,aACZC,SAASN,EAASpB,OApBR,kBAqBV,CAAEoB,WAAU1O,SAAQ6L,SArBV,4CAjY4D,2DAyZ/EsC,cAAgB,SAACvP,GACf,GAAK,EAAKoO,cAAcC,IAAIrO,GAA5B,CAIA,IAAIoN,EAAc,EAAKgB,cAAcpC,IAAIhM,GAMzC,GALA,EAAKY,OAAOC,KAAK,iBAAkB,CAAEuM,gBACrC,EAAKiC,UAAUrD,IAAIoB,GAAaE,QAChC,EAAK+B,UAAUG,OAAOpC,GACtB,EAAKgB,cAAcoB,OAAOxP,GAEtBA,IAASoK,GAAU1H,MAAO,CAC5B,IAAMO,EAAcW,EAAMmI,WAAW9I,YAC/BvB,EAASuB,EAAYvB,OAAOwK,QAAO,SAACC,GAAD,OAAWA,EAAM3H,KAAO4I,KAC3D3L,EAAQwB,EAAYxB,MAAMyK,QAAO,SAACC,GAAD,OAAWA,EAAM3H,KAAO4I,KAC/DxJ,EAAMkC,SAASnE,EAAU,CAAEF,QAAOC,YAGpC,OAAQ1B,GACN,KAAKoK,GAAU1H,MACb,EAAK+M,MAAMpF,GAAQM,WACnB,MACF,KAAKP,GAAU/E,MACb,EAAKoK,MAAMpF,GAAQI,WACnB,MACF,KAAKL,GAAUtB,OACb,EAAK2G,MAAMpF,GAAQQ,YACnB,MACF,QACE,aA3BFnB,QAAQC,IAAI,sCAAwC3J,IA3ZuB,KAoc/EqQ,eAAiB,SAACrQ,GAChB,GAAK,EAAKoO,cAAcC,IAAIrO,GAA5B,CAIA,IAAIoN,EAAc,EAAKgB,cAAcpC,IAAIhM,GACzC,EAAKqP,UAAUrD,IAAIoB,GAAakD,cAJ9B5G,QAAQC,IAAI,sCAAwC3J,IAtcuB,KA6c/E2N,eAAiB,SAACD,GAChB,IAAIgC,EAAa,EAAKC,SAAS/L,EAAMmI,WAAWjJ,mBAChD4M,EAAWa,SAAQ,SAAAC,GAAS,IACpB9N,EAAiB8N,EAAjB9N,MAAO2C,EAAUmL,EAAVnL,MACT3C,GACEA,EAAM8B,KAAOkJ,IACf8C,EAAK9N,MAAQ,MAIb2C,GACEA,EAAMb,KAAOkJ,IACf8C,EAAKnL,MAAQ,SAKnBzB,EAAMkC,SAAS9D,EAAgB0N,IAC/B,EAAKK,UAAUP,OAAO9B,IA/duD,KAuf/E+C,kBAAoB,aAvf2D,KA2f/Ed,SAAW,SAACe,GACV,IADsB,EAChB9E,EAAS,IAAI7J,IADG,eAEK2O,GAFL,IAEtB,2BAAoC,CAAC,IAAD,0BAAxBC,EAAwB,KAAnBxE,EAAmB,KAClCP,EAAOK,IAAI0E,EAAKxE,IAHI,8BAKtB,OAAOP,GAhgBsE,KAmgB/EgF,WAngB+E,sBAmgBlE,4BAAAvF,EAAA,sEACY,EAAKzK,OAAOL,QAAQ,cADhC,OACLsQ,EADK,OAEXnH,QAAQC,IAAIkH,GACZjN,EAAMkC,SAASxD,EAAWuO,IAHf,2CAngBkE,KAygB/EC,SAzgB+E,sBAygBpE,4BAAAzF,EAAA,sEACQ,EAAKzK,OAAOL,QAAQ,YAD5B,cACLwQ,EADK,yBAEFA,GAFE,2CAzgBoE,KA8gB/EC,eA9gB+E,sBA8gB9D,4BAAA3F,EAAA,sEACG,EAAKzK,OAAOL,QAAQ,aAAcwJ,GAAKG,UAD1C,OACT+G,EADS,OAEfhR,KAAQ8Q,KAAKE,GAFE,2CA9gB8D,KAwhB/ExB,MAAQ,SAACyB,GACPxH,QAAQC,IAAIuH,GACR,EAAKC,eAAe9C,IAAI6C,IAC1B,EAAKC,eAAenF,IAAIkF,GAAKX,SAAQ,SAAC1D,GAAD,OAAcA,QA3hBwB,KA+hB/ED,GAAK,SAACsE,EAAKrE,GACT,EAAKsE,eAAenF,IAAIkF,GAAK5B,KAAKzC,IAhiB2C,KAmiB/EuE,OAAS,WACP,OAAO,EAAKC,SAniBZtQ,KAAKkK,KAAOA,EACZlK,KAAKgK,gBAAkBA,EACvBhK,KAAKH,OAASA,EACdG,KAAK2L,kBAAoB,KACzB3L,KAAKwM,kBAAoB,KACzBxM,KAAK0K,OAAS,KACd1K,KAAKiK,QAAUA,EACfjK,KAAKgP,UAAY,IAAIhO,IACrBhB,KAAKsO,UAAY,IAAItN,IACrBhB,KAAKqN,cAAgB,IAAIrM,IACzBhB,KAAKsQ,SAAU,EACftQ,KAAKoQ,eAAiB,IAAIpP,IAC1BuP,OAAOC,KAAKlH,IAASkG,SAAQ,SAACW,GAC5B,EAAKC,eAAelF,IAAIiF,EAAK,OAE/BnQ,KAAKmJ,SAAWA,EAChBnJ,KAAKoK,WAAWH,EAASd,GAAU2F,KAAnC,sBAAwC,sBAAAxE,EAAA,sEAChC,EAAKE,KAAKN,EAAMD,EAASd,GADO,cAEtCR,QAAQC,IAAI,QAF0B,SAGhC,EAAK8D,cAH2B,OAItC,EAAK4D,SAAU,EACf3H,QAAQC,IAAI,mBACZuB,IANsC,4C,0DA0a5BlL,GACZ,GAAKe,KAAKqN,cAAcC,IAAIrO,GAA5B,CAIA,IAAIoN,EAAcrM,KAAKqN,cAAcpC,IAAIhM,GACzCe,KAAKsO,UAAUrD,IAAIoB,GAAaoE,aAJ9B9H,QAAQC,IAAI,sCAAwC3J,K,6BAqCjC,IAAD,OAAjByR,EAAiB,wDAChBC,EAAQ,WACV,EAAKL,SAAU,EACf,EAAK9D,kBAAkBD,QACvB,EAAKZ,kBAAkBY,QACvB,EAAK1M,OAAO+Q,IAAI,cAChB,EAAK/Q,OAAO+Q,IAAI,gBAChB,EAAK/Q,OAAO+Q,IAAI,kBAChB,EAAK/Q,OAAO+Q,IAAI,gBAChB,EAAK/Q,OAAO+Q,IAAI,iBAGbF,EAGHC,IAFA3Q,KAAKH,OAAOL,QAAQ,YAAYsP,MAAK,SAACnK,GAAD,OAAOgE,QAAQC,IAAIjE,MAAIkM,OAAM,SAAClM,GAAD,OAAOgE,QAAQmI,KAAKnM,MAAIoM,SAAQ,WAAQJ,OAI5G9N,EAAMkC,SAASnE,EAAU,CAAEF,MAAO,GAAIC,OAAQ,MAC9CX,KAAK0O,MAAMpF,GAAQC,a,iCAiCnB,OAAOF,K,6BAmBP,OAAOC,O,KC/jBU0H,G,kDAKX,WAAY3N,GAAQ,IAAD,8BACT,cAAMA,IAKhBH,kBANmB,sBAMC,kCAAAoH,EAAA,sEACY1C,OAAO2F,UAAUC,aAAayD,mBAD1C,OAGV,IAFMC,EADI,OAEJ5M,EAAQ,GACL4C,EAAQ,EAAGA,EAAQgK,EAAQlK,OAAQE,IAEV,gBADlBiK,EAAaD,EAAQhK,IACZgF,MACL5H,EAAMiK,KAAK,CAAE4C,aAAYjM,QAAQ,IAKrD,EAAKX,SAAS,CAAED,UAXN,2CAND,EAoBnB8M,qBApBmB,uCAoBI,WAAOhN,EAAM8C,GAAb,uBAAAoD,EAAA,sDACP+G,EAAe,EAAKrP,MAAMsC,MACvBkD,EAAI,EAFA,YAEGA,EAAI6J,EAAarK,QAFpB,oBAGGvF,EAAU4P,EAAa7J,GACzBA,IAAMN,EAJP,wBAKOzF,EAAQyD,QAAS,EALxB,mBAMa0C,OAAOC,kBANpB,aAMa,EAAmB2G,cAAczE,GAAWV,UAAU/E,OANnE,OAOO,UAAAsD,OAAOC,kBAAP,SAAmBkF,QAAQhD,GAAWV,UAAU/E,MAAO7C,EAAQ0P,WAAWnE,UAPjF,wBASOvL,EAAQyD,QAAS,EATxB,QAE4BsC,IAF5B,uBAYb,EAAKjD,SAAS,CAAED,MAAO+M,IAZV,4CApBJ,wDAET,EAAKrP,MAAQ,CAAEsC,MAAO,IAFb,E,qDAmCT,IAAD,OACC,OACU,sBAAK4B,UAAU,YAAf,UACU,sBAAKA,UAAU,MAAf,UAAqB,mBAAGA,UAAU,iBAAb,uBAA2C,2CAC/DlG,KAAKgC,MAAMsC,MAAM2C,KAAI,SAAC7C,EAAM8C,GACnB,OAAO,sBAAK1D,QAAS,kBAAM,EAAK4N,qBAAqBhN,EAAM8C,IAApD,cAAoF,sBAAKhB,UAAU,cAAf,UAA8B9B,EAAKc,OAAS,mBAAGgB,UAAU,iBAAb,oBAA2C,mBAAGA,UAAU,iBAAb,uBAA4C,+BAAQ9B,EAAK+M,WAAWG,aAA9K,SAAWpK,QAHxE,c,GA1CnBR,aCCpC6K,G,uKAEF,OACE,qBAAKzN,MAAO,CAAEF,MAAO,OAAQC,OAAQ,QAArC,SACE,cAAC,GAAD,U,GAJiB6C,aAuBVxG,oBAbf,SAAyB8B,GACvB,MAAO,CACLE,YAAaF,EAAME,eAWiB,KAAzBhC,CAA+BqR,I,UCS/BC,I,yDAnCL,WAAYnO,GAAQ,IAAD,8BACT,cAAMA,IAIhBoO,eAAiB,WACP,IAAMC,EAAOC,SAASC,gBACjB,EAAK5P,MAAM6P,WASNF,SAASG,iBARLJ,EAAKK,kBACCL,EAAKK,oBACJL,EAAKM,wBACNN,EAAKM,0BACJN,EAAKO,qBACNP,EAAKO,sBAMzB,EAAK1N,SAAS,CAAEsN,YAAa,EAAK7P,MAAM6P,cAjBxC,EAAK7P,MAAQ,CAAE6P,YAAY,GAFlB,E,qDAsBT,OACU,sBAAK3L,UAAU,aAAf,UACU,sBAAK1C,QAAS,aAAd,cAA0B,sBAAK0C,UAAU,cAAf,UAA6B,mBAAGA,UAAU,iBAAb,2BAA+C,mEACtG,qBAAK1C,QAASxD,KAAKyR,eAAnB,SACWzR,KAAKgC,MAAM6P,WAAa,sBAAK3L,UAAU,cAAf,UAA6B,mBAAGA,UAAU,iBAAb,8BAAkD,sEAA0C,sBAAKA,UAAU,cAAf,UAA6B,mBAAGA,UAAU,iBAAb,yBAA6C,+DAEtO,sBAAK1C,QAAS,aAAd,cAA0B,sBAAK0C,UAAU,cAAf,UAA6B,mBAAGA,UAAU,iBAAb,kBAAsC,mDAC7F,sBAAK1C,QAAS,aAAd,cAA0B,sBAAK0C,UAAU,cAAf,UAA6B,mBAAGA,UAAU,iBAAb,uBAA2C,2D,GA9B9GQ,cCEPwL,G,kDAKX,WAAY7O,GAAQ,IAAD,8BACT,cAAMA,IAKhBH,kBANmB,sBAMC,oCAAAoH,EAAA,sEACY1C,OAAO2F,UAAUC,aAAayD,mBAD1C,OAIV,IAHMC,EADI,OAEJiB,EAAM,GACNC,EAAU,GACPlL,EAAQ,EAAGA,EAAQgK,EAAQlK,OAAQE,IAEV,gBADlBiK,EAAaD,EAAQhK,IACZgF,MACLiG,EAAI5D,KAAK,CAAE4C,aAAYjM,OAAgC,YAAxBiM,EAAWnE,WAE5B,gBAApBmE,EAAWjF,MACLkG,EAAQ7D,KAAK,CAAE4C,aAAYjM,OAAgC,YAAxBiM,EAAWnE,WAIlE,EAAKzI,SAAS,CAAE4N,MAAKC,YAdX,2CAND,EAuBnBC,kBAAoB,SAACjO,EAAM8C,GAEjB,IADA,IAAMoL,EAAa,EAAKtQ,MAAMmQ,IACrB3K,EAAI,EAAGA,EAAI8K,EAAWtL,OAAQQ,IAAK,CAClC,IAAM/F,EAAU6Q,EAAW9K,GAEjB/F,EAAQyD,OADdsC,IAAMN,EAOpB,EAAK3C,SAAS,CAAE4N,IAAKG,KAlCZ,EAqCnBlB,qBAAuB,SAAChN,EAAM8C,GAEpB,IADA,IAAMqL,EAAiB,EAAKvQ,MAAMoQ,QACzB5K,EAAI,EAAGA,EAAI+K,EAAevL,OAAQQ,IAAK,CACtC,IAAM/F,EAAU8Q,EAAe/K,GAErB/F,EAAQyD,OADdsC,IAAMN,EAMpB,EAAK3C,SAAS,CAAE6N,QAASG,KA7CzB,EAAKvQ,MAAQ,CAAEmQ,IAAK,GAAIC,QAAS,IAFxB,E,qDAkDT,IAAD,OACC,OACU,sBAAKlM,UAAU,YAAf,UACU,sBAAKA,UAAU,MAAf,UAAqB,mBAAGA,UAAU,iBAAb,kBAAsC,gDAC1DlG,KAAKgC,MAAMmQ,IAAIlL,KAAI,SAAC7C,EAAM8C,GACjB,OAAO,qBAAK1D,QAAS,kBAAM,EAAK6O,kBAAkBjO,EAAM8C,IAAQhB,UAAW9B,EAAKc,OAAS,SAAW,GAA7F,SAAsH,sBAAKgB,UAAU,cAAf,UAA8B9B,EAAKc,OAAS,mBAAGgB,UAAU,iBAAb,oBAA2C,mBAAGA,UAAU,iBAAb,kBAAuC,+BAAQ9B,EAAK+M,WAAWG,YAAtK,MAAQpK,MAE/H,sBAAKhB,UAAU,MAAf,UAAqB,mBAAGA,UAAU,iBAAb,wBAA4C,4CAChElG,KAAKgC,MAAMoQ,QAAQnL,KAAI,SAAC7C,EAAM8C,GACrB,OAAO,qBAAK1D,QAAS,kBAAM,EAAK4N,qBAAqBhN,EAAM8C,IAAQhB,UAAW9B,EAAKc,OAAS,SAAW,GAAhG,SAA4H,sBAAKgB,UAAU,cAAf,UAA8B9B,EAAKc,OAAS,mBAAGgB,UAAU,iBAAb,oBAA2C,mBAAGA,UAAU,iBAAb,wBAA6C,+BAAQ9B,EAAK+M,WAAWG,YAA/K,UAAYpK,QAPjH,W,GAzDtBR,aCKjC8L,I,yDACI,WAAYnP,GAAQ,IAAD,8BACT,cAAMA,IAGhBoP,aAAe,WACL9J,QAAQC,IAAI,gBACZ,EAAKvF,MAAMtC,oBAJX,EAAKiB,MAAQ,CAAE0Q,WAAY1J,GAAKE,aAAcyJ,QAAS3J,GAAKC,WAFnD,E,qDAQT,IAAD,OACS7G,EAAoBpC,KAAKqD,MAAzBjB,gBACR,OACU,sBACU8D,UAAU,aACVpC,MAAO,CACGF,MAAO,OACPC,OAAQ,OACRwB,eAAgB,SAChBC,WAAY,SACZF,QAAS,OACTD,SAAU,YAR9B,UAWU,sBAAKrB,MAAO,CAAEqB,SAAU,WAAYY,KAAM,EAAGX,QAAS,QAAtD,UACU,cAAC,KAAD,CAAQtB,MAAO,CAAE0E,OAAQ,WACfhF,QAASxD,KAAKqD,MAAMuP,cACpBnM,KAAK,QACLb,MAAM,SACNK,KAAM,mBAAGC,UAAU,iBAAb,oBAEhB,cAAC,KAAD,CAAQpC,MAAO,CAAE0E,OAAQ,WACfhF,QAASxD,KAAKqD,MAAMwP,kBACpBpM,KAAK,QACLb,MAAM,SACNK,KAAM,mBAAGC,UAAU,iBAAb,wBAEhB,cAAC,KAAD,CAAU4M,QAAS,cAACC,GAAD,IAAmBC,QAAS,CAAC,SAAhD,SACU,cAAC,KAAD,CAAQlP,MAAO,CAAE0E,OAAQ,WAEf/B,KAAK,QACLb,MAAM,SACNK,KAAM,mBAAGC,UAAU,iBAAb,sBAlBpC,OAwBA,cAAC,KAAD,CACU1C,QAASxD,KAAKqD,MAAM4P,mBACpBnP,MAAO,CAAE0E,OAAQ,WACjB/B,KAAK,QACLb,MAAM,SACNK,KAAM,mBAAGC,UAAU,iBAAb,kBAGflG,KAAKgC,MAAM2Q,QAAU,sBAAK7O,MAAO,CAAEqB,SAAU,YAAxB,UACZ,cAAC,KAAD,CACU3B,QAAS,WAAQ,EAAKH,MAAM6P,YAAa,EAAK3O,SAAS,CAAEoO,SAAS,KAClE7O,MAAO,CAAE0E,OAAQ,WACjB/B,KAAK,QACLb,MAAM,SACNK,KAAM,mBAAGC,UAAU,iBAAb,mBAGhB,cAAC,KAAD,CAAUiN,aAAa,EAAMH,QAAS,CAAC,SAAUF,QAAS,cAAC,GAAD,IAA1D,SACU,cAAC,KAAD,CAEUrM,KAAK,QACLb,MAAM,SACN9B,MAAO,CAAEqB,SAAU,WAAYO,QAAS,EAAG6C,OAAQ,GACnDtC,KAAM,mBAAGC,UAAU,iBAAb,0BAJF,aAX8B,OAmBvD,cAAC,KAAD,CACC1C,QAAS,WAAQ,EAAKH,MAAM+P,YAAa,EAAK7O,SAAS,CAAEoO,SAAS,KAClE7O,MAAO,CAAE0E,OAAQ,WACjB/B,KAAK,QACLb,MAAM,SACNK,KAAM,mBAAGC,UAAU,iBAAb,uBAKhB,cAAC,KAAD,CACUpC,MAAO,CAAE0E,OAAQ,WACjB/B,KAAK,QACLxH,KAAK,UACL2G,MAAM,SACNC,QAAM,EACNI,KAAM,mBAAGC,UAAU,iBAAb,sBACN1C,QAASxD,KAAKqD,MAAMgQ,YAG7BrT,KAAKgC,MAAM0Q,WACF,sBAAK5O,MAAO,CAAEqB,SAAU,YAAxB,UACU,cAAC,KAAD,CACU3B,QAAS,WAAQ,EAAKH,MAAMiQ,eAAgB,EAAK/O,SAAS,CAAEmO,YAAY,KACxE5O,MAAO,CAAE0E,OAAQ,WACjB/B,KAAK,QACLb,MAAM,SACNK,KAAM,mBAAGC,UAAU,iBAAb,wBAGhB,cAAC,KAAD,CAAUiN,aAAa,EAAMH,QAAS,CAAC,SAAUF,QAAS,cAAC,GAAD,IAA1D,SAEU,cAAC,KAAD,CACUrM,KAAK,QACLb,MAAM,SACN9B,MAAO,CAAEqB,SAAU,WAAYO,QAAS,EAAG6C,OAAQ,GACnDtC,KAAM,mBAAGC,UAAU,iBAAb,+BAfM,UAqBhC,cAAC,KAAD,CACU1C,QAAS,WAAQ,EAAKH,MAAMkQ,eAAgB,EAAKhP,SAAS,CAAEmO,YAAY,KACxE5O,MAAO,CAAE0E,OAAQ,WACjB/B,KAAK,QACLb,MAAM,SACNK,KAAM,mBAAGC,UAAU,iBAAb,4BAIpC,sBAAKpC,MAAO,CAAEqB,SAAU,WAAYoD,MAAO,EAAGnD,QAAS,QAAvD,UACWhD,EAAgB4E,OAAS,EAAI,cAAC,KAAD,CAAQlD,MAAO,CAAE0E,OAAQ,WAAa/B,KAAK,QAAQjD,QAASxD,KAAKyS,aAAc7M,MAAM,SAASK,KAAM,mBAAGC,UAAU,iBAAb,uBACtH,KACZ,cAAC,KAAD,CAAQ1C,QAASxD,KAAKqD,MAAMmQ,YAAa1P,MAAO,CAAE0E,OAAQ,WAAa/B,KAAK,QAAQb,MAAM,SAASK,KAAM,mBAAGC,UAAU,iBAAb,0BAEzG,cAAC,KAAD,CAAQ1C,QAASxD,KAAKqD,MAAMoQ,gBAAiB3P,MAAO,CAAE0E,OAAQ,WAAa/B,KAAK,QAAQb,MAAM,SAASK,KAAM,mBAAGC,UAAU,iBAAb,oC,GAlItIQ,cAyJVxG,oBAff,SAAyB8B,GACf,MAAO,CACGE,YAAaF,EAAME,YACnBE,gBAAiBJ,EAAMI,oBAI3C,SAA4B2C,GAClB,MAAO,CACGhE,iBAAkB,kBAAMgE,EAAShE,SAMtCb,CAA6CsS,I,oBC1JtDtO,GAAY,CACR,UACA,UACA,UACA,kBACA,UACA,UACA,kBACA,WAGJwP,G,kDACI,WAAYrQ,GAAQ,IAAD,8BACT,cAAMA,IAMhBH,kBAAoB,WAAO,IAAD,IACV+L,EAAc,EAAK5L,MAAMtB,kBAAkBkJ,IAAI,EAAK5H,MAAMe,KAAKX,IACrE,EAAKY,SAASjB,UAAd,OAA0B6L,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAatN,aAAvC,aAA0B,EAAoBtB,OAC9C,EAAK8C,SAASC,UAAd,OAA0B6L,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAa3K,aAAvC,aAA0B,EAAoBjE,OAC1C,EAAK8C,SAASC,UACR,EAAKmB,SAAS,CAAEC,UAAU,IAE1B,EAAKD,SAAS,CAAEC,UAAU,KAd3B,EAkBnBlB,mBAAqB,SAACmB,GACZ,GAAI,EAAKpB,MAAMtB,oBAAsB0C,EAAS1C,kBAAmB,CAAC,IAAD,IACjDkN,EAAc,EAAK5L,MAAMtB,kBAAkBkJ,IAAI,EAAK5H,MAAMe,KAAKX,IACrE,EAAKY,SAASjB,UAAd,OAA0B6L,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAatN,aAAvC,aAA0B,EAAoBtB,OAC9C,EAAK8C,SAASC,UAAd,OAA0B6L,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAa3K,aAAvC,aAA0B,EAAoBjE,OAC1C,EAAK8C,SAASC,UACR,EAAKmB,SAAS,CAAEC,UAAU,IAE1B,EAAKD,SAAS,CAAEC,UAAU,MA1BrC,EA+BnBE,KAAO,SAACC,GACEA,EAAEC,iBACF,IAAMF,EAAO,EAAK1C,MAAM0C,KAId,EAAKL,SAASQ,OAHnBH,EAKL,EAAKH,SAAS,CAAEG,MAAOA,KAvCd,EA0CnBtE,cAAgB,SAACuE,GACP,EAAKtB,MAAMyB,yBACXjC,EAAMkC,SAAS3E,EAAc,CAAEC,OAAQ,EAAK8C,SAASC,aACrD,EAAKC,MAAMtC,kBAAiB,IA3C5B,EAAKiB,MAAQ,CAAE0C,MAAM,EAAOF,UAAU,GACtC,EAAKH,SAAW,KAChB,EAAKlB,SAAW,KAJP,E,qDAkDT,IAAD,aACSwQ,EAAiB3T,KAAKqD,MAAtBsQ,aACR,OACU,qBAAKzN,UAAU,gBAAgBpC,MAAO,CAAEF,MAAM,GAAD,OAAK+P,EAAL,KAAsB9P,OAAO,GAAD,OAAoB,GAAf8P,EAAoB,EAAzB,MAAzE,SACU,qBAAKzN,UAAU,0BAAf,SACU,sBACUzC,GAAIzD,KAAKqD,MAAMe,KAAKX,GACpBD,QAASxD,KAAKI,cACd0D,MAAO,CACGmB,OAAQjF,KAAKqD,MAAMe,KAAKc,OAAS,gBAAkB,OACnDC,SAAU,WACVvB,MAAO,OACPC,OAAQ,OACRuB,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAVhC,UAaU,sBAAMxB,MAAO,CAAEyB,MAAO,OAAQC,WAAY,OAAQL,SAAU,WAAYM,SAAU,MAAOC,OAAQ,GAAjG,mBACW1F,KAAKqD,MAAMe,YADtB,aACW,EAAiB8F,OAE3BlK,KAAKgC,MAAM0C,KACF,cAAC,KAAD,CACUlB,QAASxD,KAAK0E,KACdzF,KAAK,OACL2G,MAAM,SACNC,QAAM,EACN/B,MAAO,CAAEqB,SAAU,WAAYW,IAAK,EAAGC,KAAM,EAAGC,OAAQ,IACxDC,KAAM,mBAAGC,UAAU,iBAAb,0BAGN,cAAC,KAAD,CACUL,QAAM,EACNrC,QAASxD,KAAK0E,KACdzF,KAAK,OACL2G,MAAM,SACN9B,MAAO,CAAEqB,SAAU,WAAYW,IAAK,EAAGC,KAAM,EAAGC,OAAQ,IACxDC,KAAM,mBAAGC,UAAU,iBAAb,yBAGlClG,KAAKgC,MAAMwC,SAmBJ,KAnBe,qBACdf,GAAG,cACHK,MAAO,CACGyB,MAAO,OACPH,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBF,SAAU,WACVgB,aAAc,MACdvC,MAAO,IACPC,OAAQ,KAVJ,SAad,cAAC,KAAD,CACUC,MAAO,CAAEsC,gBAAgB,GAAD,OAAKlC,GAAUmC,KAAKC,MAAsB,GAAhBD,KAAKE,YAAmBC,cAAe,SAAU5C,MAAO,OAAQC,OAAQ,QAC1H4C,KAAK,QAFf,mBAIWzG,KAAKqD,MAAMe,YAJtB,iBAIW,EAAiB8F,KAAK0J,MAAM,qBAJvC,aAIW,EAA2CpJ,KAAK,QAGrE,uBACU7G,IAAK,SAACA,GACI,EAAKR,SAAWQ,GAE1BF,GAAG,QACHC,UAAU,EACVE,MAAO,OACPC,OAAQ,OACRC,MAAO,CAAEC,WAAY,QAASkB,OAAQ,uBAEhD,uBACUtB,IAAK,SAACA,GACI,EAAKU,SAAWV,GAE1BF,GAAG,QACHC,UAAU,e,GA9HrDgD,aAoJZxG,oBAbf,SAAyB8B,GACf,MAAO,CACGD,kBAAmBC,EAAMD,sBAK7C,SAA4BgD,GAClB,MAAO,CACGhE,iBAAkB,SAACtB,GAAD,OAAUsF,EAAShE,SAI1Cb,CAA6CwT,IC/JtDG,I,yDACJ,WAAYxQ,GAAQ,IAAD,8BACjB,cAAMA,IAKRH,kBAAoB,WAAO,IACjBd,EAAoB,EAAKiB,MAAzBjB,gBACJA,EAAgB4E,OAAS,EAC3B,EAAKzC,SAAS,CACZuP,kBAAmB,IAAM1R,EAAgB4E,SAG3C,EAAKzC,SAAS,CACZuP,kBAAmB,MAdN,EAmBnBxQ,mBAAqB,SAACC,GAAe,IAC3BnB,EAAoB,EAAKiB,MAAzBjB,gBACJmB,EAAUnB,kBAAoBA,IAC5BA,EAAgB4E,OAAS,EAC3B,EAAKzC,SAAS,CACZuP,kBAAmB,IAAM1R,EAAgB4E,SAG3C,EAAKzC,SAAS,CACZuP,kBAAmB,KAGnB1R,EAAgB4E,OAAS,GAC3B,EAAK3D,MAAMtC,kBAAiB,KAhCf,EAsCnBqG,sBAAwB,SAAChD,EAAM8C,GAC7B,EAAKG,UAAUH,IAvCE,EA2CnBG,UAAY,SAACH,GAGX,IAFA,IAAMI,EAAa,eAAQ,EAAKjE,MAAMnB,aAChCxB,EAAQ4G,EAAc5G,MACnB6G,EAAI,EAAGA,EAAI7G,EAAMsG,OAAQO,IAAK,CACrB7G,EAAM6G,GACdrC,QAAS,EAGnB,IADA,IAAM6O,EAAMC,MAAMC,KAAK,EAAK5Q,MAAMjB,iBACzBoF,EAAI,EAAGA,EAAGuM,EAAM/M,OAAQQ,IAAK,CACpC,IAAM/F,EAAUsS,EAAMvM,GAEpB/F,EAAQyD,OADNsC,IAAMN,EAMZ,EAAK7D,MAAMxC,cAAckT,GACzB,EAAK1Q,MAAMzC,UAAX,eAA0B0G,KA1D1B,EAAKtF,MAAQ,CACX8R,kBAAmB,GAHJ,E,qDAgET,IAAD,OACC1R,EAAoBpC,KAAKqD,MAAzBjB,gBACA0R,EAAsB9T,KAAKgC,MAA3B8R,kBACR,OACE,qBAAK5N,UAAU,2BAAf,SACG9D,EAAgB6E,KAAI,SAAC7C,EAAM8C,GAC1B,OAAO,cAAC,GAAD,CAAc9C,KAAMA,EAAkBuP,aAAcG,EAAmBhP,uBAAwB,EAAKsC,uBAArEF,Y,GAvEXR,cA6FtBxG,oBAhBf,SAAyB8B,GACvB,MAAO,CACLlB,cAAekB,EAAMM,GAAGxB,cACxBsB,gBAAiBJ,EAAMI,gBACvBF,YAAaF,EAAME,gBAIvB,SAA4B6C,GAC1B,MAAO,CACLhE,iBAAkB,SAACtB,GAAD,OAAUsF,EAAShE,MACrCH,UAAW,SAACnB,GAAD,OAAUsF,EAASnE,EAAUnB,KACxCoB,cAAe,SAACpB,GAAD,OAAUsF,EAASlE,EAAcpB,QAIrCS,CAA6C2T,IC/FtDK,G,4MACJC,aAAe,SAACxP,GACd,EAAKtB,MAAMhC,SAAS,CAAEH,SAAS,EAAOC,OAAQ,GAAIC,OAAQ,Q,EAE5DgT,KAAO,WACLxM,OAAOC,WAAWoI,kB,uDAKlB,OADAtH,QAAQC,IAAI5I,KAAKqD,MAAMd,YAErB,cAAC,KAAD,CACE8R,MAAOrU,KAAKqD,MAAMd,WAAWpB,OAC7BD,QAASlB,KAAKqD,MAAMd,WAAWrB,QAC/BoT,SAAUtU,KAAKmU,aACfC,KAAMpU,KAAKoU,KACXG,UAAU,EALZ,SAOGvU,KAAKqD,MAAMd,WAAWnB,a,GAlBFsF,aAmCdxG,oBAZf,SAAyB8B,GACvB,MAAO,CACLO,WAAYP,EAAMO,eAItB,SAA4BwC,GAC1B,MAAO,CACL1D,SAAU,SAAC5B,GAAD,OAAUsF,EAAS1D,EAAS5B,QAI3BS,CAA6CgU,I,sECnCpDM,GAAoBC,KAApBD,OAAQE,GAAYD,KAAZC,QACVC,G,4MACJC,YAAc,SAACC,GACbjN,OAAOC,WAAWiN,gBAAgBD,EAAO3V,U,uDAGzC,OACE,eAAC,KAAD,CAAQ4E,MAAO,CAAEF,MAAO,IAAKC,OAAQ,QAArC,UACE,cAAC6Q,GAAD,CAAS5Q,MAAO,CAAEF,MAAO,QAAzB,SACG5D,KAAKqD,MAAMb,aAAayE,KAAI,SAAC7C,EAAM8C,GAClC,OACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAK6N,KAAM,EAAGjR,MAAO,CAAEwB,WAAY,WAAYF,QAAS,OAAQsC,QAAS,GAAzE,SACGtD,EAAKX,KAAOmE,OAAOC,WAAWhI,OAAO4D,GAAK,KAAO,cAAC,KAAD,CAAQuR,IAAI,yBAEhE,eAAC,KAAD,CAAKD,KAAM,GAAX,UACG3Q,EAAKX,KAAOmE,OAAOC,WAAWhI,OAAO4D,GAAK,KACzC,cAAC,KAAD,CAAKK,MAAO,CAAEF,MAAO,QAArB,SACE,qBAAKE,MAAO,CAAE2E,SAAU,GAAIlD,MAAO,WAAnC,SAAiDnB,EAAK8F,SAI1D,cAAC,KAAD,CAAKpG,MAAO,CAAEF,MAAO,QAArB,SACE,qBACEE,MACEM,EAAKX,KAAOmE,OAAOC,WAAWhI,OAAO4D,GACjC,CACEwR,UAAW,EACXnO,aAAc,EACdoO,YAAa,EACbnR,WAAY,UACZwB,MAAO,OACPY,aAAc,qBACdf,QAAS,QACTK,SAAU,MACViC,QAAS,oBACTyN,WAAY,OACZ1M,SAAU,IAEZ,CACEwM,UAAW,EACXnO,aAAc,EACd/C,WAAY,OACZoC,aAAc,qBACdf,QAAS,QACTK,SAAU,MACViC,QAAS,oBACT0N,MAAO,OACP3M,SAAU,GACVlD,MAAO,WA1BjB,SA8BGnB,EAAKlF,iBA1CJgI,QAkDhB,cAACsN,GAAD,CAAQ1Q,MAAO,CAAE4D,QAAS,EAAGc,OAAQ,GAAIpD,QAAS,OAAQC,eAAgB,SAAUC,WAAY,UAAhG,SACE,eAAC,KAAD,CAAM+P,OAAO,SAASnL,KAAK,mBAAmBoL,SAAUtV,KAAK4U,YAA7D,UACE,cAAC,KAAKW,KAAN,CAAWrL,KAAK,UAAhB,SACE,cAAC,KAAD,CAAOsL,YAAY,8BAErB,cAAC,KAAKD,KAAN,UACE,cAAC,KAAD,CACEzR,MAAO,CAAEuB,eAAgB,SAAUC,WAAY,SAAUF,QAAS,QAClEnG,KAAK,UACLwW,SAAS,SACTxP,KAAM,mBAAGC,UAAU,iBAAb,kC,GAtEHQ,aAqFJxG,oBANf,SAAyB8B,GACvB,MAAO,CACLQ,aAAcR,EAAMQ,gBAIgB,KAAzBtC,CAA+ByU,ICvE9BH,IAA2BC,KAAnCiB,OAAmCjB,KAA3BD,QAAQmB,GAAmBlB,KAAnBkB,MAAOjB,GAAYD,KAAZC,QAEzBrL,GACG,YADHA,GAEG,YAFHA,GAGI,aAGJuM,G,kDACJ,WAAYvS,GAAQ,IAAD,8BACjB,cAAMA,IAIRH,kBAAoB,WACd8F,GAAKE,cACP,EAAKqK,eAEHvK,GAAKC,WACP,EAAKmK,aAVU,EAyBnBA,UAAY,WAAO,IAAD,EAChBpK,GAAKC,WAAY,EACjB,UAAArB,OAAOC,kBAAP,SAAmBkF,QAAQ1D,GAAiB,OA3B3B,EA8BnB6J,UAAY,WAAO,IAAD,EAChBlK,GAAKC,WAAY,EACjB,UAAArB,OAAOC,kBAAP,SAAmB2G,cAAcnF,KAhChB,EAmCnBkK,aAAe,WAAO,IAAD,EACnBvK,GAAKE,cAAe,EACpB,UAAAtB,OAAOC,kBAAP,SAAmBkF,QAAQ1D,IAAiB,IArC3B,EAwCnBiK,aAAe,WAAO,IAAD,EACnBtK,GAAKE,cAAe,EACpB,UAAAtB,OAAOC,kBAAP,SAAmB2G,cAAcnF,KA1ChB,EA6CnB4J,mBAAqB,WAAO,IAAD,EACzB,UAAArL,OAAOC,kBAAP,SAAmBkF,QAAQ1D,KA9CV,EAiDnBgK,UAAY,WAAO,IAAD,EAChB,UAAAzL,OAAOC,kBAAP,SAAmBiF,MAAK,GACxBjK,EAAMkC,SAASxE,GAAc,KAnDZ,EAsDnBqS,cAAgB,WACd,IAAMiD,EAAclE,SAASmE,eAAe,eAE5B,SADAD,EAAY/R,MAAMsB,SAEhCyQ,EAAY/R,MAAMsB,QAAU,OAC5BwC,OAAOC,WAAWkO,oBAElBF,EAAY/R,MAAMsB,QAAU,QA7Db,EAiEnBqO,gBAAkB,WAChB,IAAMoC,EAAclE,SAASmE,eAAe,gBACtC1Q,EAAUyQ,EAAY/R,MAAMsB,QAEhCyQ,EAAY/R,MAAMsB,QADJ,SAAZA,EAC0B,OAEA,QAvEb,EA2EnByN,kBA3EmB,sBA2EC,4BAAAvI,EAAA,sEACK1C,OAAOC,WAAWkI,WADvB,OACZA,EADY,OAElB,EAAK1M,MAAMhC,SAAS,CAClBH,SAAS,EACTC,OAAQ,kCACRC,OACE,qCACE,cAAC,KAAD,CAAK0C,MAAO,CAAE0E,OAAQ,SAAtB,SACE,cAAC,KAAD,CACEwN,YACE,cAAC,KAAD,CAAK/P,KAAM,cAACgQ,GAAA,EAAD,IAAqB1Q,MAAM,UAAtC,8BAIFiQ,YAAY,4BACZU,UAAQ,EACR9K,MAAO2E,EAAS7F,SAGpB,cAAC,KAAD,CAAKpG,MAAO,CAAE0E,OAAQ,SAAtB,SACE,cAAC,KAAM2N,SAAP,CACEC,SAAU,SAACzR,GACTqE,GAAKG,SAAWxE,EAAE0R,OAAOjL,OAE3B4K,YACE,cAAC,KAAD,CAAK/P,KAAM,cAACgQ,GAAA,EAAD,IAAqB1Q,MAAM,UAAtC,iCAIFiQ,YAAY,+BACZpK,MAAO2E,EAAS5G,kBA9BR,2CA3ED,EAiHnBqK,YAAc,WACZ8C,KAAMtG,KAAK,CACTqE,MAAO,gCACPkC,QACE,8BACE,cAAC,KAAMC,OAAP,CACE/S,GAAG,WACHgT,SAAU,SAACrL,GACTuG,SAASmE,eAAe,YAAYY,SACpC/E,SAASgF,YAAY,QACrBzX,KAAQ8Q,KAAK5E,IAEfwL,YAAU,EACVC,YAAa,cAAC,KAAD,CAAQC,wBAAsB,YAAY7Q,KAAM,cAAC8Q,GAAA,EAAD,MAC7D3L,MAAOxD,OAAOoP,SAASC,SAI7BC,OAAQ,QAjIV,EAAKC,UAAY,KAFA,E,qDAuIT,IACArW,EAAkBd,KAAKqD,MAAvBvC,cACR,OACE,eAAC,KAAD,CAAQgD,MAAO,CAAED,OAAQ,QAAzB,UACE,cAAC,GAAD,IACA,cAAC8R,GAAD,CAAO7R,MAAO,CAAEsB,QAAS,QAAU3B,GAAG,cAAcG,MAAO,IAAKJ,QAASxD,KAAKoX,aAA9E,SACE,cAAC,GAAD,MAEF,eAAC,KAAD,WACGtW,EACC,cAAC,GAAD,CAAS2C,GAAG,aAAZ,SACE,eAAC,KAAD,CAAQK,MAAO,CAAED,OAAQ,QAAzB,UACE,cAAC8R,GAAD,CAAO/R,MAAO,IAAKH,GAAG,cAAcK,MAAO,CAAEqB,SAAU,WAAYa,OAAQ,GAA3E,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAASlC,MAAO,CAAE2D,SAAU,UAAYhE,GAAG,aAA3C,SACE,cAAC,GAAD,WAKN,cAAC,GAAD,CAASA,GAAG,gBAAZ,SACE,cAAC,KAAD,CAAQK,MAAO,CAAED,OAAQ,QAAzB,SACE,cAAC,GAAD,QAKN,cAAC,GAAD,UACE,cAAC,GAAD,CACEqP,UAAWlT,KAAKkT,UAChBE,UAAWpT,KAAKoT,UAChBR,cAAe5S,KAAK4S,cACpBK,mBAAoBjT,KAAKiT,mBACzBI,UAAWrT,KAAKqT,UAChBC,aAActT,KAAKsT,aACnBC,aAAcvT,KAAKuT,aACnBE,gBAAiBzT,KAAKyT,gBACtBZ,kBAAmB7S,KAAK6S,kBACxBW,YAAaxT,KAAKwT,mBAIvB1S,EACC,cAAC6U,GAAD,CACE7R,MAAO,CACLC,WAAY,UACZH,MAAO,OACPwB,QAASpF,KAAKqD,MAAMZ,mBAAmBuE,OAAS,EAAI,QAAU,QAEhEpD,MAAO,IACPH,GAAG,eAPL,SASE,cAAC,GAAD,MAEA,Y,GA/LYiD,aAiNTxG,oBAbf,SAAyB8B,GACvB,MAAO,CACLlB,cAAekB,EAAMM,GAAGxB,cACxB2B,mBAAoBT,EAAMS,uBAI9B,SAA4BsC,GAC1B,MAAO,CACL1D,SAAU,SAAC5B,GAAD,OAAUsF,EAAS1D,EAAS5B,QAI3BS,CAA6C0V,I,IC5OzBlP,Y,OCQ7B2C,GACK,YADLA,GAEK,YAFLA,GAGM,aAGNgO,GACF,WAAYC,EAAUxP,EAAUqB,EAAU2C,GAAW,IAAD,gCAYpDyL,eAZoD,sBAYnC,4BAAAjN,EAAA,sEACQ,EAAKF,aADb,UACPoN,EADO,OAEb7O,QAAQC,IAAI4O,IACRA,EAAOF,SAHE,iCAIH,EAAKG,aAJF,uBAKH,EAAKC,SAAS,EAAK5P,SAAU,EAAKwP,SAAU,EAAKnO,UAL9C,wBAOH,EAAK4D,QAAQ1D,GAAiB,MAP3B,QAUT,EAAKyC,SAAS,GAVL,4CAZmC,KA0BpD6L,QA1BoD,sBA0B1C,4BAAArN,EAAA,sEAC2B,EAAKsN,wBADhC,cACAC,EADA,gBAEc,EAAKpN,WAAWoN,GAF9B,cAEN,EAAKnN,OAFC,gBAGyB,EAAKoN,sBAAsB,EAAKpN,QAHzD,cAGN,EAAKiB,kBAHC,iBAIwB,EAAKoM,qBAAqB,EAAKrN,QAJvD,QAIN,EAAKsN,iBAJC,mDA1B0C,KAiCpDP,WAAa,WAET,EAAK5X,OAAOgM,GAAG/C,IAA0B,SAACrJ,GACtCkJ,QAAQC,IAAInJ,GACZoD,EAAMkC,SAASxD,EAAW9B,OAG9B,EAAKI,OAAOgM,GAAG/C,GAAf,uCAA6C,6BAAAwB,EAAA,6DAASJ,EAAT,EAASA,KAAT,EAAezG,GAAf,SACnC,EAAKwU,oBAD8B,OAEzCjZ,EAAa,OAAQkL,EAAO,kDAFa,2CAA7C,kCAAAlK,KAAA,gBAKA,EAAKH,OAAOgM,GAAG/C,GAAf,uCAA6C,6BAAAwB,EAAA,6DAASJ,EAAT,EAASA,KAAT,EAAezG,GAAf,SACnC,EAAKwU,oBAD8B,OAEzCjZ,EAAa,UAAWkL,EAAO,qDAFU,2CAA7C,kCAAAlK,KAAA,gBAKA,EAAKH,OAAOgM,GAAG/C,IAA0B,WACrC,EAAKgE,MAAK,MAGd,EAAKjN,OAAOgM,GAAG9C,IAA0B,YAAuC,IAApCmP,EAAmC,EAAnCA,WAAYlT,EAAuB,EAAvBA,OAAQW,EAAe,EAAfA,SAC5DgD,QAAQC,IAAI,oBAAqBsP,EAAYlT,EAAQW,GACrD,EAAKwS,cAAcD,EAAYlT,EAAQW,MAG3C,EAAK9F,OAAOgM,GAAG9C,GAAf,uCAAwC,WAAOtJ,GAAP,mBAAA6K,EAAA,sDAC9B8N,EAD8B,aACVvV,EAAMmI,WAAWvI,oBADP,IAAA6H,EAAA,iBAE3BpD,GAF2B,6BAAAoD,EAAA,2DAGU7K,EAAKyH,GAAvCmF,EAHwB,EAGxBA,YAAa1G,EAHW,EAGXA,UAAUX,EAHC,EAGDA,UAChB,EAAKnF,OAAO4D,GAJK,gCAKN,EAAKoJ,QAAQR,EAAa1G,EAAUX,GAL9B,OAKtB6H,EALsB,QAOhB,KADNwL,EAAKD,EAAcE,WAAU,SAAClU,GAAD,OAAUA,EAAKY,QAAUA,OAElDuT,EAAqB,CACvBjU,MAAO,GACP3C,MAAO,KACPqD,SAAQW,YAES,UAAjBkH,EAAQX,MACRqM,EAAmBjU,MAAMiK,KAAK1B,GAEb,UAAjBA,EAAQX,OACRqM,EAAmB5W,MAAQkL,GAE/BuL,EAAc7J,KAAKgK,KAEbA,EAAqBH,EAAcC,GACpB,UAAjBxL,EAAQX,MACRqM,EAAmBjU,MAAMiK,KAAK1B,GAEb,UAAjBA,EAAQX,OACRqM,EAAmB5W,MAAQkL,IA1BP,0CAE3B3F,EAAQ,EAFmB,YAEhBA,EAAQzH,EAAKuH,QAFG,yCAE3BE,GAF2B,eAEKA,IAFL,sBAgCpCrE,EAAMkC,SAASvD,EAAiB4W,IAhCI,2CAAxC,kCAAApY,KAAA,iBA3DgD,KA+FpDoK,WA/FoD,sBA+FvC,4BAAAE,EAAA,6DACHkO,EAAK,IAAIlZ,EAAY,WAAasI,OAAO6Q,SAAW,IAAM7Q,OAAO8Q,MACvE,EAAK7Y,OAAS2Y,EAAG3Y,OACjB,EAAKA,OAAOL,QAAUgZ,EAAGhZ,QAHhB,SAIgB,EAAKK,OAAOL,QAAQsJ,GAA2B,CAAEwO,SAAU,EAAKA,SAAUnO,SAAU,EAAKA,WAJzG,4DAME,CAAEmO,SAAU,EAAKA,SAAUnO,SAAU,EAAKA,WAN5C,yBAQQ,EAAKtJ,OAAOL,QAAQsJ,GAA2B,CAAEwO,SAAU,EAAKA,SAAUnO,SAAU,EAAKA,WARjG,qFA/FuC,KA2GpD8O,kBA3GoD,sBA2GhC,kCAAA3N,EAAA,sEACW,EAAKzK,OAAOL,QAAQuJ,IAD/B,OACV4P,EADU,OAEVP,EAAgB,GAFN,IAAA9N,EAAA,iBAGPpD,GAHO,6BAAAoD,EAAA,2DAI8BqO,EAAazR,GAA/CmF,EAJI,EAIJA,YAAa1G,EAJT,EAISA,UAAUX,EAJnB,EAImBA,UAChB,EAAKnF,OAAO4D,GALf,gCAMc,EAAKoJ,QAAQR,EAAa1G,EAAUX,GANlD,OAMF6H,EANE,QAQI,KADNwL,EAAKD,EAAcE,WAAU,SAAClU,GAAD,OAAUA,EAAKY,QAAUA,OAElDuT,EAAqB,CACvBjU,MAAO,GACP3C,MAAO,KACPqD,SAAQW,YAES,UAAjBkH,EAAQX,OACRqM,EAAmBjU,MAAQ,CAACuI,IAEX,UAAjBA,EAAQX,OACRqM,EAAmB5W,MAAQkL,GAE/BuL,EAAc7J,KAAKgK,KAEbA,EAAqBH,EAAcC,GACpB,UAAjBxL,EAAQX,MACRqM,EAAmBjU,MAAMiK,KAAK1B,GAEb,UAAjBA,EAAQX,OACRqM,EAAmB5W,MAAQkL,IA3B3B,0CAGP3F,EAAQ,EAHD,YAGIA,EAAQyR,EAAa3R,QAHzB,0CAGPE,GAHO,eAGiCA,IAHjC,uBAiChBrE,EAAMkC,SAASvD,EAAiB4W,IAjChB,4CA3GgC,KA+IpDV,SA/IoD,uCA+IzC,WAAO5P,EAAUwP,EAAUnO,GAA3B,SAAAmB,EAAA,sEACD,EAAKzK,OAAOL,QAAQsJ,GAA8B,CAAEhB,WAAUwP,WAAUnO,SAAUA,IADjF,uBAED,EAAKwO,UAFJ,uBAGD,EAAKM,oBAHJ,2CA/IyC,+DAqJpDL,sBArJoD,sBAqJ5B,4BAAAtN,EAAA,sEACa,EAAKzK,OAAOL,QAAQuJ,IADjC,cACd8O,EADc,yBAEbA,GAFa,2CArJ4B,KA0JpDpN,WA1JoD,uCA0JvC,WAAOY,GAAP,eAAAf,EAAA,sDAET,IACII,EAAS,IAAI9C,OAAOoC,gBAAgBsB,OACtC,MAAOC,GACc,qBAAfA,EAAMrB,MACNvB,QAAQ4C,MAAM,yBAElB5C,QAAQ4C,MAAMA,GART,gBAUHb,EAAOc,KAAK,CACdH,0BAXK,gCAaFX,GAbE,2CA1JuC,2DA0KpDoN,sBA1KoD,uCA0K5B,WAAOpN,GAAP,iBAAAJ,EAAA,sEACI,EAAKzK,OAAOL,QAAQuJ,GAA6B,CACrE0C,UAAU,EACVC,gBAAiBhB,EAAOgB,kBAHR,cACdkN,EADc,QAMdjN,EAAoBjB,EAAOkB,oBAAoBgN,IAEnC/M,GAAG,UAArB,uCAAgC,aAA2BC,EAAUC,GAArC,eAAAzB,EAAA,6DAAS0B,EAAT,EAASA,eAAT,kBAElB,EAAKnM,OAAOL,QAAQuJ,GAA8B,CAAEiD,iBAAgBC,aAAc2M,EAAUnV,KAF1E,OAGxBqI,IAHwB,gDAKxBC,EAAQ,EAAD,IALiB,yDAAhC,2DASAJ,EAAkBE,GAAG,UAArB,uCAAgC,aAAgCC,EAAUC,GAA1C,yBAAAzB,EAAA,6DAAS4B,EAAT,EAASA,KAAMC,EAAf,EAAeA,cAAf,SAElBC,EAAsBT,EAAkBlI,GAFtB,SAGe,EAAK5D,OAAOL,QAAQuJ,GAA2B,CAClFqD,sBACAF,OACAC,kBANoB,gBAGhB+C,EAHgB,EAGhBA,WAAYpE,EAHI,EAGJA,SAKpBgB,EAAS,CAAErI,GAAIyL,EAAYpE,aARH,kDAUxBiB,EAAQ,EAAD,IAViB,0DAAhC,2DAcAJ,EAAkBE,GAAG,yBAAyB,SAAC7J,GAC3C,OAAQA,GACJ,IAAK,aAEL,IAAK,YACD,MACJ,IAAK,SACD2J,EAAkBY,YAtCV,kBA6CbZ,GA7Ca,2CA1K4B,2DA0NpDoM,qBA1NoD,uCA0N7B,WAAOrN,GAAP,iBAAAJ,EAAA,sEACK,EAAKzK,OAAOL,QAAQuJ,GAA6B,CAAE0C,UAAU,IADlE,cACbmN,EADa,QAGbpM,EAAoB9B,EAAO+B,oBAAoBmM,IAEnC/M,GAAG,UAArB,uCAAgC,aAA2BC,EAAUC,GAArC,eAAAzB,EAAA,6DAAS0B,EAAT,EAASA,eAAT,kBAElB,EAAKnM,OAAOL,QAAQuJ,GAA8B,CAAEkD,aAAcO,EAAkB/I,GAAIuI,mBAFtE,OAGxBF,IAHwB,gDAKxBC,EAAQA,GALgB,yDAAhC,2DASAS,EAAkBX,GAAG,wBAArB,uCAA8C,WAAO7J,GAAP,SAAAsI,EAAA,2DAClCtI,EADkC,OAEjC,eAFiC,OAKjC,cALiC,OAQjC,WARiC,sEASlCwK,EAAkBD,QATgB,iGAA9C,uDAdmB,kBA+BZC,GA/BY,2CA1N6B,2DA4PpDO,QA5PoD,uCA4P1C,WAAO9N,GAAP,2CAAAqL,EAAA,sDAAa0C,EAAb,+BAAwB,KAC1BC,EAAmB,GACnBtL,GAAQ,EACRoG,GAAS,EAHP,KAIE9I,EAJF,cAKGoK,GALH,SAcGA,GAdH,UA8BGA,GA9BH,0BAME4D,EAAmB,CACftL,MAAO,CACHqL,SAAUA,GAEd1I,OAAO,GAEX3C,GAAQ,EAZV,oCAeEsL,EAAmB,CACftL,OAAO,EACP2C,MAAO,CACHV,MAAO,CACHsJ,IAAK,IACLC,MAAO,MAEXtJ,OAAQ,CACJqJ,IAAK,IACLC,MAAO,MAEXH,SAAUA,IA1BpB,oCA+BEC,GAAmB,EACnBlF,GAAS,EAhCX,oEAsCD,EAAK2C,OAAO0C,WAAW,UAAazL,EAtCnC,wBAuCFgH,QAAQ4C,MAAM,wBAvCZ,yCA4CaxD,EA5Cb,kCA4C4BwF,UAAUC,aAAaC,kBA5CnD,6DA4C6EF,UAAUC,aAAaE,aAAaT,GA5CjH,mCA4CI5M,EA5CJ,KA6CIsN,EAAQhM,EAAQtB,EAAOuN,iBAAiB,GAAKvN,EAAOwN,iBAAiB,GACrEC,EAAS,CACXH,SAEA1O,IAASoK,IAsBTxG,EAAMkC,SAAS3E,EAAc,CAAEC,YAvEjC,UA0EqB,EAAKsL,kBAAkBoB,QAAQe,GA1EpD,SA0EIO,EA1EJ,QA2EOxC,GAAG,cAAc,WACtBlD,QAAQC,IAAI,qBACZ,EAAK4F,cAAcvP,MAGvBoP,EAASxC,GAAG,kBAAkB,WAC1BlD,QAAQC,IAAI,+BAIhByF,EAASxC,GAAG,SAAS,WACjBlD,QAAQC,IAAI,uBAGVlG,EAzFJ,eAyF6BG,EAAMmI,WAAWtI,mBAzF9C,KA0FMzD,EA1FN,cA2FOoK,GA3FP,UAgGOA,GAhGP,UAoGOA,GApGP,2BA4FM,EAAKwP,YAAYnX,OAAO6M,KAAKF,GAC7B3L,EAAkBhB,OAAO6M,KAAK,CAAElO,SAAQ6O,WAAYb,EAAS5K,KAC7DkF,QAAQC,IAAIyF,EAASV,OA9F3B,oCAiGM,EAAKkL,YAAYlX,MAAM4M,KAAKF,GAC5B3L,EAAkBf,MAAM4M,KAAK,CAAElO,SAAQ6O,WAAYb,EAAS5K,KAlGlE,oCAqGM,EAAKoV,YAAYjX,WAAW2M,KAAKF,GACjC3L,EAAkBd,WAAW2M,KAAK,CAAElO,SAAQ6O,WAAYb,EAAS5K,KAtGvE,iEA4GFZ,EAAMkC,SAASlD,EAAuBa,IA5GpC,mDA8GFiG,QAAQC,IAAR,MA9GE,2DA5P0C,2DA8WpDiE,QA9WoD,uCA8W1C,WAAOqC,EAAYvJ,EAAUX,GAA7B,eAAAsF,EAAA,sEACgB,EAAKuE,iBAAiBK,GADtC,cACArC,EADA,yBAECA,GAFD,2CA9W0C,+DAmXpDgC,iBAnXoD,uCAmXjC,WAAOK,GAAP,+BAAA5E,EAAA,6DAEPoB,EAAoB,EAAKhB,OAAzBgB,gBAFO,SAGI,EAAK7L,OAAOL,QAAQuJ,GAA2B,CAC9D2C,kBACAyD,oBAAqB,EAAK6I,iBAAiBvU,GAC3CyL,eANW,cAGTzP,EAHS,gBAQqBA,QARrB,IAQqBA,OARrB,EAQqBA,EAAMqO,OAAlCrK,EARO,EAQPA,GAAIyI,EARG,EAQHA,KAAMC,EARH,EAQGA,cAEZgC,EAAe,GAVN,SAWQ,EAAK6J,iBAAiBnL,QAAQ,CACjDpJ,KACAyL,aACAhD,OACAC,gBACAgC,iBAhBW,cAWTY,EAXS,QAmBNlD,GAAG,cAAc,WACtBlD,QAAQC,IAAI,wBAGhBmG,EAASlD,GAAG,kBAAkB,WAC1BlD,QAAQC,IAAI,+BAIVvI,EAAS,IAAI+O,aACZC,SAASN,EAASpB,OA7BV,kBA8BR,CAAEoB,WAAU1O,SAAQ6L,SA9BZ,4CAnXiC,2DAoZpDsC,cAAgB,SAACvP,GACb,IAAMyD,EAAiB,eAAQG,EAAMmI,WAAWtI,mBAChD,OAAQzD,GACJ,KAAKoK,GAED,IADA,IAAM3H,EAAS,EAAKmX,YAAYnX,OACvBwF,EAAQ,EAAGA,EAAQxF,EAAOsF,OAAQE,IAAS,CAChD,IAAM4R,EAAepX,EAAOwF,GACtBmF,EAAcyM,EAAarV,GACjC,EAAK5D,OAAOL,QAAQuJ,GAA2B,CAAEsD,gBACjDyM,EAAavM,QAEjB,EAAKsM,YAAYnX,OAAS,GAC1BgB,EAAkBhB,OAAO,GACzB,MACJ,KAAK2H,GAED,IADA,IAAM0P,EAAS,EAAKF,YAAYlX,MACvBuF,EAAQ,EAAGA,EAAQ6R,EAAO/R,OAAQE,IAAS,CAChD,IAAM8R,EAAeD,EAAO7R,GACtBmF,EAAc2M,EAAavV,GACjC,EAAK5D,OAAOL,QAAQuJ,GAA2B,CAAEsD,gBACjD2M,EAAazM,QAEjB,EAAKsM,YAAYlX,MAAQ,GACzBe,EAAkBf,MAAM,GACxB,MACJ,KAAK0H,GAED,IADA,IAAMzH,EAAa,EAAKiX,YAAYjX,WAC3BsF,EAAQ,EAAGA,EAAQtF,EAAWoF,OAAQE,IAAS,CACpD,IAAM+R,EAAgBrX,EAAWsF,GAC3BmF,EAAc4M,EAAcxV,GAClC,EAAK5D,OAAOL,QAAQuJ,GAA2B,CAAEsD,gBACjD4M,EAAc1M,QAElB,EAAKsM,YAAYjX,WAAa,GAC9Bc,EAAkBd,WAAW,GAMrCiB,EAAMkC,SAASlD,EAAuBa,KA5bU,KAgcpDyV,cAAgB,SAACD,EAAYlT,EAAQW,GAEjC,IADA,IAAMyS,EAAa,aAAOvV,EAAMmI,WAAWvI,oBAClCyE,EAAQ,EAAGA,EAAQkR,EAAcpR,OAAQE,IAAS,CAAC,IAAD,EACjDzF,EAAU2W,EAAclR,GAC9B,IAAI,UAAAzF,EAAQE,aAAR,eAAeoN,SAAStL,MAAOyU,EAC/BzW,EAAQE,MAAQ,UAEhB,IAAK,IAAI4F,EAAI,EAAGA,EAAI9F,EAAQ6C,MAAM0C,OAAQO,IAAK,CAC7B9F,EAAQ6C,MAAMiD,GAClBwH,SAAStL,KAAOyU,GACtBzW,EAAQ6C,MAAM4U,OAAO3R,EAAG,IAKxC1E,EAAMkC,SAASvD,EAAiB4W,KA/cgB,KAkdpDtL,KAldoD,sBAkd7C,sCAAAxC,EAAA,yHAGO,EAAKzK,OAAOL,QAAQsJ,IAH3B,OAKH,EAAK0D,kBAAkBD,QACvB,EAAKZ,kBAAkBY,QACvB,EAAK1M,OAAO+Q,IAAI9H,IAChB,EAAKjJ,OAAO+Q,IAAI9H,IAChB,EAAKjJ,OAAO+Q,IAAI9H,IAChB,EAAKjJ,OAAO+Q,IAAI7H,IAChB,EAAKlJ,OAAO+Q,IAAI7H,IAChBnB,OAAO2E,QAZJ,4CAld6C,KAkepDwJ,iBAleoD,sBAkejC,4BAAAzL,EAAA,sEACQ,EAAKzK,OAAOL,QAAQsJ,IAD5B,OACTgH,EADS,OAEfnH,QAAQC,IAAIkH,GACZjN,EAAMkC,SAASxD,EAAWuO,IAHX,2CAleiC,KAwepDgF,gBAxeoD,uCAwelC,WAAO5V,GAAP,SAAAoL,EAAA,sEACS,EAAKzK,OAAOL,QAAQsJ,GAA4B5J,GADzD,yDAxekC,2DA4epD6Q,SA5eoD,sBA4ezC,4BAAAzF,EAAA,sEACY,EAAKzK,OAAOL,QAAQsJ,IADhC,cACDkH,EADC,yBAEAA,GAFA,2CA5eyC,KAifpDC,eAjfoD,sBAifnC,4BAAA3F,EAAA,sEACK,EAAKzK,OAAOL,QAAQsJ,GAAoCE,GAAKG,UADlE,OACP+G,EADO,OAEblR,EAAa,OAAQkR,GAFR,2CAhfblQ,KAAKsX,SAAWA,EAChBtX,KAAK8H,SAAWA,EAChB9H,KAAKmJ,SAAWA,EAChBnJ,KAAK2L,kBAAoB,KACzB3L,KAAKgY,iBAAmB,KACxBhY,KAAK0K,OAAS,KACd1K,KAAK6Y,YAAc,CAAEnX,OAAQ,GAAIC,MAAO,GAAIC,WAAY,IACxD5B,KAAKuX,iBACLvX,KAAK8L,SAAWA,GCjBlBqN,G,kDACJ,WAAY9V,GAAQ,IAAD,8BACjB,cAAMA,IAIRiS,SAAW,SAAC8D,GACVpQ,GAAKC,UAAY,EAAKjH,MAAMiH,UAC5BD,GAAKE,aAAe,EAAKlH,MAAMkH,aAFZ,IAGXmB,EAAoC+O,EAApC/O,SAAUgP,EAA0BD,EAA1BC,YAAalQ,EAAaiQ,EAAbjQ,SAC/B,EAAKiO,aAAa/M,EAAUgP,EAAalQ,IATxB,EAYnBiO,aAAe,SAAC/M,EAAUgP,EAAalQ,GAClB,IAAIkO,GAAgBhN,EAAUgP,EAAalQ,GAAU,SAACtB,GACvE,EAAKxE,MAAM9C,eAAc,GACzBqH,OAAOC,WAAaA,MAbtB,EAAK7F,MAAQ,CAAEiH,WAAW,EAAOC,cAAc,GAF9B,E,qDAgCT,IAAD,OACP,OACE,qBAAKpF,MAAO,CAAEsB,QAAS,OAAQxB,MAAO,OAAQC,OAAQ,OAAQyB,WAAY,SAAUD,eAAgB,UAApG,SACGrF,KAAKqD,MAAMhB,gBACV,cAAC,GAAD,IAEA,8BACE,eAAC,KAAD,CAAMsB,IAAK,SAACA,GAAD,OAAU,EAAK2V,QAAU3V,GAAMuG,KAAK,cAAcoL,SAAUtV,KAAKsV,SAA5E,UACE,cAAC,KAAKC,KAAN,CAAWrL,KAAK,WAAWoH,MAAM,4BAAeiI,MAAO,CAAC,CAAEC,UAAU,IAApE,SACE,cAAC,KAAD,MAEF,cAAC,KAAKjE,KAAN,CAAWrL,KAAK,cAAcoH,MAAM,4BAAeiI,MAAO,CAAC,CAAEC,UAAU,IAAvE,SACE,cAAC,KAAD,MAEF,cAAC,KAAKjE,KAAN,CAAWrL,KAAK,WAAWoH,MAAM,wCAAjC,SACE,cAAC,KAAD,MAEF,eAAC,KAAKiE,KAAN,WACE,cAAC,KAAD,CACE/R,QAAS,WACP,EAAKe,SAAS,CAAE0E,WAAY,EAAKjH,MAAMiH,aAEzChD,KACGjG,KAAKgC,MAAMiH,UAGV,mBAAG/C,UAAU,iBAAb,iBAFA,mBAAGA,UAAU,iBAAb,uBAMN,cAAC,KAAD,CACE1C,QAAS,WACP,EAAKe,SAAS,CAAE2E,cAAe,EAAKlH,MAAMkH,gBAE5CjD,KACGjG,KAAKgC,MAAMkH,aAGV,mBAAGhD,UAAU,iBAAb,sBAFA,mBAAGA,UAAU,iBAAb,+BAOR,cAAC,KAAKqP,KAAN,UACE,cAAC,KAAD,CAAQtW,KAAK,UAAUwW,SAAS,SAAhC,yF,GA7EO/O,aAoGRxG,oBAZf,SAAyB8B,GACvB,MAAO,CACLK,gBAAiBL,EAAMK,oBAI3B,SAA4B0C,GAC1B,MAAO,CACLxE,cAAe,SAACd,GAAD,OAAUsF,EAASxE,EAAcd,QAIrCS,CAA6CiZ,ICtE7CM,G,kDA5Bb,WAAYpW,GAAQ,IAAD,uBACjB,cAAMA,IASRH,kBAAoB,aARlB,IAAMrD,EAAS,IAAIP,EAAY,WAAasI,OAAO6Q,SAAW,IAAM7Q,OAAO8Q,MAF1D,OAGjB,EAAK7Y,OAASA,EAAOA,OACrB,EAAKA,OAAOL,QAAUK,EAAOL,QAC7B,EAAK0K,KAAO,WACZtC,OAAOsC,KAAO,EAAKA,KACnBtC,OAAO/H,OAAS,EAAKA,OAPJ,E,qDAgBjB,OADA8I,QAAQC,IAAI/F,EAAMmI,YAEhB,cAAC,IAAD,CAAUnI,MAAOA,EAAjB,SACE,qBAAKiB,MAAO,CAAEF,MAAO,OAAQC,OAAQ,SAArC,SAGE,cAAC,GAAD,Y,GAtBQ6C,aCEHgT,I,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9K,MAAK,YAAkD,IAA/C+K,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCDdO,IAAS9Y,OACL,cAAC,GAAD,IACFuQ,SAASmE,eAAe,SAM1B4D,O","file":"static/js/main.38365d9c.chunk.js","sourcesContent":["import { notification } from \"antd\";\r\n\r\nconst Notification = (type, message) => {\r\n    notification[type]({\r\n        message: 'Thông báo!',\r\n        description: message,\r\n        placement: \"bottomRight\",\r\n    });\r\n}\r\n\r\nexport { Notification }","import { notification } from 'antd';\r\nimport io from 'socket.io-client';\r\nimport { Notification } from './Notification';\r\n\r\nclass SocketClone {\r\n  constructor(url) {\r\n    this.socket = io.connect(url);\r\n  }\r\n\r\n  request = (type, data = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n      this.socket.emit(type, data, (data) => {\r\n        if (data.status===0) {\r\n          Notification(\"error\",data.message)\r\n          // resolve(data.data)\r\n          reject(data.data)\r\n        } else {\r\n          resolve(data.data)\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport { SocketClone }","export const ACTION_TYPES = {\r\n  SET_LARGE_VIDEO: \"SET_LARGE_VIDEO\",\r\n};\r\nconst initializeStream = null;\r\n\r\nconst largeVideoReducer = (state = initializeStream, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.SET_LARGE_VIDEO:\r\n      state = action.payload;\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setLargeVideo = (stream) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_LARGE_VIDEO,\r\n    payload: stream,\r\n  };\r\n};\r\n\r\nexport { largeVideoReducer, setLargeVideo };\r\n","\r\nexport const ACTION_TYPES = {\r\n  SET_ROOMCREATE: \"SET_ROOMCREATE\",\r\n};\r\nconst initializeStream =false;\r\n\r\nconst roomCreateReducer = (state = initializeStream, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.SET_ROOMCREATE:\r\n      state = action.payload;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// const addUserToRoom = ({ key, value }) => (dispacth) => {\r\n//   const state = store.getState().userOnRoomState;\r\n//   const stateClone = new Map();\r\n//   state.forEach((value, key) => stateClone.set(key, value))\r\n//   stateClone.set(key, value);\r\n//   dispacth(setUserOnRoom(stateClone))\r\n// }\r\n\r\n// const removeUserToRoom = (key) => (dispacth) => {\r\n//   const state = store.getState().userOnRoomState;\r\n//   const stateClone = new Map();\r\n//   state.forEach((value, key) => stateClone.set(key, value))\r\n//   stateClone.delete(key);\r\n//   dispacth(setUserOnRoom(stateClone))\r\n// }\r\n\r\nconst setRoomCreate = (room) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_ROOMCREATE,\r\n    payload: room,\r\n  };\r\n};\r\n\r\nexport {  roomCreateReducer, setRoomCreate };\r\n","export const ACTION_TYPES = {\r\n  SET_STREAM: \"SET_STREAM\",\r\n};\r\nconst initializeStream = { local: [], remote: [] };\r\n\r\nconst streamReducer = (state = initializeStream, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.SET_STREAM:\r\n      state = action.payload;\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setStream = (stream) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_STREAM,\r\n    payload: stream,\r\n  };\r\n};\r\n\r\nexport { streamReducer, setStream };\r\n","\r\nexport const ACTION_TYPES = {\r\n  SET_USERONROOM: \"SET_USERONROOM\",\r\n};\r\nconst initializeStream =[];\r\n\r\nconst userOnRoomReducer = (state = initializeStream, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.SET_USERONROOM:\r\n      state = action.payload;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// const addUserToRoom = ({ key, value }) => (dispacth) => {\r\n//   const state = store.getState().userOnRoomState;\r\n//   const stateClone = new Map();\r\n//   state.forEach((value, key) => stateClone.set(key, value))\r\n//   stateClone.set(key, value);\r\n//   dispacth(setUserOnRoom(stateClone))\r\n// }\r\n\r\n// const removeUserToRoom = (key) => (dispacth) => {\r\n//   const state = store.getState().userOnRoomState;\r\n//   const stateClone = new Map();\r\n//   state.forEach((value, key) => stateClone.set(key, value))\r\n//   stateClone.delete(key);\r\n//   dispacth(setUserOnRoom(stateClone))\r\n// }\r\n\r\nconst setUserOnRoom = (room) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_USERONROOM,\r\n    payload: room,\r\n  };\r\n};\r\n\r\nexport {  userOnRoomReducer, setUserOnRoom };\r\n","\r\nexport const ACTION_TYPES = {\r\n          SET_VIEW_ONE_CAMERA: \"SET_VIEW_ONE_CAMERA\"\r\n};\r\nconst initializeStream = {\r\n          viewOneCamera: true,\r\n};\r\n\r\nconst uiReducer = (state = initializeStream, action) => {\r\n          switch (action.type) {\r\n                    case ACTION_TYPES.SET_VIEW_ONE_CAMERA:\r\n                              state.viewOneCamera = !state.viewOneCamera;\r\n                              return {...state}\r\n                    default:\r\n                              return state;\r\n          }\r\n};\r\n\r\nconst setViewOneCamera = () => {\r\n          return {\r\n                    type : ACTION_TYPES.SET_VIEW_ONE_CAMERA,\r\n          };\r\n};\r\n\r\nexport { uiReducer, setViewOneCamera };\r\n","export const ACTION_TYPES = {\r\n          SET_REMOTE_STREAM: \"SET_REMOTE_STREAM\",\r\n};\r\nconst initializeStream = new Map();\r\n\r\nconst streamRemoteReducer = (state = initializeStream, action) => {\r\n          switch (action.type) {\r\n                    case ACTION_TYPES.SET_REMOTE_STREAM:\r\n                              state = action.payload;\r\n                              return state;\r\n\r\n                    default:\r\n                              return state;\r\n          }\r\n};\r\n\r\nconst setRemoteStream = (stream) => {\r\n          return {\r\n                    type: ACTION_TYPES.SET_REMOTE_STREAM,\r\n                    payload: stream,\r\n          };\r\n};\r\n\r\nexport { streamRemoteReducer, setRemoteStream };\r\n","export const ACTION_TYPES = {\r\n  SET_MODAL: \"SET_MODAL\",\r\n};\r\nconst initializeStream = { visible: false, header: \"\", render: null };\r\n\r\nconst modalReducer = (state = initializeStream, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.SET_MODAL:\r\n      state = action.payload;\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setModal = (stream) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_MODAL,\r\n    payload: stream,\r\n  };\r\n};\r\n\r\nexport { modalReducer, setModal };\r\n","export const ACTION_TYPES = {\r\n  SET_MESSAGE: \"SET_MESSAGE\",\r\n};\r\nconst initializeMessage = [];\r\n\r\nconst messageReducer = (state = initializeMessage, action) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.SET_MESSAGE:\r\n      state = action.payload;\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setMessage = (stream) => {\r\n  return {\r\n    type: ACTION_TYPES.SET_MESSAGE,\r\n    payload: stream,\r\n  };\r\n};\r\n\r\nexport { messageReducer, setMessage };\r\n","export const ACTION_TYPES = {\r\n    SET_REMOTE_ELEMENT: \"SET_REMOTE_ELEMENT\",\r\n};\r\nconst initializeStream = [];\r\n\r\nconst remoteElementReducer = (state = initializeStream, action) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.SET_REMOTE_ELEMENT:\r\n            state = action.payload;\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setRemoteElement = (element) => {\r\n    return {\r\n        type: ACTION_TYPES.SET_REMOTE_ELEMENT,\r\n        payload: element,\r\n    };\r\n};\r\n\r\nexport { remoteElementReducer, setRemoteElement };\r\n","export const ACTION_TYPES = {\r\n    SET_LOCAL_ELEMENT: \"SET_LOCAL_ELEMENT\",\r\n};\r\nconst initializeStream = { videos: [], audio: [], screenCast: [] };\r\n\r\nconst localElementReducer = (state = initializeStream, action) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.SET_LOCAL_ELEMENT:\r\n            state = action.payload;\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setLocalElementReducer = (element) => {\r\n    return {\r\n        type: ACTION_TYPES.SET_LOCAL_ELEMENT,\r\n        payload: element,\r\n    };\r\n};\r\n\r\nexport { localElementReducer, setLocalElementReducer };\r\n","import { combineReducers } from \"redux\";\r\nimport { largeVideoReducer } from \"../reducers/largeVideoReducer\";\r\nimport { roomCreateReducer } from \"../reducers/roomCreateReducer\";\r\nimport { streamReducer } from \"../reducers/streamReducer\";\r\nimport { userOnRoomReducer } from \"../reducers/userOnRoomReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\nimport { streamRemoteReducer } from \"../reducers/remoteReducer\";\r\nimport { modalReducer } from \"../reducers/modalReducer\";\r\nimport { messageReducer } from \"../reducers/messageReducer\";\r\nimport { remoteElementReducer } from \"../reducers/remoteElementReducer\";\r\nimport { localElementReducer } from \"../reducers/localElementReducer\";\r\n\r\nexport default combineReducers({\r\n  streamRemoteState: streamRemoteReducer,\r\n  streamState: streamReducer,\r\n  largeVideoState: largeVideoReducer,\r\n  userOnRoomState: userOnRoomReducer,\r\n  roomCreateState: roomCreateReducer,\r\n  ui: uiReducer,\r\n  modalState: modalReducer,\r\n  messageState: messageReducer,\r\n  remoteElementState: remoteElementReducer,\r\n  localElementState: localElementReducer\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n// const logger = store => next => action => {\r\n//     console.log('dispatching', action)\r\n//     switch (action.type) {\r\n//         case ACTION_TYPES_PATIENT.SET_PATIENT:\r\n//             console.log(action)\r\n//             break;\r\n\r\n//         default:\r\n//             break;\r\n//     }\r\n//     let result = next(action)\r\n//     return result\r\n// }\r\n\r\nconst middleware = [\r\n    thunk\r\n]\r\nconst store = createStore(rootReducer, applyMiddleware(...middleware));\r\nexport { store };","import React, { Component, PureComponent } from \"react\";\r\n\r\nclass Video extends PureComponent {\r\n  componentDidMount = () => {\r\n    this.videoRef.srcObject = this.props?.srcObject;\r\n  };\r\n\r\n  componentDidUpdate = (prevProps) => {\r\n    if (prevProps !== this.props) {\r\n      this.videoRef.srcObject = this.props?.srcObject;\r\n    }\r\n  };\r\n\r\n  onClick=()=>{\r\n      this.props.onClick(this.videoRef)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <video\r\n        id=\"video\"\r\n        autoPlay={true}\r\n        ref={(ref) => {\r\n          this.videoRef = ref;\r\n        }}\r\n        width={\"100%\"}\r\n        height={100}\r\n        style={{ background: \"black\", paddingTop: 5 }}\r\n        onClick={this.onClick}\r\n      ></video>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Video;\r\n","import React, { PureComponent } from 'react'\r\n\r\n\r\nclass Audio extends PureComponent {\r\n          componentDidMount = () => {\r\n                    this.audioRef.srcObject = this.props?.srcObject;\r\n          }\r\n\r\n          componentDidUpdate = (prevProps) => {\r\n                    if (prevProps.srcObject !== this.props.srcObject) {\r\n                              this.audioRef.srcObject = this.props?.srcObject;\r\n                    }\r\n          }\r\n\r\n          render() {\r\n                    return (\r\n                              <audio autoPlay={true} ref={(ref) => { this.audioRef = ref }} width={\"100%\"} height={100} style={{ background: \"black\", border: \"2px solid #224567\" }}>\r\n                              </audio>\r\n                    );\r\n          }\r\n}\r\n\r\nexport default Audio;\r\n","import { Button } from \"antd\";\r\nimport Avatar from \"antd/lib/avatar/avatar\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setUserRoom, userRoom } from \"../../global/UserRoom\";\r\nimport { setLargeVideo } from \"../../reducers/largeVideoReducer\";\r\nimport { store } from \"../../redux/store\";\r\nimport \"./style.scss\";\r\nconst ColorList = [\r\n  \"#f56a00\",\r\n  \"#7265e6\",\r\n  \"#ffbf00\",\r\n  \"#00a2ae,#885569\",\r\n  \"#7265e6\",\r\n  \"#885569\",\r\n  \"#00a2ae,#885569\",\r\n  \"#885569\",\r\n];\r\nclass UserComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { mute: false, hasVideo: false };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const item=this.props.item;\r\n    this.audioRef.srcObject = item?.audio?.stream;\r\n    this.videoRef.srcObject = item?.video?.stream;\r\n    if (this.videoRef.srcObject) {\r\n      this.setState({ hasVideo: true });\r\n    } else {\r\n      this.setState({ hasVideo: false });\r\n    }\r\n  };\r\n\r\n  componentDidUpdate = (prevProp) => {\r\n    if (this.props.item !== prevProp.item) {\r\n        const item=this.props.item;\r\n        this.audioRef.srcObject = item?.audio?.stream;\r\n        this.videoRef.srcObject = item?.video?.stream;\r\n        if (this.videoRef.srcObject) {\r\n          this.setState({ hasVideo: true });\r\n        } else {\r\n          this.setState({ hasVideo: false });\r\n        }\r\n    }\r\n  };\r\n\r\n  mute = (e) => {\r\n    e.preventDefault();\r\n    const mute = this.state.mute;\r\n    if (!mute) {\r\n      this.audioRef.muted = true;\r\n    } else {\r\n      this.audioRef.muted = false;\r\n    }\r\n    this.setState({ mute: !mute });\r\n  };\r\n\r\n  setLargeVideo = (e) => {\r\n    this.props.onHandleSetLargeVideos();\r\n    store.dispatch(setLargeVideo({ stream: this.videoRef.srcObject }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id={this.props.item.peerId}\r\n        onClick={this.setLargeVideo}\r\n        style={{\r\n          border: this.props.item.active ? \"2px solid red\" : \"none\",\r\n          position: \"relative\",\r\n          width: \"100%\",\r\n          height: \"auto\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <span style={{ color: \"#ddd\", fontWeight: \"bold\", position: \"absolute\", maxWidth: \"80%\", bottom: 5 }}>\r\n          {this.props.item?.peerName}\r\n        </span>\r\n        {this.state.mute ? (\r\n          <Button\r\n            onClick={this.mute}\r\n            type=\"link\"\r\n            shape=\"circle\"\r\n            danger\r\n            style={{ position: \"absolute\", top: 5, left: 5, zIndex: 10 }}\r\n            icon={<i className=\"material-icons\">volume_off</i>}\r\n          ></Button>\r\n        ) : (\r\n          <Button\r\n            onClick={this.mute}\r\n            type=\"link\"\r\n            shape=\"circle\"\r\n            danger\r\n            style={{ position: \"absolute\", top: 5, left: 5, zIndex: 10 }}\r\n            icon={<i className=\"material-icons\">volume_up</i>}\r\n          ></Button>\r\n        )}\r\n        {!this.state.hasVideo ? (\r\n          <div\r\n            id=\"placeHodler\"\r\n            style={{\r\n              color: \"#ddd\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              position: \"absolute\",\r\n              borderRadius: \"50%\",\r\n              width: 50,\r\n              height: 50,\r\n            }}\r\n          >\r\n            <Avatar\r\n              style={{ backgroundColor: `${ColorList[Math.floor(Math.random() * 10)]}`, verticalAlign: \"middle\" }}\r\n              size=\"large\"\r\n            >\r\n              {this.props.item?.peerName}\r\n\r\n              {/* {this.props.item?.peerName.match(/\\b([A-Z])/g)?.join(\"\")} */}\r\n            </Avatar>\r\n          </div>\r\n        ) : null}\r\n        <video\r\n          ref={(ref) => {\r\n            this.videoRef = ref;\r\n          }}\r\n          id=\"video\"\r\n          autoPlay={true}\r\n          width={\"100%\"}\r\n          height={100}\r\n          style={{ background: \"black\", border: \"2px solid #224567\" }}\r\n        ></video>\r\n        <audio\r\n          ref={(ref) => {\r\n            this.audioRef = ref;\r\n          }}\r\n          id=\"audio\"\r\n          autoPlay={true}\r\n        ></audio>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    streamRemoteState: state.streamRemoteState,\r\n    remoteElementState:state.remoteElementState\r\n    //         userOnRoomState: state.userOnRoomState\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    //         setLargeVideo: (data) => dispatch(setLargeVideo(data)),\r\n    //         setStream: (data) => dispatch(setStream(data))\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(UserComponent);\r\n","let userRoom=new Map();\r\nconst setUserRoom=(us)=>{\r\n          userRoom=us\r\n}\r\nexport {userRoom,setUserRoom};","import React, { Component, PureComponent } from \"react\";\r\n\r\nclass Audio extends PureComponent {\r\n  componentDidMount = () => {\r\n    this.audioRef.srcObject = this.props?.srcObject;\r\n  };\r\n\r\n  componentDidUpdate = (prevProps) => {\r\n    if (prevProps !== this.props) {\r\n      this.audioRef.srcObject = this.props?.srcObject;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <audio\r\n        style={{ width: \"100%\", height: \"80px\", display: \"none\" }}\r\n        ref={(ref) => {\r\n          this.audioRef = ref;\r\n        }}\r\n        id=\"audio\"\r\n        autoPlay={true}\r\n      ></audio>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Audio;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Video from \"./Video\";\r\nimport Audio from \"./Audio\";\r\nimport { store } from \"../../redux/store\";\r\nimport { setLargeVideo } from \"../../reducers/largeVideoReducer\";\r\nimport Avatar from \"antd/lib/avatar/avatar\";\r\n\r\nconst ColorList = [\r\n  \"#f56a00\",\r\n  \"#7265e6\",\r\n  \"#ffbf00\",\r\n  \"#00a2ae,#885569\",\r\n  \"#7265e6\",\r\n  \"#885569\",\r\n  \"#00a2ae,#885569\",\r\n  \"#885569\",\r\n];\r\n\r\nclass UserCloneComponent extends Component {\r\n  onVideoClick = (video) => {\r\n    this.props.onHandleSetLargeVideos();\r\n    store.dispatch(setLargeVideo({ stream: video.srcObject }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"auto\",\r\n          border: \"2px solid #ff5722\",\r\n          marginBottom: 10,\r\n          borderRadius: 2,\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        <span\r\n          style={{\r\n            color: \"#00bcd4\",\r\n            textShadow: \"0 0 black\",\r\n            fontWeight: \"bold\",\r\n            position: \"absolute\",\r\n            maxWidth: \"80%\",\r\n            bottom: 5,\r\n          }}\r\n        >\r\n          {this.props.item?.peerName}\r\n        </span>\r\n        {this.props.item.video.length === 0 ? (\r\n          <div\r\n            id=\"placeHodler\"\r\n            style={{\r\n              color: \"#ddd\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              position: \"absolute\",\r\n              borderRadius: \"50%\",\r\n              width: 50,\r\n              height: 50,\r\n            }}\r\n          >\r\n            <Avatar\r\n              style={{ backgroundColor: `${ColorList[Math.floor(Math.random() * 10)]}`, verticalAlign: \"middle\" }}\r\n              size=\"large\"\r\n            >\r\n              {this.props.item?.peerName}\r\n\r\n              {/* {this.props.item?.peerName.match(/\\b([A-Z])/g)?.join(\"\")} */}\r\n            </Avatar>\r\n          </div>\r\n        ) : null}\r\n        {this.props.item.video.map((video, index) => {\r\n          return <Video key={index} srcObject={video.stream} onClick={this.onVideoClick} />;\r\n        })}\r\n        <Audio srcObject={this.props.item?.audio?.stream} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUserCloneComponent.propTypes = {};\r\n\r\nexport default UserCloneComponent;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLargeVideo } from \"../../reducers/largeVideoReducer\";\r\nimport { setStream } from \"../../reducers/streamReducer\";\r\nimport Video from \"../Video/Video\";\r\nimport Audio from \"../Audio/Audio\";\r\nimport { Button } from \"antd\";\r\nimport UserComponent from \"../Video/UserComponent\";\r\nimport Item from \"antd/lib/list/Item\";\r\nimport { userRoom } from \"../../global/UserRoom\";\r\nimport { store } from \"../../redux/store\";\r\nimport { setUserOnRoom } from \"../../reducers/userOnRoomReducer\";\r\nimport UserCloneComponent from \"../Video/UserCloneComponent\";\r\nclass RemoteVideo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { mute: false };\r\n    this.audioRef = null;\r\n  }\r\n\r\n  onHandleSetLargeVideo = (item, index) => {\r\n    this.setActive(index);\r\n  };\r\n\r\n  setActive = (index) => {\r\n    const currentStream = { ...this.props.streamState };\r\n    const local = currentStream.local;\r\n    for (let j = 0; j < local.length; j++) {\r\n      const element = local[j];\r\n      element.active = false;\r\n    }\r\n    for (let i = 0; i < this.props.userOnRoomState.length; i++) {\r\n      const element = this.props.userOnRoomState[i];\r\n      if (i === index) {\r\n        element.active = true;\r\n      } else {\r\n        element.active = false;\r\n      }\r\n    }\r\n    this.props.setUserOnRoom(this.props.userOnRoomState);\r\n    this.props.setStream({ ...currentStream });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"auto\", overflow: \"auto\", padding: 1 }}>\r\n        {this.props.remoteElementState.map((item, index) => {\r\n          return (\r\n            //     <UserComponent\r\n            //       key={index}\r\n            //       item={item}\r\n            //       onHandleSetLargeVideos={() => this.onHandleSetLargeVideo(item, index)}\r\n            //     />\r\n            <UserCloneComponent\r\n              key={index}\r\n              item={item}\r\n              onHandleSetLargeVideos={() => this.onHandleSetLargeVideo(item, index)}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    streamState: state.streamState,\r\n    userOnRoomState: state.userOnRoomState,\r\n    remoteElementState: state.remoteElementState,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setLargeVideo: (data) => dispatch(setLargeVideo(data)),\r\n    setStream: (data) => dispatch(setStream(data)),\r\n    setUserOnRoom: (data) => dispatch(setUserOnRoom(data)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoteVideo);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLargeVideo } from \"../../reducers/largeVideoReducer\";\r\nimport { setStream } from \"../../reducers/streamReducer\";\r\nimport { store } from \"../../redux/store\";\r\nimport Video from \"../Video/Video\";\r\n\r\nclass LocalVideo extends Component {\r\n  onVideoClick = (video) => {\r\n    // this.props.onHandleSetLargeVideos();\r\n    store.dispatch(setLargeVideo({ stream: video.srcObject }));\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"auto\", overflow: \"auto\" }}>\r\n        {this.props.localElementState.videos.map((video, index) => {\r\n          return (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                position: \"relative\",\r\n                width: \"100%\",\r\n                height: \"auto\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <span\r\n                style={{\r\n                  color: \"#ddd\",\r\n                  textShadow: \"1px 1px black\",\r\n                  fontWeight: \"bold\",\r\n                  position: \"absolute\",\r\n                  maxWidth: \"80%\",\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                {window.roomClient?.username} (Me)\r\n              </span>\r\n              <Video srcObject={video?.stream} onClick={this.onVideoClick}></Video>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        {this.props.localElementState.screenCast.map((screen, index) => {\r\n          return (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                position: \"relative\",\r\n                width: \"100%\",\r\n                height: \"auto\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <span\r\n                style={{\r\n                  color: \"#ddd\",\r\n                  textShadow: \"1px 1px black\",\r\n                  fontWeight: \"bold\",\r\n                  position: \"absolute\",\r\n                  maxWidth: \"80%\",\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                {window.roomClient?.username} (Me)\r\n              </span>\r\n              <Video srcObject={screen?.stream} onClick={this.onVideoClick}></Video>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    localElementState: state.localElementState,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setLargeVideo: (data) => dispatch(setLargeVideo(data)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LocalVideo);\r\n","import React, { Component } from \"react\";\r\nimport Video from \"../Components/Video/Video\";\r\nimport RemoteVideo from \"../Components/RemoteVideo/RemoteVideo\";\r\nimport { connect } from \"react-redux\";\r\nimport LocalVideo from \"../Components/LocalVideo/LocalVideo\";\r\n\r\nclass SliderRight extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"100%\" }}>\r\n        <RemoteVideo />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    streamState: state.streamState,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    // setModal: (data) => dispatch(setModal(data)),\r\n    // setpdfViewer: (data) => dispatch(setpdfViewer(data)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(SliderRight);\r\n","import React, { Component } from 'react';\r\nimport ReactStopwatch from 'react-stopwatch';\r\n\r\nclass Clock extends Component {\r\n          constructor(props) {\r\n                    super(props);\r\n                    this.state = {};\r\n                    this.count = 0;\r\n          }\r\n\r\n          render() {\r\n                    return (\r\n                              <ReactStopwatch\r\n                                        seconds={0}\r\n                                        minutes={0}\r\n                                        hours={0}\r\n                                        render={({ formatted, hours, minutes, seconds }) => {\r\n                                                  return (\r\n                                                            <div style={{ position: \"absolute\", zIndex: 2, background: \"#fff\", fontWeight: 600, top: 5, right: 5 }}>\r\n                                                                      <p style={{ margin: 4, display: \"flex\", alignItems: \"center\", fontSize: 12 }}>\r\n                                                                                <i style={{ fontSize: 17}} className=\"material-icons\">alarm</i>\r\n                                                                                {formatted}\r\n                                                                      </p>\r\n                                                            </div>\r\n                                                  );\r\n                                        }}\r\n                              />\r\n                    );\r\n          }\r\n}\r\n\r\nexport default Clock;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Clock from '../Clock/Clock';\r\n\r\nclass LargeVideo extends Component {\r\n\r\n          // static propTypes = {\r\n          //           prop: PropTypes\r\n          // }\r\n\r\n          componentDidMount = () => {\r\n                    this.videoRef.srcObject = this.props.largeVideoState?.stream;\r\n          }\r\n\r\n          componentDidUpdate = (prevProps) => {\r\n                    console.log(this.props.largeVideoState?.stream)\r\n\r\n                    if (prevProps.largeVideoState !== this.props.largeVideoState) {\r\n                              this.videoRef.srcObject = this.props.largeVideoState?.stream;\r\n                    }\r\n          }\r\n\r\n          render() {\r\n                    return (\r\n                              <div style={{ position: \"relative\", width: \"100%\", height: \"100%\", background: \"black\" }}>\r\n                                        <Clock />\r\n                                        <video autoPlay ref={(el) => { this.videoRef = el }} style={{ position: \"relative\", width: \"100%\", height: \"100%\", background: \"black\" }} >\r\n                                        </video>\r\n                              </div>\r\n\r\n                    )\r\n          }\r\n}\r\nfunction mapStateToProps(state) {\r\n          return {\r\n                    largeVideoState: state.largeVideoState,\r\n          };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n          return {\r\n                    // setModal: (data) => dispatch(setModal(data)),\r\n                    // setpdfViewer: (data) => dispatch(setpdfViewer(data)),\r\n          };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(LargeVideo);\r\n","const EVENTS = {\r\n    SOCKET_CONNECTION: \"connection\",\r\n    SOCKET_CHANGE_ROOM_PASSWORD: \"SOCKET_CHANGE_ROOM_PASSWORD\",\r\n    SOCKET_CREATE_ROOM: \"SOCKET_CREATE_ROOM\",\r\n    SOCKET_GET_ROOM_INFO: \"SOCKET_GET_ROOM_INFO\",\r\n    SOCKET_DISCONNECT: \"disconnect\",\r\n    SOCKET_USER_DISCONNECT: \"SOCKET_USER_DISCONNECT\",\r\n    SOCKET_REMOVE_ROOM: \"SOCKET_REMOVE_ROOM\",\r\n    SOCKET_USER_LEFT_ROOM: \"SOCKET_USER_LEFT_ROOM\",\r\n    SOCKET_USER_JOIN_ROOM: \"SOCKET_USER_JOIN_ROOM\",\r\n    INCOMMING_MESSAGE: \"INCOMMING_MESSAGE\",\r\n    SOCKET_EXIT_ROOM : \"SOCKET_EXIT_ROOM\",\r\n    SOCKET_SEND_MESSAGE:\"SOCKET_SEND_MESSAGE\",\r\n    SOCKET_GET_MESSAGE_IN_ROOM: \"SOCKET_GET_MESSAGE_IN_ROOM\",\r\n    CHECK_ROOM_ALREADY:\"CHECK_ROOM_ALREADY\"\r\n\r\n}\r\n\r\nconst RTC_EVENTS = {\r\n    CREATE_TRANSPORT: \"CREATE_RTC_TRANSPORT\",\r\n    CONNECT_TRANSPORT: \"CONNECT_RTC_TRANSPORT\",\r\n    CREATE_PRODUCE: \"CREATE_PRODUCE\",\r\n    CREATE_CONSUME: \"CREATE_CONSUME\",\r\n    CONSUME_RESUME: \"CONSUME_RESUME\",\r\n    GET_ROUTER_CAPABILITIES: \"GET_ROUTER_CAPABILITIES\",\r\n    GET_PRODUCER: \"GET_PRODUCER\",\r\n    NEW_PRODUCER: \"NEW_PRODUCER\",\r\n    CLOSE_PRODUCER: \"CLOSE_PRODUCER\",\r\n    CLOSE_CONSUME: \"CLOSE_CONSUME\",\r\n    UPDATE_CONSUME: \"UPDATE_CONSUME\"\r\n}\r\n\r\n\r\nexport { EVENTS, RTC_EVENTS };\r\n","const Role = {\r\n          micEnable: false,\r\n          cameraEnable: false,\r\n          password:undefined\r\n}\r\n\r\nexport { Role }","import { message, notification } from \"antd\";\r\nimport { EVENTS, RTC_EVENTS } from \"../events/EVENTS\";\r\nimport { Role } from \"../global/Role\";\r\nimport { setUserRoom, userRoom } from \"../global/UserRoom\";\r\nimport { setLargeVideo } from \"../reducers/largeVideoReducer\";\r\nimport { setMessage } from \"../reducers/messageReducer\";\r\nimport { setRemoteStream } from \"../reducers/remoteReducer\";\r\nimport { setStream } from \"../reducers/streamReducer\";\r\nimport { setUserOnRoom } from \"../reducers/userOnRoomReducer\";\r\nimport { store } from \"../redux/store\";\r\n\r\nconst mediaType = {\r\n  audio: \"audioType\",\r\n  video: \"videoType\",\r\n  screen: \"screenType\",\r\n};\r\nconst _EVENTS = {\r\n  exitRoom: \"exitRoom\",\r\n  openRoom: \"openRoom\",\r\n  startVideo: \"startVideo\",\r\n  stopVideo: \"stopVideo\",\r\n  startAudio: \"startAudio\",\r\n  stopAudio: \"stopAudio\",\r\n  startScreen: \"startScreen\",\r\n  stopScreen: \"stopScreen\",\r\n};\r\n\r\nclass RoomClient {\r\n  constructor(mediasoupClient, socket, room_id, name, password, successCallback) {\r\n    this.name = name;\r\n    this.mediasoupClient = mediasoupClient;\r\n    this.socket = socket;\r\n    this.producerTransport = null;\r\n    this.consumerTransport = null;\r\n    this.device = null;\r\n    this.room_id = room_id;\r\n    this.consumers = new Map();\r\n    this.producers = new Map();\r\n    this.producerLabel = new Map();\r\n    this._isOpen = false;\r\n    this.eventListeners = new Map();\r\n    Object.keys(_EVENTS).forEach((evt) => {\r\n      this.eventListeners.set(evt, []);\r\n    });\r\n    this.password = password;\r\n    this.createRoom(room_id, password).then(async () => {\r\n      await this.join(name, room_id, password);\r\n      console.log(\"join\")\r\n      await this.initSockets();\r\n      this._isOpen = true;\r\n      console.log(\"successCallback\")\r\n      successCallback();\r\n    });\r\n  }\r\n\r\n  createRoom = async (roomName, password) => {\r\n    const reponse = await this.socket.request(EVENTS.SOCKET_CREATE_ROOM, { roomName, password });\r\n    console.log(reponse)\r\n  };\r\n\r\n  join = async (name, room_id, password) => {\r\n    await this.socket.request(EVENTS.SOCKET_USER_JOIN_ROOM, { username: name, roomName: room_id, password });\r\n    const data = await this.socket.request(RTC_EVENTS.GET_ROUTER_CAPABILITIES);\r\n    console.log(data)\r\n    let device = await this.loadDevice(data);\r\n    this.device = device;\r\n    await this.initTransports(device);\r\n    // await this.produce(mediaType.video, null)\r\n    const myRoom = await this.socket.request(EVENTS.SOCKET_GET_ROOM_INFO);\r\n    const newMap = new Map()\r\n    console.log(\"myRoom\",myRoom)\r\n\r\n    for (let index = 0; index < myRoom.length; index++) {\r\n      if (myRoom[index].socketId !== this.socket.id) {\r\n        console.log(\"vao day\")\r\n        const currentMap = store.getState().streamRemoteState.get(myRoom[index].socketId)\r\n        newMap.set(myRoom[index].socketId, { active: false, audio: currentMap?.audio, video: currentMap?.video })\r\n      }\r\n    }\r\n    store.dispatch(setRemoteStream(newMap))\r\n    store.dispatch(setUserOnRoom(myRoom.filter(value => value.id !== this.socket.id)))\r\n    await this.socket.emit(RTC_EVENTS.GET_PRODUCER);\r\n  };\r\n\r\n  loadDevice = async (routerRtpCapabilities) => {\r\n    let device;\r\n    try {\r\n      device = new this.mediasoupClient.Device();\r\n    } catch (error) {\r\n      if (error.name === \"UnsupportedError\") {\r\n        console.error(\"browser not supported\");\r\n      }\r\n      console.error(error);\r\n    }\r\n    await device.load({\r\n      routerRtpCapabilities,\r\n    });\r\n    return device;\r\n  };\r\n\r\n  initTransports = async (device) => {\r\n    // init producerTransport\r\n    {\r\n      const data = await this.socket.request(RTC_EVENTS.CREATE_TRANSPORT, {\r\n        forceTcp: false,\r\n        rtpCapabilities: device.rtpCapabilities,\r\n      });\r\n\r\n      if (data.error) {\r\n        console.error(data.error);\r\n        return;\r\n      }\r\n      this.producerTransport = device.createSendTransport(data);\r\n\r\n      this.producerTransport.on(\"connect\", async ({ dtlsParameters }, callback, errback) => {\r\n        console.log(dtlsParameters)\r\n        try {\r\n          await this.socket.request(RTC_EVENTS.CONNECT_TRANSPORT, { dtlsParameters, transport_id: data.id });\r\n          callback();\r\n        } catch (error) {\r\n          errback(error);\r\n        }\r\n      });\r\n\r\n      this.producerTransport.on(\"produce\", async ({ kind, rtpParameters }, callback, errback) => {\r\n        try {\r\n          const { producer_id, producer_name } = await this.socket.request(RTC_EVENTS.CREATE_PRODUCE, {\r\n            producerTransportId: this.producerTransport.id,\r\n            kind,\r\n            rtpParameters,\r\n          });\r\n          callback({ id: producer_id, producer_name });\r\n        } catch (err) {\r\n          errback(err);\r\n        }\r\n      });\r\n\r\n      this.producerTransport.on(\"connectionstatechange\", (state) => {\r\n        switch (state) {\r\n          case \"connecting\":\r\n            break;\r\n          case \"connected\":\r\n            //localVideo.srcObject = stream\r\n            break;\r\n          case \"failed\":\r\n            this.producerTransport.close();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n    }\r\n\r\n    // init consumerTransport\r\n    {\r\n      const data = await this.socket.request(RTC_EVENTS.CREATE_TRANSPORT, { forceTcp: false });\r\n      if (data.error) {\r\n        console.error(data.error);\r\n        return;\r\n      }\r\n      // only one needed\r\n      this.consumerTransport = device.createRecvTransport(data);\r\n      this.consumerTransport.on(\"connect\", async ({ dtlsParameters }, callback, errback) => {\r\n        try {\r\n          await this.socket.request(RTC_EVENTS.CONNECT_TRANSPORT, { transport_id: this.consumerTransport.id, dtlsParameters });\r\n          callback();\r\n        } catch (error) {\r\n          errback(errback);\r\n        }\r\n      });\r\n\r\n      this.consumerTransport.on(\"connectionstatechange\", async (state) => {\r\n        switch (state) {\r\n          case \"connecting\":\r\n            break;\r\n\r\n          case \"connected\":\r\n            //remoteVideo.srcObject = await stream;\r\n            //await socket.request('resume');\r\n            break;\r\n\r\n          case \"failed\":\r\n            this.consumerTransport.close();\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  initSockets = () => {\r\n    this.socket.on(\"incomingMessage\", (data) => {\r\n      console.log(data)\r\n      store.dispatch(setMessage(data));\r\n    })\r\n\r\n    this.socket.on(\"userJoinRoom\", async ({ name, id }) => {\r\n      notification[\"info\"]({\r\n        message: 'Thông báo',\r\n        description: name + \" đã tham gia vào cuộc họp\",\r\n        placement: \"bottomRight\"\r\n      });\r\n      const myRoom = await this.socket.request(\"getMyRoomInfo\");\r\n      const newMap = new Map()\r\n      for (let index = 0; index < myRoom.length; index++) {\r\n        if (myRoom[index].id !== this.socket.id) {\r\n          const currentMap = store.getState().streamRemoteState.get(myRoom[index].id)\r\n          newMap.set(myRoom[index].id, { active: false, audio: currentMap?.audio, video: currentMap?.video })\r\n        }\r\n      }\r\n      store.dispatch(setUserOnRoom(myRoom.filter(value => value.id !== this.socket.id)))\r\n      store.dispatch(setRemoteStream(newMap))\r\n\r\n    });\r\n    this.socket.on(\"userLeftRoom\", async ({ name, id }) => {\r\n      notification[\"warning\"]({\r\n        message: 'Thông báo',\r\n        description: name + \" đã rời khỏi cuộc họp\",\r\n        placement: \"bottomRight\"\r\n      });\r\n      const myRoom = await this.socket.request(\"getMyRoomInfo\");\r\n      const newMap = new Map()\r\n      for (let index = 0; index < myRoom.length; index++) {\r\n        if (myRoom[index].id !== this.socket.id) {\r\n          const currentMap = store.getState().streamRemoteState.get(myRoom[index].id)\r\n          newMap.set(myRoom[index].id, { active: false, audio: currentMap?.audio, video: currentMap?.video })\r\n        }\r\n      }\r\n      store.dispatch(setUserOnRoom(myRoom.filter(value => value.id !== this.socket.id)))\r\n      store.dispatch(setRemoteStream(newMap))\r\n\r\n    });\r\n    this.socket.on(\"consumerClosed\", ({ consumer_id }) => {\r\n      console.log(\"closing consumer:\", consumer_id);\r\n      this.removeConsumer(consumer_id);\r\n    });\r\n    this.socket.on(RTC_EVENTS.NEW_PRODUCER, async (data) => {\r\n      console.log(data)\r\n      for (let index = 0; index < data.length; index++) {\r\n        const { producer_id, peerName, peerId } = data[index];\r\n        await this.consume(producer_id, peerName, peerId);\r\n      }\r\n    });\r\n\r\n    this.socket.on(\"disconnect\", () => {\r\n      this.exit(false);\r\n    });\r\n  };\r\n\r\n  produce = async (type, deviceId = null) => {\r\n    let mediaConstraints = {};\r\n    let audio = false;\r\n    let screen = false;\r\n    switch (type) {\r\n      case mediaType.audio:\r\n        mediaConstraints = {\r\n          audio: {\r\n            deviceId: deviceId,\r\n          },\r\n          video: false,\r\n        };\r\n        audio = true;\r\n        break;\r\n      case mediaType.video:\r\n        mediaConstraints = {\r\n          audio: false,\r\n          video: {\r\n            width: {\r\n              min: 640,\r\n              ideal: 1920,\r\n            },\r\n            height: {\r\n              min: 400,\r\n              ideal: 1080,\r\n            },\r\n            deviceId: deviceId,\r\n            /*aspectRatio: {\r\n                                        ideal: 1.7777777778\r\n                                    }*/\r\n          },\r\n        };\r\n        break;\r\n      case mediaType.screen:\r\n        mediaConstraints = false;\r\n        screen = true;\r\n        break;\r\n      default:\r\n        return;\r\n        break;\r\n    }\r\n    if (!this.device.canProduce(\"video\") && !audio) {\r\n      console.error(\"cannot produce video\");\r\n      return;\r\n    }\r\n    if (this.producerLabel.has(type)) {\r\n      console.log(\"producer already exists for this type \" + type);\r\n      return;\r\n    }\r\n    let stream;\r\n    try {\r\n      stream = screen ? await navigator.mediaDevices.getDisplayMedia() : await navigator.mediaDevices.getUserMedia(mediaConstraints);\r\n      const track = audio ? stream.getAudioTracks()[0] : stream.getVideoTracks()[0];\r\n      const params = {\r\n        track,\r\n      };\r\n      if (!audio && !screen) {\r\n        params.encodings = [\r\n          {\r\n            rid: \"r0\",\r\n            maxBitrate: 100000,\r\n            //scaleResolutionDownBy: 10.0,\r\n            scalabilityMode: \"S1T3\",\r\n          },\r\n          {\r\n            rid: \"r1\",\r\n            maxBitrate: 300000,\r\n            scalabilityMode: \"S1T3\",\r\n          },\r\n          {\r\n            rid: \"r2\",\r\n            maxBitrate: 900000,\r\n            scalabilityMode: \"S1T3\",\r\n          },\r\n        ];\r\n        params.codecOptions = {\r\n          videoGoogleStartBitrate: 1000,\r\n        };\r\n      }\r\n      this.producer = await this.producerTransport.produce(params);\r\n      this.producers.set(this.producer.id, this.producer);\r\n\r\n      let elem;\r\n      if (!audio) {\r\n        const streamState = { ...store.getState().streamState };\r\n        const local = streamState.local;\r\n        const remote = streamState.remote;\r\n        local.push({\r\n          stream,\r\n          id: this.producer.id,\r\n          name: this.name,\r\n          hasVideo: true\r\n        });\r\n        store.dispatch(setStream({ local, remote }));\r\n        store.dispatch(setLargeVideo({ stream }));\r\n      }\r\n\r\n      this.producer.on(\"trackended\", () => {\r\n        console.log(\"producer trackend\")\r\n        this.closeProducer(type);\r\n      });\r\n\r\n      this.producer.on(\"transportclose\", () => {\r\n        console.log(\"producer transport close\");\r\n        this.producers.delete(this.producer.id);\r\n      });\r\n\r\n      this.producer.on(\"close\", () => {\r\n        console.log(\"closing producer\");\r\n        this.producers.delete(this.producer.id);\r\n      });\r\n\r\n      this.producerLabel.set(type, this.producer.id);\r\n\r\n      switch (type) {\r\n        case mediaType.audio:\r\n          this.event(_EVENTS.startAudio);\r\n          break;\r\n        case mediaType.video:\r\n          this.event(_EVENTS.startVideo);\r\n          break;\r\n        case mediaType.screen:\r\n          this.event(_EVENTS.startScreen);\r\n          break;\r\n        default:\r\n          return;\r\n          break;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  consume = async (producer_id, peerName, peerId) => {\r\n    //let info = await roomInfo()\r\n    let userOnRoom = this.cloneMap(store.getState().streamRemoteState)\r\n    this.getConsumeStream(producer_id).then(({ consumer, stream, kind }) => {\r\n      this.consumers.set(consumer.id, consumer);\r\n      let currentUser = userOnRoom.get(peerId);\r\n\r\n      if (!currentUser) {\r\n        return;\r\n      }\r\n      if (kind === \"video\") {\r\n        currentUser.video = { type: \"video\", stream, id: consumer.id }\r\n      } else {\r\n        currentUser.audio = { type: \"audio\", stream, id: consumer.id }\r\n      }\r\n      console.log(\"123\",stream)\r\n\r\n      store.dispatch(setRemoteStream(userOnRoom))\r\n      consumer.on(\"trackended\", () => {\r\n        console.log(\"consumer trackend\")\r\n        this.removeConsumer(consumer.id);\r\n      });\r\n      consumer.on(\"transportclose\", () => {\r\n        console.log(\"consumer transportclose\")\r\n        this.removeConsumer(consumer.id);\r\n      });\r\n    });\r\n  };\r\n\r\n  getConsumeStream = async (producerId) => {\r\n    const { rtpCapabilities } = this.device;\r\n    const data = await this.socket.request(RTC_EVENTS.CREATE_CONSUME, {\r\n      rtpCapabilities,\r\n      consumerTransportId: this.consumerTransport.id, // might be\r\n      producerId,\r\n    });\r\n    const { id, kind, rtpParameters } = data.params;\r\n\r\n    let codecOptions = {};\r\n    const consumer = await this.consumerTransport.consume({\r\n      id,\r\n      producerId,\r\n      kind,\r\n      rtpParameters,\r\n      codecOptions,\r\n    });\r\n    console.log(consumer.track)\r\n\r\n    const stream = new MediaStream();\r\n    stream.addTrack(consumer.track);\r\n    return { consumer, stream, kind, };\r\n  };\r\n\r\n  closeProducer = (type) => {\r\n    if (!this.producerLabel.has(type)) {\r\n      console.log(\"there is no producer for this type \" + type);\r\n      return;\r\n    }\r\n    let producer_id = this.producerLabel.get(type);\r\n    this.socket.emit(\"producerClosed\", { producer_id, });\r\n    this.producers.get(producer_id).close();\r\n    this.producers.delete(producer_id);\r\n    this.producerLabel.delete(type);\r\n\r\n    if (type !== mediaType.audio) {\r\n      const streamState = store.getState().streamState;\r\n      const remote = streamState.remote.filter((value) => value.id !== producer_id);\r\n      const local = streamState.local.filter((value) => value.id !== producer_id);\r\n      store.dispatch(setStream({ local, remote }));\r\n    }\r\n\r\n    switch (type) {\r\n      case mediaType.audio:\r\n        this.event(_EVENTS.stopAudio);\r\n        break;\r\n      case mediaType.video:\r\n        this.event(_EVENTS.stopVideo);\r\n        break;\r\n      case mediaType.screen:\r\n        this.event(_EVENTS.stopScreen);\r\n        break;\r\n      default:\r\n        return;\r\n        break;\r\n    }\r\n  };\r\n\r\n  pauseProducer(type) {\r\n    if (!this.producerLabel.has(type)) {\r\n      console.log(\"there is no producer for this type \" + type);\r\n      return;\r\n    }\r\n    let producer_id = this.producerLabel.get(type);\r\n    this.producers.get(producer_id).pause();\r\n  }\r\n\r\n  resumeProducer = (type) => {\r\n    if (!this.producerLabel.has(type)) {\r\n      console.log(\"there is no producer for this type \" + type);\r\n      return;\r\n    }\r\n    let producer_id = this.producerLabel.get(type);\r\n    this.producers.get(producer_id).resume();\r\n  };\r\n\r\n  removeConsumer = (consumer_id) => {\r\n    let userOnRoom = this.cloneMap(store.getState().streamRemoteState);\r\n    userOnRoom.forEach(user => {\r\n      let { audio, video } = user;\r\n      if (audio) {\r\n        if (audio.id === consumer_id) {\r\n          user.audio = null;\r\n        }\r\n      }\r\n\r\n      if (video) {\r\n        if (video.id === consumer_id) {\r\n          user.video = null;\r\n        }\r\n      }\r\n\r\n    })\r\n    store.dispatch(setRemoteStream(userOnRoom))\r\n    this.consumers.delete(consumer_id);\r\n  };\r\n\r\n  exit(offline = false) {\r\n    let clean = () => {\r\n      this._isOpen = false;\r\n      this.consumerTransport.close();\r\n      this.producerTransport.close();\r\n      this.socket.off(\"disconnect\");\r\n      this.socket.off(\"newProducers\");\r\n      this.socket.off(\"consumerClosed\");\r\n      this.socket.off(\"userJoinRoom\");\r\n      this.socket.off(\"userLeftRoom\");\r\n    };\r\n\r\n    if (!offline) {\r\n      this.socket.request(\"exitRoom\").then((e) => console.log(e)).catch((e) => console.warn(e)).finally(() => { clean(); });\r\n    } else {\r\n      clean();\r\n    }\r\n    store.dispatch(setStream({ local: [], remote: [] }));\r\n    this.event(_EVENTS.exitRoom);\r\n  }\r\n\r\n  getAllRemoteVideo = () => {\r\n\r\n  }\r\n\r\n  cloneMap = (dataMap) => {\r\n    const newMap = new Map();\r\n    for (const [key, value] of dataMap) {\r\n      newMap.set(key, value)\r\n    }\r\n    return newMap\r\n  }\r\n\r\n  getAllChat = async () => {\r\n    const messages = await this.socket.request(\"getAllChat\");\r\n    console.log(messages)\r\n    store.dispatch(setMessage(messages))\r\n  }\r\n\r\n  roomInfo = async () => {\r\n    let info = await this.socket.request(\"roomInfo\");\r\n    return info;\r\n  };\r\n\r\n  changePassword = async () => {\r\n    const res = await this.socket.request(\"changePass\", Role.password);\r\n    message.info(res)\r\n  };\r\n\r\n\r\n  static get mediaType() {\r\n    return mediaType;\r\n  }\r\n\r\n  event = (evt) => {\r\n    console.log(evt);\r\n    if (this.eventListeners.has(evt)) {\r\n      this.eventListeners.get(evt).forEach((callback) => callback());\r\n    }\r\n  };\r\n\r\n  on = (evt, callback) => {\r\n    this.eventListeners.get(evt).push(callback);\r\n  };\r\n\r\n  isOpen = () => {\r\n    return this._isOpen;\r\n  };\r\n\r\n  static get EVENTS() {\r\n    return _EVENTS;\r\n  }\r\n}\r\n\r\nexport { RoomClient };\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './style.scss'\r\nimport { RoomClient } from '../../module/RoomClient';\r\n\r\nexport default class CameraOption extends Component {\r\n          // static propTypes = {\r\n          //           prop: PropTypes\r\n          // }\r\n\r\n          constructor(props) {\r\n                    super(props);\r\n                    this.state = { video: [] };\r\n          }\r\n\r\n\r\n          componentDidMount = async () => {\r\n                    const devices = await window.navigator.mediaDevices.enumerateDevices();\r\n                    const video = [];\r\n                    for (let index = 0; index < devices.length; index++) {\r\n                              const deviceInfo = devices[index];\r\n                              if (deviceInfo.kind === 'videoinput') {\r\n                                        video.push({ deviceInfo, active: false })\r\n                              }\r\n\r\n\r\n                    }\r\n                    this.setState({ video })\r\n          }\r\n\r\n          onActiveOptionCamera = async (item, index) => {\r\n                    const currentVideo = this.state.video;\r\n                    for (let i = 0; i < currentVideo.length; i++) {\r\n                              const element = currentVideo[i];\r\n                              if (i === index) {\r\n                                        element.active = true;\r\n                                        await window.roomClient?.closeProducer(RoomClient.mediaType.video)\r\n                                        window.roomClient?.produce(RoomClient.mediaType.video, element.deviceInfo.deviceId)\r\n                              } else {\r\n                                        element.active = false;\r\n                              }\r\n                    }\r\n                    this.setState({ video: currentVideo })\r\n          }\r\n\r\n          render() {\r\n                    return (\r\n                              <div className=\"micOption\" key=\"camera\">\r\n                                        <div className=\"row\"><i className=\"material-icons\"> videocam</i><h2 >Videos</h2></div>\r\n                                        {this.state.video.map((item, index) => {\r\n                                                  return <div onClick={() => this.onActiveOptionCamera(item, index)} key={\"camera\" + index}> <div className=\"row padding\">{item.active ? <i className=\"material-icons\"> check</i> : <i className=\"material-icons\"> videocam</i>}<span >{item.deviceInfo.label}</span></div></div>\r\n                                        })}\r\n                              </div>\r\n                    )\r\n          }\r\n}","import React, { Component } from \"react\";\r\nimport Video from \"../Components/Video/Video\";\r\nimport RemoteVideo from \"../Components/RemoteVideo/RemoteVideo\";\r\nimport { connect } from \"react-redux\";\r\nimport LocalVideo from \"../Components/LocalVideo/LocalVideo\";\r\n\r\nclass SliderLeft extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"100%\" }}>\r\n        <LocalVideo />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    streamState: state.streamState,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    // setModal: (data) => dispatch(setModal(data)),\r\n    // setpdfViewer: (data) => dispatch(setpdfViewer(data)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(SliderLeft);\r\n","import React, { Component } from 'react';\r\nimport './style.scss'\r\nclass MenuComponent extends Component {\r\n          constructor(props) {\r\n                    super(props);\r\n                    this.state = { fullscreen: false };\r\n          }\r\n\r\n          openFullscreen = () => {\r\n                    const elem = document.documentElement;\r\n                    if (!this.state.fullscreen) {\r\n                              if (elem.requestFullscreen) {\r\n                                        elem.requestFullscreen();\r\n                              } else if (elem.webkitRequestFullscreen) { /* Safari */\r\n                                        elem.webkitRequestFullscreen();\r\n                              } else if (elem.msRequestFullscreen) { /* IE11 */\r\n                                        elem.msRequestFullscreen();\r\n                              }\r\n                    } else {\r\n                              document.exitFullscreen();\r\n                    }\r\n\r\n                    this.setState({ fullscreen: !this.state.fullscreen })\r\n          }\r\n          render() {\r\n                    return (\r\n                              <div className=\"menuOption\">\r\n                                        <div onClick={() => { }}> <div className=\"row padding\"><i className=\"material-icons\"> high_quality</i><span >Chất lượng</span></div></div>\r\n                                        <div onClick={this.openFullscreen}>\r\n                                                  {this.state.fullscreen ? <div className=\"row padding\"><i className=\"material-icons\"> fullscreen_exit</i><span >Thoát toàn màn hình</span></div> : <div className=\"row padding\"><i className=\"material-icons\"> fullscreen</i><span >Toàn màn hình</span></div>}\r\n                                        </div>\r\n                                        <div onClick={() => { }}> <div className=\"row padding\"><i className=\"material-icons\"> mic</i><span >Ghi âm</span></div></div>\r\n                                        <div onClick={() => { }}> <div className=\"row padding\"><i className=\"material-icons\"> videocam</i><span >Quay video</span></div></div>\r\n                              </div>\r\n                    );\r\n          }\r\n}\r\n\r\nexport default MenuComponent;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './style.scss'\r\n\r\nexport default class MicOption extends Component {\r\n          // static propTypes = {\r\n          //           prop: PropTypes\r\n          // }\r\n\r\n          constructor(props) {\r\n                    super(props);\r\n                    this.state = { mic: [], speaker: [] };\r\n          }\r\n\r\n\r\n          componentDidMount = async () => {\r\n                    const devices = await window.navigator.mediaDevices.enumerateDevices();\r\n                    const mic = [];\r\n                    const speaker = []\r\n                    for (let index = 0; index < devices.length; index++) {\r\n                              const deviceInfo = devices[index];\r\n                              if (deviceInfo.kind === 'audioinput') {\r\n                                        mic.push({ deviceInfo, active: deviceInfo.deviceId === \"default\" ? true : false })\r\n                              }\r\n                              if (deviceInfo.kind === 'audiooutput') {\r\n                                        speaker.push({ deviceInfo, active: deviceInfo.deviceId === \"default\" ? true : false })\r\n                              }\r\n\r\n                    }\r\n                    this.setState({ mic, speaker })\r\n          }\r\n\r\n          onActiveOptionMic = (item, index) => {\r\n                    const currentMic = this.state.mic;\r\n                    for (let i = 0; i < currentMic.length; i++) {\r\n                              const element = currentMic[i];\r\n                              if (i === index) {\r\n                                        element.active = true;\r\n\r\n                              } else {\r\n                                        element.active = false;\r\n                              }\r\n                    }\r\n                    this.setState({ mic: currentMic })\r\n          }\r\n\r\n          onActiveOptionCamera = (item, index) => {\r\n                    const currentSpeaker = this.state.speaker;\r\n                    for (let i = 0; i < currentSpeaker.length; i++) {\r\n                              const element = currentSpeaker[i];\r\n                              if (i === index) {\r\n                                        element.active = true;\r\n                              } else {\r\n                                        element.active = false;\r\n                              }\r\n                    }\r\n                    this.setState({ speaker: currentSpeaker })\r\n          }\r\n\r\n          render() {\r\n                    return (\r\n                              <div className=\"micOption\" key=\"mic\">\r\n                                        <div className=\"row\"><i className=\"material-icons\"> mic</i><h2 >Microphones</h2></div>\r\n                                        {this.state.mic.map((item, index) => {\r\n                                                  return <div onClick={() => this.onActiveOptionMic(item, index)} className={item.active ? \"active\" : \"\"} key={\"mic\" + index} ><div className=\"row padding\">{item.active ? <i className=\"material-icons\"> check</i> : <i className=\"material-icons\"> mic</i>}<span >{item.deviceInfo.label}</span></div></div>\r\n                                        })}\r\n                                        <div className=\"row\"><i className=\"material-icons\"> volume_up</i><h2 >Speaker</h2></div>\r\n                                        {this.state.speaker.map((item, index) => {\r\n                                                  return <div onClick={() => this.onActiveOptionCamera(item, index)} className={item.active ? \"active\" : \"\"} key={\"speaker\" + index}><div className=\"row padding\">{item.active ? <i className=\"material-icons\"> check</i> : <i className=\"material-icons\"> volume_up</i>}<span >{item.deviceInfo.label}</span></div></div>\r\n                                        })}\r\n                              </div>\r\n                    )\r\n          }\r\n}","import { Button, Dropdown } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Role } from \"../../global/Role\";\r\nimport { setViewOneCamera } from \"../../reducers/uiReducer\";\r\nimport MenuComponent from \"../Menu/Menu\";\r\nimport CameraOption from \"../Option/CameraOption\";\r\nimport MicOption from \"../Option/MicOption\";\r\nimport './style.scss'\r\nclass FooterTool extends Component {\r\n          constructor(props) {\r\n                    super(props);\r\n                    this.state = { openCamera: Role.cameraEnable, openMic: Role.micEnable };\r\n          }\r\n          onChangeView = () => {\r\n                    console.log(\"onChangeView\");\r\n                    this.props.setViewOneCamera()\r\n          }\r\n          render() {\r\n                    const { userOnRoomState } = this.props\r\n                    return (\r\n                              <div\r\n                                        className=\"footerTool\"\r\n                                        style={{\r\n                                                  width: \"100%\",\r\n                                                  height: \"100%\",\r\n                                                  justifyContent: \"center\",\r\n                                                  alignItems: \"center\",\r\n                                                  display: \"flex\",\r\n                                                  position: \"relative\"\r\n                                        }}\r\n                              >\r\n                                        <div style={{ position: \"absolute\", left: 0, display: \"flex\" }}>\r\n                                                  <Button style={{ margin: \"0px 5px\" }}\r\n                                                            onClick={this.props.onDisplayChat}\r\n                                                            size=\"large\"\r\n                                                            shape=\"circle\"\r\n                                                            icon={<i className=\"material-icons\">chat</i>}>\r\n                                                  </Button>\r\n                                                  <Button style={{ margin: \"0px 5px\" }}\r\n                                                            onClick={this.props.onDisplayRoomInfo}\r\n                                                            size=\"large\"\r\n                                                            shape=\"circle\"\r\n                                                            icon={<i className=\"material-icons\">security</i>}>\r\n                                                  </Button>\r\n                                                  <Dropdown overlay={<MenuComponent />} trigger={['click']}>\r\n                                                            <Button style={{ margin: \"0px 5px\" }}\r\n                                                                      // onClick={this.props.onDisplayChat}\r\n                                                                      size=\"large\"\r\n                                                                      shape=\"circle\"\r\n                                                                      icon={<i className=\"material-icons\">menu</i>}>\r\n                                                            </Button>\r\n                                                  </Dropdown>,\r\n\r\n                                        </div>\r\n\r\n                                        <Button\r\n                                                  onClick={this.props.onStartScreenShare}\r\n                                                  style={{ margin: \"0px 5px\" }}\r\n                                                  size=\"large\"\r\n                                                  shape=\"circle\"\r\n                                                  icon={<i className=\"material-icons\">tv</i>}\r\n                                        >\r\n                                        </Button>\r\n                                        {this.state.openMic ? <div style={{ position: \"relative\" }} key=\"mic\">\r\n                                                  <Button\r\n                                                            onClick={() => { this.props.onStopMic(); this.setState({ openMic: false }) }}\r\n                                                            style={{ margin: \"0px 5px\" }}\r\n                                                            size=\"large\"\r\n                                                            shape=\"circle\"\r\n                                                            icon={<i className=\"material-icons\">mic</i>}\r\n                                                  >\r\n                                                  </Button>\r\n                                                  <Dropdown forceRender={true} trigger={['click']} overlay={<MicOption />}>\r\n                                                            <Button\r\n                                                                      key=\"dasda\"\r\n                                                                      size=\"small\"\r\n                                                                      shape=\"circle\"\r\n                                                                      style={{ position: \"absolute\", bottom: -3, right: -3 }}\r\n                                                                      icon={<i className=\"material-icons\">expand_more</i>}\r\n                                                            >\r\n                                                            </Button>\r\n                                                  </Dropdown>\r\n                                        </div> : <Button\r\n                                                  onClick={() => { this.props.onOpenMic(); this.setState({ openMic: true }) }}\r\n                                                  style={{ margin: \"0px 5px\" }}\r\n                                                  size=\"large\"\r\n                                                  shape=\"circle\"\r\n                                                  icon={<i className=\"material-icons\">mic_off</i>}\r\n                                        >\r\n                                                  </Button>}\r\n\r\n\r\n                                        <Button\r\n                                                  style={{ margin: \"0px 5px\" }}\r\n                                                  size=\"large\"\r\n                                                  type=\"primary\"\r\n                                                  shape=\"circle\"\r\n                                                  danger\r\n                                                  icon={<i className=\"material-icons\">call_end</i>}\r\n                                                  onClick={this.props.onEndCall}\r\n                                        >\r\n                                        </Button>\r\n                                        {this.state.openCamera ? (\r\n                                                  <div style={{ position: \"relative\" }} key=\"camera\">\r\n                                                            <Button\r\n                                                                      onClick={() => { this.props.onStopCamera(); this.setState({ openCamera: false }) }}\r\n                                                                      style={{ margin: \"0px 5px\" }}\r\n                                                                      size=\"large\"\r\n                                                                      shape=\"circle\"\r\n                                                                      icon={<i className=\"material-icons\">videocam</i>}\r\n                                                            >\r\n                                                            </Button>\r\n                                                            <Dropdown forceRender={true} trigger={['click']} overlay={<CameraOption />}>\r\n\r\n                                                                      <Button\r\n                                                                                size=\"small\"\r\n                                                                                shape=\"circle\"\r\n                                                                                style={{ position: \"absolute\", bottom: -3, right: -3 }}\r\n                                                                                icon={<i className=\"material-icons\">expand_more</i>}\r\n                                                                      >\r\n                                                                      </Button>\r\n                                                            </Dropdown>\r\n                                                  </div>\r\n                                        ) : (\r\n                                                            <Button\r\n                                                                      onClick={() => { this.props.onOpenCamera(); this.setState({ openCamera: true }) }}\r\n                                                                      style={{ margin: \"0px 5px\" }}\r\n                                                                      size=\"large\"\r\n                                                                      shape=\"circle\"\r\n                                                                      icon={<i className=\"material-icons\">videocam_off</i>}\r\n                                                            >\r\n                                                            </Button>\r\n                                                  )}\r\n                                        <div style={{ position: \"absolute\", right: 0, display: \"flex\" }}>\r\n                                                  {userOnRoomState.length > 1 ? <Button style={{ margin: \"0px 5px\" }} size=\"large\" onClick={this.onChangeView} shape=\"circle\" icon={<i className=\"material-icons\">grid_on</i>}>\r\n                                                  </Button> : null}\r\n                                                  <Button onClick={this.props.onShareLink} style={{ margin: \"0px 5px\" }} size=\"large\" shape=\"circle\" icon={<i className=\"material-icons\">person_add</i>}>\r\n                                                  </Button>\r\n                                                  <Button onClick={this.props.onDisplayRemote} style={{ margin: \"0px 5px\" }} size=\"large\" shape=\"circle\" icon={<i className=\"material-icons\">swap_horiz</i>}>\r\n                                                  </Button>\r\n                                        </div>\r\n\r\n                              </div>\r\n                    );\r\n          }\r\n}\r\nfunction mapStateToProps(state) {\r\n          return {\r\n                    streamState: state.streamState,\r\n                    userOnRoomState: state.userOnRoomState\r\n          };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n          return {\r\n                    setViewOneCamera: () => dispatch(setViewOneCamera())\r\n                    // setModal: (data) => dispatch(setModal(data)),\r\n                    // setpdfViewer: (data) => dispatch(setpdfViewer(data)),\r\n          };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FooterTool);\r\n","import { Button } from \"antd\";\r\nimport Avatar from \"antd/lib/avatar/avatar\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { userRoom } from \"../../global/UserRoom\";\r\nimport { setLargeVideo } from \"../../reducers/largeVideoReducer\";\r\nimport { setViewOneCamera } from \"../../reducers/uiReducer\";\r\nimport { store } from \"../../redux/store\";\r\nconst ColorList = [\r\n          \"#f56a00\",\r\n          \"#7265e6\",\r\n          \"#ffbf00\",\r\n          \"#00a2ae,#885569\",\r\n          \"#7265e6\",\r\n          \"#885569\",\r\n          \"#00a2ae,#885569\",\r\n          \"#885569\",\r\n];\r\n\r\nclass MediaElement extends Component {\r\n          constructor(props) {\r\n                    super(props);\r\n                    this.state = { mute: false, hasVideo: false };\r\n                    this.audioRef = null;\r\n                    this.videoRef = null;\r\n          }\r\n\r\n          componentDidMount = () => {\r\n                    const currentUser = this.props.streamRemoteState.get(this.props.item.id);\r\n                    this.audioRef.srcObject = currentUser?.audio?.stream;\r\n                    this.videoRef.srcObject = currentUser?.video?.stream;\r\n                    if (this.videoRef.srcObject) {\r\n                              this.setState({ hasVideo: true })\r\n                    } else {\r\n                              this.setState({ hasVideo: false })\r\n                    }\r\n          }\r\n\r\n          componentDidUpdate = (prevProp) => {\r\n                    if (this.props.streamRemoteState !== prevProp.streamRemoteState) {\r\n                              const currentUser = this.props.streamRemoteState.get(this.props.item.id);\r\n                              this.audioRef.srcObject = currentUser?.audio?.stream;\r\n                              this.videoRef.srcObject = currentUser?.video?.stream;\r\n                              if (this.videoRef.srcObject) {\r\n                                        this.setState({ hasVideo: true })\r\n                              } else {\r\n                                        this.setState({ hasVideo: false })\r\n                              }\r\n                    }\r\n          }\r\n\r\n          mute = (e) => {\r\n                    e.preventDefault();\r\n                    const mute = this.state.mute;\r\n                    if (!mute) {\r\n                              this.audioRef.muted = true;\r\n                    } else {\r\n                              this.audioRef.muted = false;\r\n                    }\r\n                    this.setState({ mute: !mute })\r\n          }\r\n\r\n          setLargeVideo = (e) => {\r\n                    this.props.onHandleSetLargeVideos();\r\n                    store.dispatch(setLargeVideo({ stream: this.videoRef.srcObject }))\r\n                    this.props.setViewOneCamera(true)\r\n\r\n          }\r\n\r\n\r\n          render() {\r\n                    const { elementWidth } = this.props;\r\n                    return (\r\n                              <div className=\"media-element\" style={{ width: `${elementWidth}%`, height: `${elementWidth * 16 / 9}%` }}>\r\n                                        <div className=\"media-element-container\">\r\n                                                  <div\r\n                                                            id={this.props.item.id}\r\n                                                            onClick={this.setLargeVideo}\r\n                                                            style={{\r\n                                                                      border: this.props.item.active ? \"2px solid red\" : \"none\",\r\n                                                                      position: \"relative\",\r\n                                                                      width: \"100%\",\r\n                                                                      height: \"100%\",\r\n                                                                      display: \"flex\",\r\n                                                                      justifyContent: \"center\",\r\n                                                                      alignItems: \"center\",\r\n                                                            }}\r\n                                                  >\r\n                                                            <span style={{ color: \"#ddd\", fontWeight: \"bold\", position: \"absolute\", maxWidth: \"80%\", bottom: 5 }}>\r\n                                                                      {this.props.item?.name}\r\n                                                            </span>\r\n                                                            {this.state.mute ? (\r\n                                                                      <Button\r\n                                                                                onClick={this.mute}\r\n                                                                                type=\"link\"\r\n                                                                                shape=\"circle\"\r\n                                                                                danger\r\n                                                                                style={{ position: \"absolute\", top: 5, left: 5, zIndex: 10 }}\r\n                                                                                icon={<i className=\"material-icons\">volume_off</i>}\r\n                                                                      ></Button>\r\n                                                            ) : (\r\n                                                                                <Button\r\n                                                                                          danger\r\n                                                                                          onClick={this.mute}\r\n                                                                                          type=\"link\"\r\n                                                                                          shape=\"circle\"\r\n                                                                                          style={{ position: \"absolute\", top: 5, left: 5, zIndex: 10 }}\r\n                                                                                          icon={<i className=\"material-icons\">volume_up</i>}\r\n                                                                                ></Button>\r\n                                                                      )}\r\n                                                            {!this.state.hasVideo ? <div\r\n                                                                      id=\"placeHodler\"\r\n                                                                      style={{\r\n                                                                                color: \"#ddd\",\r\n                                                                                display: \"flex\",\r\n                                                                                alignItems: \"center\",\r\n                                                                                justifyContent: \"center\",\r\n                                                                                position: \"absolute\",\r\n                                                                                borderRadius: \"50%\",\r\n                                                                                width: 200,\r\n                                                                                height: 200,\r\n                                                                      }}\r\n                                                            >\r\n                                                                      <Avatar\r\n                                                                                style={{ backgroundColor: `${ColorList[Math.floor(Math.random() * 10)]}`, verticalAlign: \"middle\", width: \"100%\", height: \"100%\" }}\r\n                                                                                size=\"large\"\r\n                                                                      >\r\n                                                                                {this.props.item?.name.match(/\\b([A-Z])/g)?.join(\"\")}\r\n                                                                      </Avatar>\r\n                                                            </div> : null}\r\n                                                            <video\r\n                                                                      ref={(ref) => {\r\n                                                                                this.videoRef = ref;\r\n                                                                      }}\r\n                                                                      id=\"video\"\r\n                                                                      autoPlay={true}\r\n                                                                      width={\"100%\"}\r\n                                                                      height={\"100%\"}\r\n                                                                      style={{ background: \"black\", border: \"2px solid #224567\" }}\r\n                                                            ></video>\r\n                                                            <audio\r\n                                                                      ref={(ref) => {\r\n                                                                                this.audioRef = ref;\r\n                                                                      }}\r\n                                                                      id=\"audio\"\r\n                                                                      autoPlay={true}\r\n                                                            ></audio>\r\n                                                  </div>\r\n                                        </div>\r\n                              </div>\r\n                    );\r\n          }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n          return {\r\n                    streamRemoteState: state.streamRemoteState,\r\n                    //         userOnRoomState: state.userOnRoomState\r\n          };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n          return {\r\n                    setViewOneCamera: (data) => dispatch(setViewOneCamera(data)),\r\n          };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MediaElement);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { userRoom } from \"../../global/UserRoom\";\r\nimport { setStream } from \"../../reducers/streamReducer\";\r\nimport { setViewOneCamera } from \"../../reducers/uiReducer\";\r\nimport { setUserOnRoom } from \"../../reducers/userOnRoomReducer\";\r\nimport MediaElement from \"./MediaElement\";\r\nimport \"./style.scss\";\r\nclass MultipleMediaContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      widthMediaElement: 0,\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    const { userOnRoomState } = this.props;\r\n    if (userOnRoomState.length < 5) {\r\n      this.setState({\r\n        widthMediaElement: 100 / userOnRoomState.length,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        widthMediaElement: 100 / 4,\r\n      });\r\n    }\r\n\r\n  };\r\n  componentDidUpdate = (prevProps) => {\r\n    const { userOnRoomState } = this.props;\r\n    if (prevProps.userOnRoomState !== userOnRoomState) {\r\n      if (userOnRoomState.length < 5) {\r\n        this.setState({\r\n          widthMediaElement: 100 / userOnRoomState.length,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          widthMediaElement: 100 / 4,\r\n        });\r\n      }\r\n      if (userOnRoomState.length < 2) {\r\n        this.props.setViewOneCamera(true)\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  onHandleSetLargeVideo = (item, index) => {\r\n    this.setActive(index)\r\n  }\r\n\r\n\r\n  setActive = (index) => {\r\n    const currentStream = { ...this.props.streamState };\r\n    const local = currentStream.local;\r\n    for (let j = 0; j < local.length; j++) {\r\n      const element = local[j];\r\n      element.active = false;\r\n    }\r\n    const clone=Array.from(this.props.userOnRoomState);\r\n    for (let i = 0; i <clone.length; i++) {\r\n      const element = clone[i];\r\n      if (i === index) {\r\n        element.active = true;\r\n      } else {\r\n        element.active = false;\r\n      }\r\n    }\r\n    this.props.setUserOnRoom(clone)\r\n    this.props.setStream({ ...currentStream })\r\n  }\r\n\r\n\r\n  render() {\r\n    const { userOnRoomState } = this.props;\r\n    const { widthMediaElement } = this.state;\r\n    return (\r\n      <div className=\"multipleMedia__container\">\r\n        {userOnRoomState.map((item, index) => {\r\n          return <MediaElement item={item} key={index} elementWidth={widthMediaElement} onHandleSetLargeVideos={this.onHandleSetLargeVideo} />;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    viewOneCamera: state.ui.viewOneCamera,\r\n    userOnRoomState: state.userOnRoomState,\r\n    streamState: state.streamState\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setViewOneCamera: (data) => dispatch(setViewOneCamera(data)),\r\n    setStream: (data) => dispatch(setStream(data)),\r\n    setUserOnRoom: (data) => dispatch(setUserOnRoom(data))\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MultipleMediaContainer);\r\n","import { Input, Modal, Row, Tag } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { TwitterOutlined, YoutubeOutlined, FacebookOutlined, LinkedinOutlined } from \"@ant-design/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { setModal } from \"../../reducers/modalReducer\";\r\n\r\nclass ModalComponent extends Component {\r\n  handleCancel = (e) => {\r\n    this.props.setModal({ visible: false, header: \"\", render: null });\r\n  };\r\n  onOk = () => {\r\n    window.roomClient.changePassword();\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.modalState);\r\n    return (\r\n      <Modal\r\n        title={this.props.modalState.header}\r\n        visible={this.props.modalState.visible}\r\n        onCancel={this.handleCancel}\r\n        onOk={this.onOk}\r\n        closable={false}\r\n      >\r\n        {this.props.modalState.render}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    modalState: state.modalState,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setModal: (data) => dispatch(setModal(data)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalComponent);\r\n","import { Button, Col, Input, Row, Form } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport Avatar from \"antd/lib/avatar/avatar\";\r\n\r\nconst { Footer, Content } = Layout;\r\nclass Chat extends Component {\r\n  sendMessage = (values) => {\r\n    window.roomClient.sendMessageChat(values.message);\r\n  };\r\n  render() {\r\n    return (\r\n      <Layout style={{ width: 350, height: \"100%\" }}>\r\n        <Content style={{ width: \"100%\" }}>\r\n          {this.props.messageState.map((item, index) => {\r\n            return (\r\n              <Row key={index}>\r\n                <Col span={3} style={{ alignItems: \"flex-end\", display: \"flex\", padding: 5 }}>\r\n                  {item.id === window.roomClient.socket.id ? null : <Avatar src=\"./icons/avatar.png\" />}\r\n                </Col>\r\n                <Col span={21}>\r\n                  {item.id === window.roomClient.socket.id ? null : (\r\n                    <Row style={{ width: \"100%\" }}>\r\n                      <div style={{ fontSize: 11, color: \"#90949c\" }}>{item.name}</div>\r\n                    </Row>\r\n                  )}\r\n\r\n                  <Row style={{ width: \"100%\" }}>\r\n                    <div\r\n                      style={\r\n                        item.id === window.roomClient.socket.id\r\n                          ? {\r\n                              marginTop: 2,\r\n                              marginBottom: 2,\r\n                              marginRight: 5,\r\n                              background: \"#42a5f5\",\r\n                              color: \"#fff\",\r\n                              borderRadius: \"20px 20px 3px 20px\",\r\n                              display: \"block\",\r\n                              maxWidth: \"75%\",\r\n                              padding: \"7px 13px 7px 13px\",\r\n                              marginLeft: \"auto\",\r\n                              fontSize: 13,\r\n                            }\r\n                          : {\r\n                              marginTop: 2,\r\n                              marginBottom: 2,\r\n                              background: \"#ddd\",\r\n                              borderRadius: \"20px 20px 20px 3px\",\r\n                              display: \"block\",\r\n                              maxWidth: \"75%\",\r\n                              padding: \"7px 13px 7px 13px\",\r\n                              float: \"left\",\r\n                              fontSize: 13,\r\n                              color: \"#444950\",\r\n                            }\r\n                      }\r\n                    >\r\n                      {item.message}\r\n                    </div>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })}\r\n        </Content>\r\n        <Footer style={{ padding: 0, margin: 10, display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n          <Form layout=\"inline\" name=\"horizontal_login\" onFinish={this.sendMessage}>\r\n            <Form.Item name=\"message\">\r\n              <Input placeholder=\"Nhập tin nhắn\" />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                style={{ justifyContent: \"center\", alignItems: \"center\", display: \"flex\" }}\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                icon={<i className=\"material-icons\">send</i>}\r\n              ></Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Footer>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    messageState: state.messageState,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Chat);\r\n","import React, { Component } from \"react\";\r\nimport RemoteVideo from \"../Components/RemoteVideo/RemoteVideo\";\r\nimport SliderRight from \"../Layouts/SliderRight\";\r\nimport LargeVideo from \"../Components/Video/LargeVideo\";\r\nimport CameraOption from \"../Components/Option/CameraOption\";\r\nimport SliderLeft from \"../Layouts/SliderLeft\";\r\nimport FooterTool from \"../Components/Footer/FooterTool\";\r\nimport { RoomClient } from \"../module/RoomClient\";\r\n\r\nimport { Button, Layout, message, Modal } from \"antd\";\r\nimport { store } from \"../redux/store\";\r\nimport { setRoomCreate } from \"../reducers/roomCreateReducer\";\r\nimport { Role } from \"../global/Role\";\r\nimport { connect } from \"react-redux\";\r\nimport MultipleMediaContainer from \"../Components/MutilpleMedia/MultipleMediaContainer\";\r\nimport Clock from \"../Components/Clock/Clock\";\r\nimport ModalComponent from \"../Components/Modal/ModalComponent\";\r\nimport { setModal } from \"../reducers/modalReducer\";\r\nimport { Input, Row, Tag } from \"antd\";\r\nimport { TwitterOutlined, CopyOutlined } from \"@ant-design/icons\";\r\nimport Chat from \"../Components/Chat/Chat\";\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\nconst mediaType = {\r\n  audio: \"audioType\",\r\n  video: \"videoType\",\r\n  screen: \"screenType\",\r\n};\r\n\r\nclass Container extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.linkInput = null;\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    if (Role.cameraEnable) {\r\n      this.onOpenCamera();\r\n    }\r\n    if (Role.micEnable) {\r\n      this.onOpenMic();\r\n    }\r\n\r\n    // window.roomClient.on(\"stopScreen\", async () => {\r\n    //   if (Role.cameraEnable) {\r\n    //     await window.roomClient?.closeProducer(RoomClient.mediaType.video);\r\n    //     window.roomClient?.produce(RoomClient.mediaType.video, true);\r\n    //   }\r\n    //   // if (Role.micEnable) {\r\n    //   //   window.roomClient?.closeProducer(RoomClient.mediaType.audio);\r\n    //   //   window.roomClient?.produce(RoomClient.mediaType.audio, true);\r\n    //   // }\r\n    // });\r\n  };\r\n\r\n  onOpenMic = () => {\r\n    Role.micEnable = true;\r\n    window.roomClient?.produce(mediaType.audio, null);\r\n  };\r\n\r\n  onStopMic = () => {\r\n    Role.micEnable = false;\r\n    window.roomClient?.closeProducer(mediaType.audio);\r\n  };\r\n\r\n  onOpenCamera = () => {\r\n    Role.cameraEnable = true;\r\n    window.roomClient?.produce(mediaType.video, true);\r\n  };\r\n\r\n  onStopCamera = () => {\r\n    Role.cameraEnable = false;\r\n    window.roomClient?.closeProducer(mediaType.video);\r\n  };\r\n\r\n  onStartScreenShare = () => {\r\n    window.roomClient?.produce(mediaType.screen);\r\n  };\r\n\r\n  onEndCall = () => {\r\n    window.roomClient?.exit(false);\r\n    store.dispatch(setRoomCreate(false));\r\n  };\r\n\r\n  onDisplayChat = () => {\r\n    const chatElement = document.getElementById(\"chatElement\");\r\n    const display = chatElement.style.display;\r\n    if (display === \"none\") {\r\n      chatElement.style.display = \"flex\";\r\n      window.roomClient.getMessageInRoom();\r\n    } else {\r\n      chatElement.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  onDisplayRemote = () => {\r\n    const chatElement = document.getElementById(\"remoteVideos\");\r\n    const display = chatElement.style.display;\r\n    if (display === \"none\") {\r\n      chatElement.style.display = \"flex\";\r\n    } else {\r\n      chatElement.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  onDisplayRoomInfo = async () => {\r\n    const roomInfo = await window.roomClient.roomInfo();\r\n    this.props.setModal({\r\n      visible: true,\r\n      header: \"Thông tin cuộc họp\",\r\n      render: (\r\n        <>\r\n          <Row style={{ margin: \"5px 0\" }}>\r\n            <Input\r\n              addonBefore={\r\n                <Tag icon={<TwitterOutlined />} color=\"#55acee\">\r\n                  Tên phòng:\r\n                </Tag>\r\n              }\r\n              placeholder=\"Nhập tên phòng\"\r\n              disabled\r\n              value={roomInfo.name}\r\n            />\r\n          </Row>\r\n          <Row style={{ margin: \"5px 0\" }}>\r\n            <Input.Password\r\n              onChange={(e) => {\r\n                Role.password = e.target.value;\r\n              }}\r\n              addonBefore={\r\n                <Tag icon={<TwitterOutlined />} color=\"#cd201f\">\r\n                  Mật khẩu:\r\n                </Tag>\r\n              }\r\n              placeholder=\"Nhập mật khẩu\"\r\n              value={roomInfo.password}\r\n            />\r\n          </Row>\r\n        </>\r\n      ),\r\n    });\r\n  };\r\n\r\n  onShareLink = () => {\r\n    Modal.info({\r\n      title: \"Liên kết chia sẻ\",\r\n      content: (\r\n        <div>\r\n          <Input.Search\r\n            id=\"copyLink\"\r\n            onSearch={(value) => {\r\n              document.getElementById(\"copyLink\").select();\r\n              document.execCommand(\"copy\");\r\n              message.info(value);\r\n            }}\r\n            allowClear\r\n            enterButton={<Button data-clipboard-target=\"#copyLink\" icon={<CopyOutlined />}></Button>}\r\n            value={window.location.href}\r\n          ></Input.Search>\r\n        </div>\r\n      ),\r\n      footer: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { viewOneCamera } = this.props;\r\n    return (\r\n      <Layout style={{ height: \"100%\" }}>\r\n        <ModalComponent />\r\n        <Sider style={{ display: \"none\" }} id=\"chatElement\" width={350} onClick={this.onCreateRoom}>\r\n          <Chat />\r\n        </Sider>\r\n        <Layout>\r\n          {viewOneCamera ? (\r\n            <Content id=\"localMedia\">\r\n              <Layout style={{ height: \"100%\" }}>\r\n                <Sider width={150} id=\"localVideos\" style={{ position: \"absolute\", zIndex: 2 }}>\r\n                  <SliderLeft />\r\n                </Sider>\r\n                <Content style={{ overflow: \"hidden\" }} id=\"localMedia\">\r\n                  <LargeVideo />\r\n                </Content>\r\n              </Layout>\r\n            </Content>\r\n          ) : (\r\n            <Content id=\"multipleMedia\">\r\n              <Layout style={{ height: \"100%\" }}>\r\n                <MultipleMediaContainer />\r\n              </Layout>\r\n            </Content>\r\n          )}\r\n\r\n          <Footer>\r\n            <FooterTool\r\n              onStopMic={this.onStopMic}\r\n              onOpenMic={this.onOpenMic}\r\n              onDisplayChat={this.onDisplayChat}\r\n              onStartScreenShare={this.onStartScreenShare}\r\n              onEndCall={this.onEndCall}\r\n              onStopCamera={this.onStopCamera}\r\n              onOpenCamera={this.onOpenCamera}\r\n              onDisplayRemote={this.onDisplayRemote}\r\n              onDisplayRoomInfo={this.onDisplayRoomInfo}\r\n              onShareLink={this.onShareLink}\r\n            />\r\n          </Footer>\r\n        </Layout>\r\n        {viewOneCamera ? (\r\n          <Sider\r\n            style={{\r\n              background: \"#f0f2f5\",\r\n              width: \"100%\",\r\n              display: this.props.remoteElementState.length > 0 ? \"block\" : \"none\",\r\n            }}\r\n            width={150}\r\n            id=\"remoteVideos\"\r\n          >\r\n            <SliderRight />\r\n          </Sider>\r\n        ) : null}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    viewOneCamera: state.ui.viewOneCamera,\r\n    remoteElementState: state.remoteElementState,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setModal: (data) => dispatch(setModal(data)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Start extends Component {\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n","import { EVENTS, RTC_EVENTS } from \"../events/EVENTS\";\r\nimport { Role } from \"../global/Role\";\r\nimport { setLargeVideo } from \"../reducers/largeVideoReducer\";\r\nimport { setLocalElementReducer } from \"../reducers/localElementReducer\";\r\nimport { setMessage } from \"../reducers/messageReducer\";\r\nimport { setRemoteElement } from \"../reducers/remoteElementReducer\";\r\nimport { store } from \"../redux/store\";\r\nimport { Notification } from \"./Notification\";\r\nimport { SocketClone } from \"./Socket\";\r\n\r\nconst mediaType = {\r\n    audio: \"audioType\",\r\n    video: \"videoType\",\r\n    screen: \"screenType\",\r\n};\r\n\r\nclass RoomClientClone {\r\n    constructor(roomname, username, password, callback) {\r\n        this.roomname = roomname;\r\n        this.username = username;\r\n        this.password = password;\r\n        this.producerTransport = null;\r\n        this.consumeTransport = null;\r\n        this.device = null;\r\n        this.listProduce = { videos: [], audio: [], screenCast: [] };\r\n        this.initRoomClient();\r\n        this.callback = callback;\r\n    }\r\n\r\n    initRoomClient = async () => {\r\n        const create = await this.createRoom()\r\n        console.log(create)\r\n        if (create.roomname) {\r\n            await this.initSocket()\r\n            await this.joinRoom(this.username, this.roomname, this.password)\r\n            //test\r\n            await this.produce(mediaType.video, null)\r\n            // await this.produce(mediaType.audio, null)\r\n            // await this.produce(mediaType.screen,null);\r\n            this.callback(this)\r\n        }\r\n    }\r\n\r\n    initRTC = async () => {\r\n        const routerCapabilities = await this.getRouterCapabilities()\r\n        this.device = await this.loadDevice(routerCapabilities);\r\n        this.producerTransport = await this.initProducerTransport(this.device);\r\n        this.consumeTransport = await this.initConsumeTransport(this.device);\r\n    }\r\n\r\n    initSocket = () => {\r\n\r\n        this.socket.on(EVENTS.INCOMMING_MESSAGE, (data) => {\r\n            console.log(data)\r\n            store.dispatch(setMessage(data));\r\n        })\r\n\r\n        this.socket.on(EVENTS.SOCKET_USER_JOIN_ROOM, async ({ name, id }) => {\r\n            await this.getProducerOfRoom();\r\n            Notification(\"info\", name + \" đã tham gia vào cuộc họp\")\r\n        });\r\n\r\n        this.socket.on(EVENTS.SOCKET_USER_LEFT_ROOM, async ({ name, id }) => {\r\n            await this.getProducerOfRoom();\r\n            Notification(\"warning\", name + \" đã rời khỏi cuộc họp\")\r\n        });\r\n\r\n        this.socket.on(EVENTS.SOCKET_DISCONNECT, () => {\r\n            this.exit(false);\r\n        });\r\n\r\n        this.socket.on(RTC_EVENTS.CLOSE_CONSUME, ({ consumerId, peerId, peerName }) => {\r\n            console.log(\"closing consumer:\", consumerId, peerId, peerName);\r\n            this.closeConsumer(consumerId, peerId, peerName);\r\n        });\r\n\r\n        this.socket.on(RTC_EVENTS.NEW_PRODUCER, async (data) => {\r\n            const remoteElement = [...store.getState().remoteElementState];\r\n            for (let index = 0; index < data.length; index++) {\r\n                const { producer_id, peerName, peerId } = data[index];\r\n                if (peerId !== this.socket.id) {\r\n                    const consume = await this.consume(producer_id, peerName, peerId);\r\n                    const rl = remoteElement.findIndex((item) => item.peerId == peerId);\r\n                    if (rl === -1) {\r\n                        const remoteElementClone = {\r\n                            video: [],\r\n                            audio: null,\r\n                            peerId, peerName\r\n                        };\r\n                        if (consume.kind === \"video\") {\r\n                            remoteElementClone.video.push(consume)\r\n                        }\r\n                        if (consume.kind === \"audio\") {\r\n                            remoteElementClone.audio = consume\r\n                        }\r\n                        remoteElement.push(remoteElementClone)\r\n                    } else {\r\n                        const remoteElementClone = remoteElement[rl];\r\n                        if (consume.kind === \"video\") {\r\n                            remoteElementClone.video.push(consume);\r\n                        }\r\n                        if (consume.kind === \"audio\") {\r\n                            remoteElementClone.audio = consume\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n            store.dispatch(setRemoteElement(remoteElement));\r\n        });\r\n    }\r\n\r\n    createRoom = async () => {\r\n        const cs = new SocketClone(\"https://\" + window.serverIp + \":\" + window.port);\r\n        this.socket = cs.socket;\r\n        this.socket.request = cs.request;\r\n        const createRoom = await this.socket.request(EVENTS.CHECK_ROOM_ALREADY, { roomname: this.roomname, password: this.password });\r\n        if (createRoom) {\r\n            return { roomname: this.roomname, password: this.password }\r\n        } else {\r\n            return await this.socket.request(EVENTS.SOCKET_CREATE_ROOM, { roomname: this.roomname, password: this.password });\r\n        }\r\n    };\r\n\r\n    getProducerOfRoom = async () => {\r\n        const listProducer = await this.socket.request(RTC_EVENTS.GET_PRODUCER);\r\n        const remoteElement = [];\r\n        for (let index = 0; index < listProducer.length; index++) {\r\n            const { producer_id, peerName, peerId } = listProducer[index];\r\n            if (peerId !== this.socket.id) {\r\n                const consume = await this.consume(producer_id, peerName, peerId);\r\n                const rl = remoteElement.findIndex((item) => item.peerId == peerId)\r\n                if (rl === -1) {\r\n                    const remoteElementClone = {\r\n                        video: [],\r\n                        audio: null,\r\n                        peerId, peerName\r\n                    };\r\n                    if (consume.kind === \"video\") {\r\n                        remoteElementClone.video = [consume]\r\n                    }\r\n                    if (consume.kind === \"audio\") {\r\n                        remoteElementClone.audio = consume\r\n                    }\r\n                    remoteElement.push(remoteElementClone)\r\n                } else {\r\n                    const remoteElementClone = remoteElement[rl];\r\n                    if (consume.kind === \"video\") {\r\n                        remoteElementClone.video.push(consume);\r\n                    }\r\n                    if (consume.kind === \"audio\") {\r\n                        remoteElementClone.audio = consume\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        store.dispatch(setRemoteElement(remoteElement));\r\n    }\r\n\r\n    joinRoom = async (username, roomname, password) => {\r\n        await this.socket.request(EVENTS.SOCKET_USER_JOIN_ROOM, { username, roomname, password: password });\r\n        await this.initRTC()\r\n        await this.getProducerOfRoom();\r\n    };\r\n\r\n    getRouterCapabilities = async () => {\r\n        const routerCapabilities = await this.socket.request(RTC_EVENTS.GET_ROUTER_CAPABILITIES);\r\n        return routerCapabilities;\r\n    }\r\n\r\n    loadDevice = async (routerRtpCapabilities) => {\r\n        let device;\r\n        try {\r\n            device = new window.mediasoupClient.Device();\r\n        } catch (error) {\r\n            if (error.name === \"UnsupportedError\") {\r\n                console.error(\"browser not supported\");\r\n            }\r\n            console.error(error);\r\n        }\r\n        await device.load({\r\n            routerRtpCapabilities,\r\n        });\r\n        return device;\r\n    }\r\n\r\n    initProducerTransport = async (device) => {\r\n        const transport = await this.socket.request(RTC_EVENTS.CREATE_TRANSPORT, {\r\n            forceTcp: false,\r\n            rtpCapabilities: device.rtpCapabilities,\r\n        });\r\n\r\n        const producerTransport = device.createSendTransport(transport);\r\n\r\n        producerTransport.on(\"connect\", async ({ dtlsParameters }, callback, errback) => {\r\n            try {\r\n                await this.socket.request(RTC_EVENTS.CONNECT_TRANSPORT, { dtlsParameters, transport_id: transport.id });\r\n                callback();\r\n            } catch (error) {\r\n                errback(error);\r\n            }\r\n        });\r\n\r\n        producerTransport.on(\"produce\", async ({ kind, rtpParameters }, callback, errback) => {\r\n            try {\r\n                const producerTransportId = producerTransport.id\r\n                const { producerId, socketId } = await this.socket.request(RTC_EVENTS.CREATE_PRODUCE, {\r\n                    producerTransportId,\r\n                    kind,\r\n                    rtpParameters,\r\n                });\r\n                callback({ id: producerId, socketId });\r\n            } catch (err) {\r\n                errback(err);\r\n            }\r\n        });\r\n\r\n        producerTransport.on(\"connectionstatechange\", (state) => {\r\n            switch (state) {\r\n                case \"connecting\":\r\n                    break;\r\n                case \"connected\":\r\n                    break;\r\n                case \"failed\":\r\n                    producerTransport.close();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return producerTransport\r\n    }\r\n\r\n    initConsumeTransport = async (device) => {\r\n        const transport = await this.socket.request(RTC_EVENTS.CREATE_TRANSPORT, { forceTcp: false });\r\n\r\n        const consumerTransport = device.createRecvTransport(transport);\r\n\r\n        consumerTransport.on(\"connect\", async ({ dtlsParameters }, callback, errback) => {\r\n            try {\r\n                await this.socket.request(RTC_EVENTS.CONNECT_TRANSPORT, { transport_id: consumerTransport.id, dtlsParameters });\r\n                callback();\r\n            } catch (error) {\r\n                errback(errback);\r\n            }\r\n        });\r\n\r\n        consumerTransport.on(\"connectionstatechange\", async (state) => {\r\n            switch (state) {\r\n                case \"connecting\":\r\n                    break;\r\n\r\n                case \"connected\":\r\n                    break;\r\n\r\n                case \"failed\":\r\n                    consumerTransport.close();\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return consumerTransport\r\n    }\r\n\r\n    produce = async (type, deviceId = null) => {\r\n        let mediaConstraints = {};\r\n        let audio = false;\r\n        let screen = false;\r\n        switch (type) {\r\n            case mediaType.audio:\r\n                mediaConstraints = {\r\n                    audio: {\r\n                        deviceId: deviceId,\r\n                    },\r\n                    video: false,\r\n                };\r\n                audio = true;\r\n                break;\r\n            case mediaType.video:\r\n                mediaConstraints = {\r\n                    audio: false,\r\n                    video: {\r\n                        width: {\r\n                            min: 640,\r\n                            ideal: 1920,\r\n                        },\r\n                        height: {\r\n                            min: 400,\r\n                            ideal: 1080,\r\n                        },\r\n                        deviceId: deviceId,\r\n                    },\r\n                };\r\n                break;\r\n            case mediaType.screen:\r\n                mediaConstraints = false;\r\n                screen = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (!this.device.canProduce(\"video\") && !audio) {\r\n            console.error(\"cannot produce video\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const stream = screen ? await navigator.mediaDevices.getDisplayMedia() : await navigator.mediaDevices.getUserMedia(mediaConstraints);\r\n            const track = audio ? stream.getAudioTracks()[0] : stream.getVideoTracks()[0];\r\n            const params = {\r\n                track,\r\n            };\r\n            if (type === mediaType.video  ) {\r\n                // params.encodings = [\r\n                //     {\r\n                //         rid: \"r0\",\r\n                //         maxBitrate: 100000,\r\n                //         // scaleResolutionDownBy: 1.0,\r\n                //         scalabilityMode: \"S1T3\",\r\n                //     },\r\n                //     {\r\n                //         rid: \"r1\",\r\n                //         maxBitrate: 300000,\r\n                //         scalabilityMode: \"S1T3\",\r\n                //     },\r\n                //     {\r\n                //         rid: \"r2\",\r\n                //         maxBitrate: 900000,\r\n                //         scalabilityMode: \"S1T3\",\r\n                //     },\r\n                // ];\r\n                // params.codecOptions = {\r\n                //     videoGoogleStartBitrate: 1000,\r\n                // };\r\n                store.dispatch(setLargeVideo({ stream }));\r\n\r\n            }\r\n            const producer = await this.producerTransport.produce(params);\r\n            producer.on(\"trackended\", () => {\r\n                console.log(\"producer trackend\")\r\n                this.closeProducer(type);\r\n            });\r\n\r\n            producer.on(\"transportclose\", () => {\r\n                console.log(\"producer transport close\");\r\n                // producers.delete(this.producer.id);\r\n            });\r\n\r\n            producer.on(\"close\", () => {\r\n                console.log(\"closing producer\");\r\n                // producers.delete(this.producer.id);\r\n            });\r\n            const localElementState = { ...store.getState().localElementState }\r\n            switch (type) {\r\n                case mediaType.video:\r\n                    this.listProduce.videos.push(producer)\r\n                    localElementState.videos.push({ stream, producerId: producer.id })\r\n                    console.log(producer.track)\r\n                    break;\r\n                case mediaType.audio:\r\n                    this.listProduce.audio.push(producer)\r\n                    localElementState.audio.push({ stream, producerId: producer.id })\r\n                    break;\r\n                case mediaType.screen:\r\n                    this.listProduce.screenCast.push(producer)\r\n                    localElementState.screenCast.push({ stream, producerId: producer.id })\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n            store.dispatch(setLocalElementReducer(localElementState))\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n\r\n    consume = async (producerId, peerName, peerId) => {\r\n        const consume = await this.getConsumeStream(producerId);\r\n        return consume;\r\n    };\r\n\r\n    getConsumeStream = async (producerId) => {\r\n\r\n        const { rtpCapabilities } = this.device;\r\n        const data = await this.socket.request(RTC_EVENTS.CREATE_CONSUME, {\r\n            rtpCapabilities,\r\n            consumerTransportId: this.consumeTransport.id, // might be\r\n            producerId,\r\n        });\r\n        const { id, kind, rtpParameters } = data?.params;\r\n\r\n        const codecOptions = {};\r\n        const consumer = await this.consumeTransport.consume({\r\n            id,\r\n            producerId,\r\n            kind,\r\n            rtpParameters,\r\n            codecOptions,\r\n        });\r\n\r\n        consumer.on(\"trackended\", () => {\r\n            console.log(\"consumer trackend\")\r\n            // this.removeConsumer(consumer.id);\r\n        });\r\n        consumer.on(\"transportclose\", () => {\r\n            console.log(\"consumer transportclose\")\r\n            // this.removeConsumer(consumer.id);\r\n        });\r\n\r\n        const stream = new MediaStream();\r\n        stream.addTrack(consumer.track);\r\n        return { consumer, stream, kind, };\r\n    };\r\n\r\n    closeProducer = (type) => {\r\n        const localElementState = { ...store.getState().localElementState }\r\n        switch (type) {\r\n            case mediaType.video:\r\n                const videos = this.listProduce.videos\r\n                for (let index = 0; index < videos.length; index++) {\r\n                    const videoProduce = videos[index];\r\n                    const producer_id = videoProduce.id\r\n                    this.socket.request(RTC_EVENTS.CLOSE_PRODUCER, { producer_id, });\r\n                    videoProduce.close();\r\n                }\r\n                this.listProduce.videos = []\r\n                localElementState.videos=[]\r\n                break;\r\n            case mediaType.audio:\r\n                const audios = this.listProduce.audio\r\n                for (let index = 0; index < audios.length; index++) {\r\n                    const audioProduce = audios[index];\r\n                    const producer_id = audioProduce.id\r\n                    this.socket.request(RTC_EVENTS.CLOSE_PRODUCER, { producer_id, });\r\n                    audioProduce.close();\r\n                }\r\n                this.listProduce.audio = []\r\n                localElementState.audio=[]\r\n                break;\r\n            case mediaType.screen:\r\n                const screenCast = this.listProduce.screenCast\r\n                for (let index = 0; index < screenCast.length; index++) {\r\n                    const screenProduce = screenCast[index];\r\n                    const producer_id = screenProduce.id\r\n                    this.socket.request(RTC_EVENTS.CLOSE_PRODUCER, { producer_id, });\r\n                    screenProduce.close();\r\n                }\r\n                this.listProduce.screenCast = []\r\n                localElementState.screenCast=[]\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        store.dispatch(setLocalElementReducer(localElementState))\r\n\r\n    };\r\n\r\n    closeConsumer = (consumerId, peerId, peerName) => {\r\n        const remoteElement = [...store.getState().remoteElementState];\r\n        for (let index = 0; index < remoteElement.length; index++) {\r\n            const element = remoteElement[index];\r\n            if (element.audio?.consumer.id === consumerId) {\r\n                element.audio = null;\r\n            } else {\r\n                for (let j = 0; j < element.video.length; j++) {\r\n                    const video = element.video[j];\r\n                    if (video.consumer.id === consumerId) {\r\n                        element.video.splice(j, 1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        store.dispatch(setRemoteElement(remoteElement))\r\n    };\r\n\r\n    exit = async (offline = false) => {\r\n\r\n        if (!offline) {\r\n            await this.socket.request(EVENTS.SOCKET_EXIT_ROOM);\r\n        }\r\n        this.consumerTransport.close();\r\n        this.producerTransport.close();\r\n        this.socket.off(EVENTS.SOCKET_USER_JOIN_ROOM);\r\n        this.socket.off(EVENTS.SOCKET_USER_LEFT_ROOM);\r\n        this.socket.off(EVENTS.SOCKET_DISCONNECT);\r\n        this.socket.off(RTC_EVENTS.CLOSE_CONSUME);\r\n        this.socket.off(RTC_EVENTS.NEW_PRODUCER);\r\n        window.close();\r\n\r\n    }\r\n\r\n    getMessageInRoom = async () => {\r\n        const messages = await this.socket.request(EVENTS.SOCKET_GET_MESSAGE_IN_ROOM);\r\n        console.log(messages)\r\n        store.dispatch(setMessage(messages))\r\n    }\r\n\r\n    sendMessageChat = async (message) => {\r\n        const messages = await this.socket.request(EVENTS.SOCKET_SEND_MESSAGE, message);\r\n    }\r\n\r\n    roomInfo = async () => {\r\n        const info = await this.socket.request(EVENTS.SOCKET_GET_ROOM_INFO);\r\n        return info;\r\n    };\r\n\r\n    changePassword = async () => {\r\n        const res = await this.socket.request(EVENTS.SOCKET_CHANGE_ROOM_PASSWORD, Role.password);\r\n        Notification(\"info\", res)\r\n\r\n    }\r\n}\r\n\r\nexport { RoomClientClone }","import { Button, Input, Form } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Role } from \"../global/Role\";\r\nimport Container from \"../Layouts/Container\";\r\nimport { RoomClient } from \"../module/RoomClient\";\r\nimport { RoomClientClone } from \"../module/RoomClientClone\";\r\nimport { setRoomCreate } from \"../reducers/roomCreateReducer\";\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { micEnable: false, cameraEnable: true };\r\n  }\r\n\r\n  onFinish = (form) => {\r\n    Role.micEnable = this.state.micEnable;\r\n    Role.cameraEnable = this.state.cameraEnable;\r\n    const { roomName, displayName, password } = form;\r\n    this.onCreateRoom(roomName, displayName, password);\r\n  };\r\n\r\n  onCreateRoom = (roomName, displayName, password) => {\r\n    const roomClient = new RoomClientClone(roomName, displayName, password, (roomClient) => {\r\n      this.props.setRoomCreate(true);\r\n      window.roomClient = roomClient;\r\n    });\r\n    // const roomClient = new RoomClient(\r\n    //   window.mediasoupClient,\r\n    //   window.socket,\r\n    //   roomName,\r\n    //   displayName,\r\n    //   password,\r\n    //   () => {\r\n    //     if (roomClient._isOpen) {\r\n    //       console.log(\"dâdasdadasdasdasd\")\r\n    //       window.roomClient = roomClient;\r\n    //       this.props.setRoomCreate(true);\r\n    //     }\r\n    //   }\r\n    // );\r\n  };\r\n  render() {\r\n    return (\r\n      <div style={{ display: \"flex\", width: \"100%\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n        {this.props.roomCreateState ? (\r\n          <Container />\r\n        ) : (\r\n          <div>\r\n            <Form ref={(ref) => (this.formRef = ref)} name=\"control-ref\" onFinish={this.onFinish}>\r\n              <Form.Item name=\"roomName\" label=\"Tên cuộc họp\" rules={[{ required: true }]}>\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item name=\"displayName\" label=\"Tên hiển thị\" rules={[{ required: true }]}>\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item name=\"password\" label=\"Mật khẩu cuộc họp\">\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button\r\n                  onClick={() => {\r\n                    this.setState({ micEnable: !this.state.micEnable });\r\n                  }}\r\n                  icon={\r\n                    !this.state.micEnable ? (\r\n                      <i className=\"material-icons\">mic_off</i>\r\n                    ) : (\r\n                      <i className=\"material-icons\">mic</i>\r\n                    )\r\n                  }\r\n                ></Button>\r\n                <Button\r\n                  onClick={() => {\r\n                    this.setState({ cameraEnable: !this.state.cameraEnable });\r\n                  }}\r\n                  icon={\r\n                    !this.state.cameraEnable ? (\r\n                      <i className=\"material-icons\">videocam_off</i>\r\n                    ) : (\r\n                      <i className=\"material-icons\">videocam</i>\r\n                    )\r\n                  }\r\n                ></Button>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Tạo cuộc họp/Tham gia vào cuộc họp\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    roomCreateState: state.roomCreateState,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    setRoomCreate: (data) => dispatch(setRoomCreate(data)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { Component } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport { SocketClone } from \"./module/Socket\";\r\nimport \"antd/dist/antd.css\";\r\nimport { store } from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport Container from \"./Layouts/Container\";\r\nimport Start from \"./Layouts/Start\";\r\nimport HomePage from \"./Pages/HomePage\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const socket = new SocketClone(\"https://\" + window.serverIp + \":\" + window.port);\r\n    this.socket = socket.socket;\r\n    this.socket.request = socket.request;\r\n    this.name = \"Dr.admin\";\r\n    window.name = this.name;\r\n    window.socket = this.socket;\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    // this.onCreateRoom()\r\n  };\r\n\r\n  render() {\r\n    console.log(store.getState());\r\n    return (\r\n      <Provider store={store}>\r\n        <div style={{ width: \"100%\", height: \"100vh\" }}>\r\n          {/* <Container /> */}\r\n          {/* <Start /> */}\r\n          <HomePage />\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}