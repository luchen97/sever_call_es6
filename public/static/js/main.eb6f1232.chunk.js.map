{"version":3,"sources":["reducers/errorBoudryReducer.ts","models/reducers/error.model.ts","components/ErrorBoundry/ErrorBoundry.tsx","utils/setupAxiosInterceptors.ts","module/RoomClientNew.ts","models/variables/serverConfig.ts","reducers/authenticateReducer.ts","reducers/listSrcVideo.ts","reducers/localAudioInput.ts","reducers/localStreams.ts","models/reducers/localStreams.ts","reducers/localVideoInput.ts","reducers/messageReducer.ts","models/reducers/message.ts","reducers/ui/micOpenReducer.ts","reducers/ui/modalSettingVisibleReducer.ts","reducers/ui/siderActive.ts","reducers/ui/videoOpenReducer.ts","reducers/consumersReducer.ts","reducers/usersReducer.ts","models/reducers/comsumers.ts","reducers/localProducerReducer.ts","models/reducers/localProducer.ts","reducers/pageReducer.ts","redux/rootReducer.ts","redux/store.ts","utils/getDecices.ts","reducers/consumer.ts","utils/cameraControl.ts","models/variables/roomData.ts","utils/recorderVideo.ts","components/IconFAPro/IconFAPro.tsx","layouts/HomePage/HomeFooter.tsx","module/events/EVENTS.js","module/Notification.js","module/UserClient.ts","components/Modal/ModalSetting.tsx","layouts/HomePage/HomeMain.tsx","components/ProducerToConsumer/ProducerToConsumer.tsx","components/ProducerToConsumer/ProducerToConsumerAudio.tsx","components/User/UserComponent.tsx","components/ListUser/ListUserCamera.tsx","components/ListUser/ListUser.tsx","layouts/HomePage/HomeSiderChat.tsx","pages/HomePage.tsx","pages/LoginPage.tsx","pages/RedirectPage.tsx","App.tsx","index.tsx"],"names":["ACTION_TYPES","initialstate","show","error","setErrorBoundry","type","payload","ErrorBoundry","state","errorBoundryState","this","props","Component","connect","StreamAxiosInstance","SCUAxiosInstance","ETransportType","dispatch","serverConfig","risServerUrl","socketServerUrl","scuServerUrl","hospitalLogo","hospitalName","hospitalAddress","setListSrcVideo","value","initializeMessage","setMessage","stream","getMessage","a","post","roomname","window","roomClient","messages","data","setMicOpen","setModalSettingVisible","initialize","setSiderActive","setVideoOpen","comsumersToMediaStreams","comsumers","listSrcVideo","i","length","comsumer","j","listProducer","producer","getConsumerFromProducerId","producerId","consumer","MediaStream","addTrack","track","producerType","userId","localUser","id","active","activeMain","consumerId","username","push","getUserInRoom","userInRoom","setLocalProducer","setPage","rootReducer","combineReducers","action","isAuthenticate","messageState","localStreams","modalSettingVisible","localAudioInput","localVideoInput","videoOpen","micOpen","siderActive","consumers","listUser","localProducer","pageReducer","middleWare","thunk","store","createStore","applyMiddleware","TIMEOUT","getDevices","constraints","audio","video","navigator","mediaDevices","getUserMedia","enumerateDevices","devices","deviceList","index","deviceInfo","deviceKind","kind","deviceName","label","deviceId","localDevice","name","getConsumersFromServer","response","activeVideoProducer","activeMicProducer","openLocalCamera","ILocalProducer","producerVideo","filter","producerActive","find","closeProducer","roomclient","mediaConstraints","exact","undefined","getVideoTracks","produce","routerCapabilities","producerTransport","openMic","console","log","getAudioTracks","openShareScreen","getDisplayMedia","roomData","roomName","roomKey","sid","currentRecorder","chunks","recorderVideo","mime","MediaRecorder","isTypeSupported","mediaRecorder","mimeType","ondataavailable","e","size","onstop","blob","Blob","file","File","moment","format","formData","FormData","append","status","message","success","start","stopRecording","stop","getTracks","forEach","IconFAPro","componentDidMount","componentDidUpdate","prevProps","style","className","menu","Item","onClick","document","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","HomeFooter","showButtonDropdown","recordStart","timer","onOpenSharescreen","onOpenCamera","resume","pause","onOpenMic","onRecord","setTime","pad","val","valString","totalSeconds","secondsLabel","minutesLabel","Math","floor","innerHTML","getElementById","audiodeviceId","item","audioStream","screenStream","setInterval","clearInterval","setState","onResize","rect","width","title","height","background","margin","flex","justifyContent","fontSize","overlay","trigger","placement","count","overflowCount","backgroundColor","color","EVENTS","RTC_EVENTS","Notification","notification","description","ETrackKind","UserClient","socket","iskey","rtpCapabilities","params","getTrackParamsCodec","on","producerInstance","consumerTransport","consumerParams","consumerTransportId","consumerData","rtpParameters","codecOptions","consume","codec","codecs","toLowerCase","encodings","scaleResolutionDownBy","maxBitrate","videoGoogleStartBitrate","producerParams","closeProducerWithType","closeConsumer","closeAddConsumerOfUser","RoomClient","password","callback","device","initSocketEvent","peerId","peerName","isKey","exit","close","off","init","user","joinRoom","roomState","createRoom","routerCapabilitiesData","loadDevice","initTransports","dtlsData","errback","connectTransport","dtlsParameters","transportId","producerParameters","producerTransportId","producerData","getProducerInRoom","routerRtpCapabilities","mediasoupClient","load","createSendTransport","createRecvTransport","io","Option","Select","ModalSetting","handleOk","handleCancel","onChangeVideoDevice","map","onChangeAudioDevice","videosInput","audiosInput","closable","visible","footer","danger","span","defaultValue","onChange","marginTop","setLocalAudioInput","setLocalVideoInput","HomeMain","border","padding","display","alignItems","position","poster","objectFit","autoPlay","muted","lineHeight","bottom","left","ProducerToConsumer","videoRef","producerToConsumer","stopStream","srcObject","shouldComponentUpdate","nextProps","componentWillUnmount","setMainVideoSrc","mainVideoElement","p2mVideoElement","querySelectorAll","classList","remove","add","float","ref","ProducerToConsumerAudio","audioRef","nextState","onMute","btnOnMic","btnOffMic","indexOf","mute","UserComponent","userData","PureComponent","ListUserCamera","sort","b","ListUser","onSwitchMode","Footer","Layout","Content","Header","Search","Input","HomeSiderChat","messagebox","nextProp","sendMessage","convertMessage","mess","Message","senderName","borderRadius","marginLeft","hasInputField","showSenderName","bubblesCentered","bubbleStyles","text","chatbubble","marginRight","maxWidth","borderBottomRightRadius","borderBottomLeftRadius","placeholder","enterButton","SendOutlined","onSearch","Sider","HomePage","loading","siderFull","err","tip","LoginPage","URL","location","href","searchParams","get","decodeParams","decodeURIComponent","atob","toJson","JSON","parse","onSubmit","trim","info","textAlign","fontWeight","target","Password","iconRender","EyeTwoTone","EyeInvisibleOutlined","block","marginBottom","RedirectPage","App","setGlobalWindowVariable","React","ReactDOM","RecordRTC","config","getConfig","serverCfg","localStorageServerConfig","localStorage","getItem","protocol","HTTP_SCU_SERVER","HTTP_RIS_SERVER","HTTP_SOCKET_SERVER","HTTPS_SCU_SERVER","HTTPS_RIS_SERVER","HTTPS_SOCKET_SERVER","setupDevicesDefault","loadDevices","onUnauthenticated","AxiosInstanceTemp","Axios","create","timeout","baseURL","StreamAxiosInstanceTemp","SCUAxiosInstanceTemp","onRequestSuccess","token","headers","Authorization","onResponseSuccess","onResponseError","url","Promise","reject","interceptors","request","use","setupAxiosInterceptors","page","render"],"mappings":"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","file":"static/js/main.eb6f1232.chunk.js","sourcesContent":["import { defaultError, IError } from \"../models/reducers/error.model\";\r\n\r\nconst ACTION_TYPES = {\r\n  ERROR_BOUDRY: \"ERROR_BOUDRY\",\r\n};\r\n\r\ninterface IAction {\r\n  type: string;\r\n  payload: any;\r\n}\r\n\r\nconst initialstate: IError = defaultError;\r\n\r\nconst errorBoundryReducer = (state = initialstate, action: IAction) => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.ERROR_BOUDRY:\r\n      state = action.payload;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst setErrorBoundry = (error: IError) => {\r\n  return {\r\n    type: ACTION_TYPES.ERROR_BOUDRY,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport { errorBoundryReducer, setErrorBoundry };\r\n","export interface IError {\r\n  show: boolean;\r\n  error: string;\r\n}\r\n\r\nexport const defaultError = {\r\n  show: false,\r\n  error: \"\",\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { IError } from \"../../models/reducers/error.model\";\r\nimport { setErrorBoundry } from \"../../reducers/errorBoudryReducer\";\r\n\r\ninterface Props {\r\n    errorBoundryState: IError;\r\n    setErrorBoundry: Function;\r\n}\r\ninterface State {}\r\n\r\nclass ErrorBoundry extends Component<Props, State> {\r\n    state = {};\r\n\r\n    render() {\r\n        const { errorBoundryState } = this.props;\r\n        if (errorBoundryState.show && errorBoundryState.error) {\r\n            return <div></div>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state: any) {\r\n    return {\r\n        errorBoundryState: state.errorBoundryState,\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any) {\r\n    return {\r\n        setErrorBoundry: (error: IError) => dispatch(setErrorBoundry(error)),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorBoundry);\r\n","import axios from \"axios\";\r\nimport Axios from \"axios\";\r\nimport { serverConfig } from \"../models/variables/serverConfig\";\r\nimport { setAuth } from \"../reducers/authenticateReducer\";\r\nimport { setErrorBoundry } from \"../reducers/errorBoudryReducer\";\r\nimport { store } from \"../redux/store\";\r\nimport { clearAll, getToken } from \"./storeManager\";\r\n\r\nconst TIMEOUT = 1 * 60 * 100000;\r\n\r\nlet AxiosInstance: any;\r\nlet StreamAxiosInstance: any;\r\nlet SCUAxiosInstance: any;\r\nconst setupAxiosInterceptors = (onUnauthenticated: Function) => {\r\n    const AxiosInstanceTemp = Axios.create({\r\n        timeout: TIMEOUT,\r\n        baseURL: serverConfig.risServerUrl\r\n    });\r\n    const StreamAxiosInstanceTemp = Axios.create({\r\n        timeout: TIMEOUT,\r\n        baseURL: serverConfig.socketServerUrl\r\n    });\r\n\r\n    const SCUAxiosInstanceTemp = Axios.create({\r\n        timeout: TIMEOUT,\r\n        baseURL: serverConfig.scuServerUrl\r\n    });\r\n\r\n    const onRequestSuccess = (config: any) => {\r\n        //run with authen\r\n\r\n        const token = localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : \"\";\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n\r\n        return config;\r\n    };\r\n\r\n    const onRequestSuccess1 = (config: any) => {\r\n        //run with authen\r\n\r\n        // const token = localStorage.getItem(\"token\") ? localStorage.getItem(\"token\"): \"\";\r\n        // if (token) {\r\n        //     config.headers.Authorization = `Bearer ${token}`;\r\n        // }\r\n\r\n        return config;\r\n    };\r\n    const onResponseSuccess = (response: any) => response?.data;\r\n\r\n    const onResponseError = (err: any) => {\r\n        //run with authen\r\n\r\n        // const status = err.status || (err.response ? err.response.status : 0);\r\n        // if (status === 403 || status === 401) {\r\n        //     clearAll();\r\n        //     store.dispatch(setAuth(false));\r\n        // } else {\r\n        //     store.dispatch(\r\n        //         setErrorBoundry({\r\n        //             show: true,\r\n        //             error: `From: ${err.config.url}\\n` + err,\r\n        //         })\r\n        //     );\r\n        // }\r\n\r\n        //run without authen\r\n        store.dispatch(\r\n            setErrorBoundry({\r\n                show: true,\r\n                error: `From: ${err.config.url}\\n` + err,\r\n            })\r\n        );\r\n        return Promise.reject(err);\r\n    };\r\n\r\n    AxiosInstanceTemp.interceptors.request.use(onRequestSuccess);\r\n    AxiosInstanceTemp.interceptors.response.use(onResponseSuccess, onResponseError);\r\n\r\n    StreamAxiosInstanceTemp.interceptors.request.use(onRequestSuccess1);\r\n    StreamAxiosInstanceTemp.interceptors.response.use(onResponseSuccess, onResponseError);\r\n\r\n    SCUAxiosInstanceTemp.interceptors.request.use(onRequestSuccess);\r\n    SCUAxiosInstanceTemp.interceptors.response.use(onResponseSuccess, onResponseError);\r\n\r\n    AxiosInstance = AxiosInstanceTemp\r\n    StreamAxiosInstance = StreamAxiosInstanceTemp\r\n    SCUAxiosInstance = SCUAxiosInstanceTemp\r\n\r\n};\r\n\r\nconst checkUserPermision = (token: string | null) => {\r\n    const promise = new Promise(async (resolve, reject) => {\r\n        if (!token) {\r\n            resolve(false);\r\n        } else {\r\n            const RISAxios = axios.create({\r\n                timeout: 1 * 60 * 100000,\r\n                baseURL: serverConfig.risServerUrl,\r\n                headers: {\r\n                    Authorization: \"Bearer \" + token,\r\n                },\r\n            });\r\n            try {\r\n                const response = await RISAxios.get(\"/api/Users/info\");\r\n                resolve(true);\r\n            } catch (error) {\r\n                resolve(false);\r\n            }\r\n        }\r\n    });\r\n\r\n    return promise;\r\n};\r\n\r\nexport { setupAxiosInterceptors, AxiosInstance, StreamAxiosInstance,SCUAxiosInstance, checkUserPermision };\r\n","// import { patientInfoStream } from './../reducers/stream/stream.model';\r\nimport { notification } from \"antd\";\r\nimport * as mediasoupClient from \"mediasoup-client\";\r\nimport { type } from \"os\";\r\nimport { io } from \"socket.io-client\";\r\nimport { IMessageState } from \"../models/reducers/message\";\r\nimport { serverConfig } from \"../models/variables/serverConfig\";\r\nimport { getConsumersFromServer } from \"../reducers/consumer\";\r\nimport { comsumersToMediaStreams, setConsumers } from \"../reducers/consumersReducer\";\r\nimport { setListSrcVideo } from \"../reducers/listSrcVideo\";\r\nimport { setMessage } from \"../reducers/messageReducer\";\r\nimport { setPage } from \"../reducers/pageReducer\";\r\nimport { getUserInRoom } from \"../reducers/usersReducer\";\r\nimport { store } from \"../redux/store\";\r\nimport { StreamAxiosInstance } from \"../utils/setupAxiosInterceptors\";\r\nimport { EVENTS, RTC_EVENTS } from \"./events/EVENTS\";\r\nimport { Notification } from \"./Notification\";\r\nimport { UserClient } from \"./UserClient\";\r\n\r\nenum ETransportType {\r\n    producer = \"producer\",\r\n    consumer = \"consumer\",\r\n}\r\n\r\nclass RoomClient {\r\n    roomname: string;\r\n    password: string;\r\n    username: string | any;\r\n    socket: any;\r\n    localUser: UserClient | null;\r\n    device: any;\r\n    producerTransport: any;\r\n    consumerTransport: any;\r\n    routerCapabilities: any;\r\n    constructor(roomname: string | any, password: string | any, username: string | any, callback: Function) {\r\n        this.roomname = roomname;\r\n        this.password = password;\r\n        this.username = username;\r\n        this.socket = io(serverConfig.socketServerUrl);\r\n        this.socket.on(\"connect\", () => {\r\n            callback(this);\r\n        });\r\n        this.localUser = null;\r\n    }\r\n\r\n    initSocketEvent = () => {\r\n        this.socket.on(\r\n            RTC_EVENTS.NEW_PRODUCER,\r\n            async (data: { producer_id: string; isKey: boolean; peerId: string; peerName: string }) => {\r\n                console.log(\"NEW_PRODUCER\");\r\n                await store.dispatch(getUserInRoom());\r\n            }\r\n        );\r\n\r\n        this.socket.on(RTC_EVENTS.CLOSE_CONSUME, async ({ consumerId, peerId, peerName }: any) => {\r\n            console.log(\"closing consumer:\", consumerId, peerId, peerName);\r\n            await store.dispatch(getUserInRoom());\r\n        });\r\n\r\n        this.socket.on(EVENTS.SOCKET_USER_LEFT_ROOM, async ({ name, id, isKey }: any) => {\r\n            store.dispatch(getUserInRoom());\r\n            Notification(\"warning\", name + \" đã rời khỏi cuộc họp\");\r\n        });\r\n\r\n        this.socket.on(EVENTS.SOCKET_USER_JOIN_ROOM, async ({ name, id }: any) => {\r\n            await store.dispatch(getUserInRoom());\r\n            Notification(\"info\", name + \" đã tham gia vào cuộc họp\");\r\n        });\r\n\r\n        this.socket.on(EVENTS.INCOMMING_MESSAGE, (data: IMessageState) => {\r\n            store.dispatch(setMessage(data));\r\n        });\r\n\r\n        this.socket.on(EVENTS.SOCKET_DISCONNECT, () => {\r\n            this.exit(false);\r\n        });\r\n    };\r\n\r\n    exit = async (offline = false) => {\r\n        if (!offline) {\r\n            await StreamAxiosInstance.post(\"/call/exitRoom\", { roomname: this.roomname, userId: this.localUser?.id });\r\n        }\r\n        this.consumerTransport.close();\r\n        this.producerTransport.close();\r\n        this.socket.off(EVENTS.SOCKET_USER_JOIN_ROOM);\r\n        this.socket.off(EVENTS.SOCKET_USER_LEFT_ROOM);\r\n        this.socket.off(EVENTS.SOCKET_DISCONNECT);\r\n        this.socket.off(RTC_EVENTS.CLOSE_CONSUME);\r\n        this.socket.off(RTC_EVENTS.NEW_PRODUCER);\r\n        window.close();\r\n    };\r\n\r\n    init = async () => {\r\n        const user = new UserClient(this.socket, this.socket.id, this.username, true, this.roomname);\r\n        const hasRoom = await StreamAxiosInstance.post(\"/call/checkRoomExistence\", { roomname: this.roomname });\r\n        if (hasRoom) {\r\n            user.iskey = false;\r\n            const roomState = await this.joinRoom(user);\r\n            if (roomState.status !== 1) {\r\n                notification.error({ message: roomState.message });\r\n                store.dispatch(setPage(\"login\"))\r\n                return;\r\n            }\r\n            console.log(\"join room\");\r\n        } else {\r\n            user.iskey = true;\r\n            const roomState = await this.createRoom(user);\r\n            if (roomState.status !== 1) {\r\n                notification.error({ message: roomState.message });\r\n                return;\r\n            }\r\n            console.log(\"create room\");\r\n        }\r\n\r\n        const routerCapabilitiesData = await StreamAxiosInstance.post(\"/call/getRouterCapacities\", {\r\n            roomname: this.roomname,\r\n        });\r\n\r\n        const routerCapabilities = routerCapabilitiesData.data;\r\n\r\n        this.device = await this.loadDevice(routerCapabilities);\r\n        const producerTransport = await this.initTransports(this.device, ETransportType.producer);\r\n        // console.log(producerTransport);\r\n        producerTransport.on(\"connect\", async (dtlsData: any, callback: Function, errback: Function) => {\r\n            try {\r\n                await StreamAxiosInstance.post(\"/call/connectTransport\", {\r\n                    roomname: this.roomname,\r\n                    userId: this.socket.id,\r\n                    connectTransport: {\r\n                        dtlsParameters: dtlsData.dtlsParameters,\r\n                        transportId: producerTransport.id,\r\n                    },\r\n                });\r\n                callback();\r\n            } catch (error) {\r\n                errback(error);\r\n            }\r\n        });\r\n        producerTransport.on(\"produce\", async (producerParameters: any, callback: Function, errback: Function) => {\r\n            try {\r\n                const { kind, rtpParameters } = producerParameters;\r\n                const producerData = await StreamAxiosInstance.post(\"/call/createProducer\", {\r\n                    roomname: this.roomname,\r\n                    userId: this.socket.id,\r\n                    producerParams: {\r\n                        producerTransportId: producerTransport.id,\r\n                        kind,\r\n                        rtpParameters,\r\n                    },\r\n                });\r\n                const producerId = producerData.data;\r\n\r\n                callback({ id: producerId });\r\n            } catch (err) {\r\n                errback(err);\r\n            }\r\n        });\r\n\r\n        const consumerTransport = await this.initTransports(this.device, ETransportType.consumer);\r\n        consumerTransport.on(\"connect\", async (dtlsData: any, callback: Function, errback: Function) => {\r\n            try {\r\n                await StreamAxiosInstance.post(\"/call/connectTransport\", {\r\n                    roomname: this.roomname,\r\n                    userId: this.socket.id,\r\n                    connectTransport: {\r\n                        dtlsParameters: dtlsData.dtlsParameters,\r\n                        transportId: consumerTransport.id,\r\n                    },\r\n                });\r\n                callback();\r\n            } catch (error) {\r\n                errback(errback);\r\n            }\r\n        });\r\n\r\n        this.producerTransport = producerTransport;\r\n        this.consumerTransport = consumerTransport;\r\n        this.routerCapabilities = routerCapabilities;\r\n        this.localUser = user;\r\n    };\r\n\r\n    getConsumerFromProducerId = async (producerId: string) => {\r\n        if (!this.localUser) {\r\n            console.log(\"not found user in room\");\r\n            return;\r\n        }\r\n        const consumer = await this.localUser.consumer(\r\n            this.roomname,\r\n            this.localUser.id,\r\n            this.device.rtpCapabilities,\r\n            this.consumerTransport,\r\n            producerId\r\n        );\r\n        return consumer;\r\n    };\r\n\r\n    getProducerInRoom = async () => {\r\n        const listProducer = await StreamAxiosInstance.post(\"/call/getProducerInRoom\", {\r\n            roomname: this.roomname,\r\n        });\r\n        return listProducer;\r\n    };\r\n\r\n    createRoom = async (user: UserClient) => {\r\n        const roomState = await StreamAxiosInstance.post(\"/call/createRoom\", {\r\n            roomname: this.roomname,\r\n            password: this.password,\r\n            userId: user.id,\r\n            username: user.username,\r\n        });\r\n\r\n        return roomState;\r\n    };\r\n\r\n    joinRoom = async (user: UserClient) => {\r\n        const roomState = await StreamAxiosInstance.post(\"/call/joinRoom\", {\r\n            roomname: this.roomname,\r\n            password: this.password,\r\n            userId: user.id,\r\n            username: user.username,\r\n        });\r\n\r\n        return roomState;\r\n    };\r\n\r\n    loadDevice = async (routerRtpCapabilities: any) => {\r\n        let device: any;\r\n        try {\r\n            device = new mediasoupClient.Device();\r\n        } catch (error: any) {\r\n            if (error.name === \"UnsupportedError\") {\r\n                console.error(\"browser not supported\");\r\n            }\r\n            console.error(error);\r\n        }\r\n        await device.load({\r\n            routerRtpCapabilities,\r\n        });\r\n        return device;\r\n    };\r\n\r\n    initTransports = async (device: any, type: ETransportType) => {\r\n        const roomname = this.roomname;\r\n        const userId = this.socket.id;\r\n        const data = await StreamAxiosInstance.post(\"/call/createTransport\", {\r\n            roomname,\r\n            userId,\r\n        });\r\n\r\n        if (data.status === 1) {\r\n            const producerTransport =\r\n                type == ETransportType.producer\r\n                    ? device.createSendTransport(data.data)\r\n                    : device.createRecvTransport(data.data);\r\n            return producerTransport;\r\n        }\r\n    };\r\n}\r\n\r\nexport { RoomClient };\r\n","export interface IServerConfig {\r\n    risServerUrl: string;\r\n    scuServerUrl: string;\r\n    socketServerUrl: string;\r\n    hospitalLogo: string,\r\n    hospitalName: string,\r\n    hospitalAddress: string,\r\n}\r\nexport const serverConfig: IServerConfig = {\r\n    risServerUrl: \"\",\r\n    socketServerUrl: \"\",\r\n    scuServerUrl: '',\r\n    hospitalLogo: '',\r\n    hospitalName: '',\r\n    hospitalAddress: \"\",\r\n}","export const ACTION_TYPES = {\r\n    AUTHENTICATE: \"AUTHENTICATE\",\r\n};\r\n\r\ninterface IAction {\r\n    type: string;\r\n    payload: any;\r\n}\r\n\r\nconst initializeAuthenticate = false;\r\n\r\nconst authReducer = (state = initializeAuthenticate, action: IAction) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.AUTHENTICATE:\r\n            state = action.payload;\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setAuth = (data: boolean) => {\r\n    return {\r\n        type: ACTION_TYPES.AUTHENTICATE,\r\n        payload: data,\r\n    };\r\n};\r\n\r\nexport { authReducer, setAuth };\r\n","import { ISrcVideo } from \"../models/reducers/listSrcVideo\";\r\n\r\n\r\ninterface IAction {\r\n    type: string;\r\n    payload: any;\r\n}\r\n\r\nconst ACTION_TYPES = {\r\n    LIST_SRC_VIDEO: \"LIST_SRC_VIDEO\",\r\n};\r\n\r\nconst initialstate: Array<ISrcVideo> = [];\r\n\r\nconst listSrcVideoReducer = (state = initialstate, action: IAction) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.LIST_SRC_VIDEO:\r\n            state = action.payload;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setListSrcVideo = (value: Array<ISrcVideo>) => {\r\n    return {\r\n        type: ACTION_TYPES.LIST_SRC_VIDEO,\r\n        payload: value,\r\n    };\r\n};\r\n\r\nexport { listSrcVideoReducer, setListSrcVideo };\r\n","// Lưu audio đã đc chọn\r\n// Lưu audio đã đc chọn\r\nimport { ILocalStreams } from \"../models/reducers/localStreams\";\r\n\r\ninterface IAction {\r\n    type: string;\r\n    payload: any;\r\n}\r\n\r\nconst ACTION_TYPES = {\r\n    SET_LOCAL_AUDIO_INPUT: \"SET_LOCAL_AUDIO_INPUT\",\r\n};\r\n\r\nconst initialstate: ILocalStreams | null = null;\r\n\r\nconst localAudioInputReducer = (state = initialstate, action: IAction) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.SET_LOCAL_AUDIO_INPUT:\r\n            state = action.payload;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setLocalAudioInput = (value: ILocalStreams | null) => {\r\n    return {\r\n        type: ACTION_TYPES.SET_LOCAL_AUDIO_INPUT,\r\n        payload: value,\r\n    };\r\n};\r\n\r\nexport { localAudioInputReducer, setLocalAudioInput };","// Lưu danh sách tất cả các Devices của máy\r\n// Lưu danh sách tất cả các Devices của máy\r\nimport { defaultLocalStreams, ILocalStreams } from \"../models/reducers/localStreams\";\r\n\r\ninterface IAction {\r\n    type: string;\r\n    payload: any;\r\n}\r\n\r\nconst ACTION_TYPES = {\r\n    SET_LOCAL_STREAMS: \"SET_LOCAL_STREAMS\",\r\n};\r\n\r\nconst initialstate: Array<ILocalStreams> = defaultLocalStreams;\r\n\r\nconst localStreamsReducer = (state = initialstate, action: IAction) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.SET_LOCAL_STREAMS:\r\n            state = action.payload;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setLocalStreams = (value: Array<ILocalStreams>) => {\r\n    return {\r\n        type: ACTION_TYPES.SET_LOCAL_STREAMS,\r\n        payload: value,\r\n    };\r\n};\r\n\r\nexport { localStreamsReducer, setLocalStreams };\r\n","export interface ILocalStreams {\r\n    deviceId: string;\r\n    name: string;\r\n    active: boolean | any;\r\n    producer?: any;\r\n    type: string;\r\n}\r\n\r\nexport const defaultLocalStreams: Array<ILocalStreams> = [];\r\n","// Lưu video đã đc chọn\r\n// Lưu video đã đc chọn\r\nimport { ILocalStreams } from \"../models/reducers/localStreams\";\r\n\r\ninterface IAction {\r\n    type: string;\r\n    payload: any;\r\n}\r\n\r\nconst ACTION_TYPES = {\r\n    SET_LOCAL_VIDEO_INPUT: \"SET_LOCAL_VIDEO_INPUT\",\r\n};\r\n\r\nconst initialstate: ILocalStreams | null = null;\r\n\r\nconst localVideoInputReducer = (state = initialstate, action: IAction) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.SET_LOCAL_VIDEO_INPUT:\r\n            state = action.payload;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setLocalVideoInput = (value: ILocalStreams | null) => {\r\n    return {\r\n        type: ACTION_TYPES.SET_LOCAL_VIDEO_INPUT,\r\n        payload: value,\r\n    };\r\n};\r\n\r\nexport { localVideoInputReducer, setLocalVideoInput };","import { AnyAction } from \"redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { defaultMessageState, IMessageState } from \"../models/reducers/message\";\r\nimport { StreamAxiosInstance } from \"../utils/setupAxiosInterceptors\";\r\n\r\nexport const ACTION_TYPES = {\r\n    SET_MESSAGE: \"SET_MESSAGE\",\r\n};\r\n\r\ninterface IAction {\r\n    type: string;\r\n    payload: any;\r\n}\r\n\r\nconst initializeMessage: Array<IMessageState> = defaultMessageState;\r\n\r\nconst messageReducer = (state = initializeMessage, action: IAction) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.SET_MESSAGE:\r\n            state = action.payload;\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setMessage = (stream: IMessageState) => {\r\n    return {\r\n        type: ACTION_TYPES.SET_MESSAGE,\r\n        payload: stream,\r\n    };\r\n};\r\n\r\nexport const sendMessage =async (message: string, roomname: string, userID: string) => {\r\n    const response = await StreamAxiosInstance.post(\"/call/sendMessage\", {\r\n        roomname: roomname,\r\n        message: message,\r\n        userId: userID,\r\n    });\r\n    // dispatch(getMessage());\r\n};\r\n\r\nconst getMessage = () => async (dispatch: any) => {\r\n    const messages = await StreamAxiosInstance.post(\"/call/getMessageInRoom\", {\r\n        roomname: window.roomClient.roomname,\r\n    });\r\n    return dispatch(setMessage(messages.data));\r\n};\r\n\r\nexport { messageReducer, setMessage, getMessage };\r\n","export interface IMessageState {\r\n  id: number;\r\n  name:string;\r\n  message:string\r\n}\r\n\r\nexport const defaultMessageState: Array<IMessageState> = [];\r\n","export const ACTION_TYPES = {\r\n    SET_MIC_OPEN: \"SET_MIC_OPEN\",\r\n};\r\n\r\ninterface IAction {\r\n    type: string;\r\n    payload: any;\r\n}\r\n\r\nconst initialize: boolean = false;\r\n\r\nconst micOpenReducer = (state = initialize, action: IAction) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.SET_MIC_OPEN:\r\n            state = action.payload;\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setMicOpen = (data: boolean) => {\r\n    return {\r\n        type: ACTION_TYPES.SET_MIC_OPEN,\r\n        payload: data,\r\n    };\r\n};\r\n\r\nexport { micOpenReducer, setMicOpen };\r\n","export const ACTION_TYPES = {\r\n    SET_MODAL_SETTING_VISIBLE: \"SET_MODAL_SETTING_VISIBLE\",\r\n};\r\n\r\ninterface IAction {\r\n    type: string;\r\n    payload: any;\r\n}\r\n\r\nconst initialize: boolean = false;\r\n\r\nconst modalSettingVisibleReducer = (state = initialize, action: IAction) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.SET_MODAL_SETTING_VISIBLE:\r\n            state = action.payload;\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setModalSettingVisible = (data: boolean) => {\r\n    return {\r\n        type: ACTION_TYPES.SET_MODAL_SETTING_VISIBLE,\r\n        payload: data,\r\n    };\r\n};\r\n\r\nexport { modalSettingVisibleReducer, setModalSettingVisible };\r\n","export const ACTION_TYPES = {\r\n    SET_SIDER_ACTIVE: \"SET_SIDER_ACTIVE\",\r\n};\r\n\r\ninterface IAction {\r\n    type: string;\r\n    payload: any;\r\n}\r\n\r\nconst initialize: string = \"users\"; // \"none\" , \"chat\", \"users\"\r\n\r\nconst siderActiveReducer = (state = initialize, action: IAction) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.SET_SIDER_ACTIVE:\r\n            state = action.payload;\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setSiderActive = (data: string) => {\r\n    return {\r\n        type: ACTION_TYPES.SET_SIDER_ACTIVE,\r\n        payload: data,\r\n    };\r\n};\r\n\r\nexport { siderActiveReducer, setSiderActive };\r\n","export const ACTION_TYPES = {\r\n    SET_VIDEO_OPEN: \"SET_VIDEO_OPEN\",\r\n};\r\n\r\ninterface IAction {\r\n    type: string;\r\n    payload: any;\r\n}\r\n\r\nconst initialize: boolean = false;\r\n\r\nconst videoOpenReducer = (state = initialize, action: IAction) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.SET_VIDEO_OPEN:\r\n            state = action.payload;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setVideoOpen = (data: boolean) => {\r\n    return {\r\n        type: ACTION_TYPES.SET_VIDEO_OPEN,\r\n        payload: data,\r\n    };\r\n};\r\n\r\nexport { videoOpenReducer, setVideoOpen };\r\n","import { Dispatch } from \"redux\";\r\nimport { IComsumer } from \"../models/reducers/comsumers\";\r\nimport { ISrcVideo } from \"../models/reducers/listSrcVideo\";\r\nimport { store } from \"../redux/store\";\r\nimport { StreamAxiosInstance } from \"../utils/setupAxiosInterceptors\";\r\nimport { setListSrcVideo } from \"./listSrcVideo\";\r\n\r\ninterface IAction {\r\n    type: string;\r\n    payload: any;\r\n}\r\n\r\nconst ACTION_TYPES = {\r\n    SET_CONSUMERS: \"SET_CONSUMERS\",\r\n};\r\n\r\n\r\nconst initialstate: Array<IComsumer> = [];\r\n\r\nconst consumersReducer = (state = initialstate, action: IAction) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.SET_CONSUMERS:\r\n            state = action.payload;\r\n            return [...state];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setConsumers = (value: Array<IComsumer>) => {\r\n    return {\r\n        type: ACTION_TYPES.SET_CONSUMERS,\r\n        payload: value,\r\n    };\r\n};\r\n\r\n\r\nconst comsumersToMediaStreams = async (comsumers: Array<IComsumer>) => {\r\n    \r\n    const listSrcVideo: Array<ISrcVideo> = []\r\n    for (let i = 0; i < comsumers.length; i++) {\r\n        const comsumer = comsumers[i];\r\n        for (let j = 0; j < comsumer.listProducer.length; j++) {\r\n            const producer = comsumer.listProducer[j];\r\n\r\n            const roomClient = window.roomClient;\r\n\r\n            const consumer = await roomClient.getConsumerFromProducerId(producer.producerId);\r\n            const stream = new MediaStream();\r\n            stream.addTrack(consumer.track);\r\n\r\n            const data: ISrcVideo = {\r\n                producerId: producer.producerId,\r\n                producerType: producer.producerType,\r\n                stream,\r\n                type: comsumer.userId === window.roomClient.localUser.id ? \"localUser\" : 'remoteUser',\r\n                active: false,\r\n                activeMain: false,\r\n                userId: comsumer.userId,\r\n                consumerId: consumer.id,\r\n                username: comsumer.username,\r\n            }\r\n            listSrcVideo.push(data)\r\n        }\r\n    }\r\n    return listSrcVideo;\r\n}\r\n\r\n\r\n\r\n\r\nexport {\r\n    setConsumers,\r\n    consumersReducer,\r\n    // getConsumersFromServer,\r\n    comsumersToMediaStreams\r\n};\r\n","import { Dispatch } from \"redux\";\r\nimport { defaultListUser, IUser } from \"../models/reducers/comsumers\";\r\nimport { ISrcVideo } from \"../models/reducers/listSrcVideo\";\r\nimport { store } from \"../redux/store\";\r\nimport { StreamAxiosInstance } from \"../utils/setupAxiosInterceptors\";\r\nimport { setListSrcVideo } from \"./listSrcVideo\";\r\n\r\ninterface IAction {\r\n    type: string;\r\n    payload: any;\r\n}\r\n\r\nconst ACTION_TYPES = {\r\n    SET_USERS: \"SET_USERS\",\r\n};\r\n\r\nconst initialstate: Array<IUser> = defaultListUser;\r\n\r\nconst usersReducer = (state = initialstate, action: IAction) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.SET_USERS:\r\n            state = action.payload;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setUsers = (value: Array<IUser>) => {\r\n    return {\r\n        type: ACTION_TYPES.SET_USERS,\r\n        payload: value,\r\n    };\r\n};\r\n\r\nconst getUserInRoom: any = () => async (dispatch: any) => {\r\n    const userInRoom = await StreamAxiosInstance.post(\"/call/getConsumerUser\", {\r\n        roomname: window.roomClient.roomname,\r\n    });\r\n    await dispatch(setUsers(userInRoom.data));\r\n};\r\n\r\nexport { usersReducer, setUsers, getUserInRoom };\r\n","export interface IUser {\r\n    listProducer: Array<IProducer>;\r\n    userId: string;\r\n    username: string;\r\n}\r\n\r\nexport interface IComsumer {\r\n    listProducer: Array<IProducer>;\r\n    userId: string;\r\n    username: string;\r\n}\r\n\r\nexport interface IProducer {\r\n    producerId: string;\r\n    producerType: string;\r\n    consumerId?: string;\r\n    stream?: string;\r\n}\r\n\r\nexport const defaultListUser: Array<IUser> = [];\r\n","// Lưu video đã đc chọn\r\n// Lưu video đã đc chọn\r\nimport { defaultLocalProducerList, ILocalProducer } from \"../models/reducers/localProducer\";\r\nimport { ILocalStreams } from \"../models/reducers/localStreams\";\r\n\r\ninterface IAction {\r\n    type: string;\r\n    payload: any;\r\n}\r\n\r\nconst ACTION_TYPES = {\r\n    SET_LOCAL_PRODUCER: \"SET_LOCAL_PRODUCER\",\r\n};\r\n\r\nconst initialstate: Array<ILocalProducer> = defaultLocalProducerList;\r\n\r\nconst localProducerReducer = (state = initialstate, action: IAction) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.SET_LOCAL_PRODUCER:\r\n            state = action.payload;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setLocalProducer = (value: Array<ILocalProducer>) => {\r\n    return {\r\n        type: ACTION_TYPES.SET_LOCAL_PRODUCER,\r\n        payload: value,\r\n    };\r\n};\r\n\r\nexport { localProducerReducer, setLocalProducer };\r\n","export interface ILocalProducer {\r\n    deviceId: string;\r\n    name: string;\r\n    active: boolean | any;\r\n    producer?: any;\r\n    type: string;\r\n}\r\n\r\nexport const defaultLocalProducerList: Array<ILocalProducer> = [];\r\n","export const ACTION_TYPES = {\r\n    SET_PAGE: \"SET_PAGE\",\r\n};\r\n\r\ninterface IAction {\r\n    type: string;\r\n    payload: any;\r\n}\r\n\r\nconst initialize: string = '';\r\n\r\nconst pageReducer = (state = initialize, action: IAction) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.SET_PAGE:\r\n            state = action.payload;\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst setPage = (data: string) => {\r\n    return {\r\n        type: ACTION_TYPES.SET_PAGE,\r\n        payload: data,\r\n    };\r\n};\r\n\r\nexport { pageReducer, setPage };\r\n","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"../reducers/authenticateReducer\";\r\nimport { errorBoundryReducer } from \"../reducers/errorBoudryReducer\";\r\nimport { listSrcVideoReducer } from \"../reducers/listSrcVideo\";\r\nimport { localAudioInputReducer } from \"../reducers/localAudioInput\";\r\nimport { localStreamsReducer } from \"../reducers/localStreams\";\r\nimport { localVideoInputReducer } from \"../reducers/localVideoInput\";\r\nimport { messageReducer } from \"../reducers/messageReducer\";\r\nimport { micOpenReducer } from \"../reducers/ui/micOpenReducer\";\r\nimport { modalSettingVisibleReducer } from \"../reducers/ui/modalSettingVisibleReducer\";\r\nimport { siderActiveReducer } from \"../reducers/ui/siderActive\";\r\nimport { videoOpenReducer } from \"../reducers/ui/videoOpenReducer\";\r\nimport { consumersReducer } from \"../reducers/consumersReducer\";\r\nimport { usersReducer } from \"../reducers/usersReducer\";\r\nimport { localProducerReducer } from \"../reducers/localProducerReducer\";\r\nimport { pageReducer } from \"../reducers/pageReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    errorBoundryState: errorBoundryReducer,\r\n    isAuthenticate: authReducer,\r\n    messageState: messageReducer,\r\n    listSrcVideo: listSrcVideoReducer,\r\n    localStreams: localStreamsReducer,\r\n    modalSettingVisible: modalSettingVisibleReducer,// Lưu danh sách tất cả các Devices của máy\r\n    localAudioInput: localAudioInputReducer,// Lưu audio đã đc chọn\r\n    localVideoInput: localVideoInputReducer,// Lưu video đã đc chọn\r\n    videoOpen: videoOpenReducer, // cấp quyền mở video,\r\n    micOpen: micOpenReducer, // cấp quyền mở audio,\r\n    siderActive: siderActiveReducer,\r\n    consumers: consumersReducer,\r\n    listUser: usersReducer,\r\n    localProducer: localProducerReducer,\r\n    pageReducer,\r\n});\r\nexport { rootReducer };\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./rootReducer\";\r\n\r\n// const logger = (store) => (next) => (action) => {\r\n//     let result = next(action);\r\n//     return result;\r\n// };\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst store:any = createStore(rootReducer, applyMiddleware(...middleWare));\r\n\r\nexport { store };","import { ILocalStreams } from \"./../models/reducers/localStreams\";\r\nimport { store } from \"../redux/store\";\r\nimport { setLocalStreams } from \"../reducers/localStreams\";\r\nimport { setLocalProducer } from \"../reducers/localProducerReducer\";\r\nimport { ILocalProducer } from \"../models/reducers/localProducer\";\r\n\r\nexport const getDevices = async () => {\r\n    var constraints = { audio: true, video: true };\r\n    const data = await window.navigator.mediaDevices.getUserMedia(constraints);\r\n    const devices = await window.navigator.mediaDevices.enumerateDevices();\r\n    const deviceList = [];\r\n    for (let index = 0; index < devices.length; index++) {\r\n        const deviceInfo = devices[index];\r\n        const deviceKind = deviceInfo.kind;\r\n        const deviceName = deviceInfo.label;\r\n        const deviceId = deviceInfo.deviceId;\r\n\r\n        if (deviceKind === \"videoinput\" || deviceKind === \"audioinput\") {\r\n            const localDevice: ILocalProducer = {\r\n                name: deviceName,\r\n                active: deviceId === \"default\" ? true : false,\r\n                type: deviceKind,\r\n                deviceId,\r\n                producer: null,\r\n            };\r\n            deviceList.push(localDevice);\r\n        }\r\n    }\r\n\r\n    store.dispatch(setLocalProducer(deviceList));\r\n};\r\n","import { store } from \"../redux/store\";\r\nimport { StreamAxiosInstance } from \"../utils/setupAxiosInterceptors\";\r\nimport { comsumersToMediaStreams, setConsumers } from \"./consumersReducer\";\r\nimport { setListSrcVideo } from \"./listSrcVideo\";\r\n\r\nexport const getConsumersFromServer: any = (roomname: string) => async (dispatch: any) => {\r\n    const response = await StreamAxiosInstance.post(\"/call/getConsumerUser\", { roomname });\r\n    store.dispatch(setConsumers(response.data));\r\n    const data = await comsumersToMediaStreams(response.data)\r\n    store.dispatch(setListSrcVideo(data))\r\n};\r\n","import { ISrcVideo } from \"../models/reducers/listSrcVideo\";\r\nimport { ILocalProducer } from \"../models/reducers/localProducer\";\r\nimport { ILocalStreams } from \"../models/reducers/localStreams\";\r\nimport { getConsumersFromServer } from \"../reducers/consumer\";\r\nimport { setLocalProducer } from \"../reducers/localProducerReducer\";\r\nimport { getUserInRoom } from \"../reducers/usersReducer\";\r\nimport { store } from \"../redux/store\";\r\nlet activeVideoProducer: any = null;\r\nlet activeMicProducer: any = null;\r\nexport const openLocalCamera = async (ILocalProducer: Array<ILocalProducer>) => {\r\n    const producerVideo = ILocalProducer.filter((producer) => producer.type === \"videoinput\");\r\n    const producerActive = producerVideo.find((producer) => producer.active === true) || producerVideo[0];\r\n    if (!producerActive) {\r\n        return;\r\n    }\r\n    if (activeVideoProducer) {\r\n        await window.roomClient.localUser.closeProducer(activeVideoProducer.producer.id);\r\n    }\r\n    const roomclient = window.roomClient;\r\n    const localUser = roomclient.localUser;\r\n    const mediaConstraints: any = {\r\n        video: {\r\n            deviceId: producerActive.deviceId ? { exact: producerActive.deviceId } : undefined,\r\n        },\r\n        audio: false,\r\n    };\r\n    const mediaDevices = navigator.mediaDevices;\r\n    const stream = await mediaDevices.getUserMedia(mediaConstraints);\r\n    const track = stream.getVideoTracks()[0];\r\n    const producer = await localUser?.produce(\r\n        roomclient.routerCapabilities,\r\n        roomclient.producerTransport,\r\n        track,\r\n        \"camera\"\r\n    );\r\n    activeVideoProducer = { producer, deviceId: producerActive.deviceId };\r\n    producerActive.active = true;\r\n    producerActive.producer = producer;\r\n    await store.dispatch(setLocalProducer(ILocalProducer));\r\n    await store.dispatch(getUserInRoom());\r\n};\r\n\r\nexport const openMic = async (ILocalProducer: Array<ILocalProducer>) => {\r\n    const producerVideo = ILocalProducer.filter((producer) => producer.type === \"audioinput\");\r\n    const producerActive = producerVideo.find((producer) => producer.active === true) || producerVideo[0];\r\n    if (!producerActive) {\r\n        return;\r\n    }\r\n    console.log(producerActive);\r\n    if (activeMicProducer) {\r\n        await  window.roomClient.localUser.closeProducer(activeMicProducer.producer.id);\r\n    }\r\n    const roomclient = window.roomClient;\r\n    const localUser = roomclient.localUser;\r\n    const mediaConstraints: any = {\r\n        audio: {\r\n            deviceId: producerActive.deviceId ? { exact: producerActive.deviceId } : undefined,\r\n        },\r\n        video: false,\r\n    };\r\n    const mediaDevices = navigator.mediaDevices;\r\n    const stream = await mediaDevices.getUserMedia(mediaConstraints);\r\n    const track = stream.getAudioTracks()[0];\r\n    const producer = await localUser?.produce(\r\n        roomclient.routerCapabilities,\r\n        roomclient.producerTransport,\r\n        track,\r\n        \"audio\"\r\n    );\r\n    activeMicProducer = { producer, deviceId: producerActive.deviceId };\r\n    producerActive.active = true;\r\n    producerActive.producer = producer;\r\n    await store.dispatch(setLocalProducer(ILocalProducer));\r\n    await store.dispatch(getUserInRoom());\r\n};\r\n\r\nexport const openShareScreen = async () => {\r\n    const roomclient = window.roomClient;\r\n    const localUser = roomclient.localUser;\r\n    const mediaConstraints = { video: true, audio: false };\r\n    const mediaDevices: any = navigator.mediaDevices;\r\n    const stream = await mediaDevices.getDisplayMedia(mediaConstraints);\r\n    const track = stream.getVideoTracks()[0];\r\n    const producer = await localUser?.produce(\r\n        roomclient.routerCapabilities,\r\n        roomclient.producerTransport,\r\n        track,\r\n        \"screenshare\"\r\n    );\r\n    await store.dispatch(getUserInRoom());\r\n};\r\n\r\nexport const closeLocalCamera = async (listSrcVideo: Array<ISrcVideo>) => {\r\n    if (listSrcVideo.filter((i) => i.producerType === \"video\" && i.type === \"localUser\")[0]) {\r\n        await window.roomClient.localUser.closeProducer(\r\n            listSrcVideo.filter((i) => i.producerType === \"video\" && i.type === \"localUser\")[0].producerId\r\n        );\r\n    }\r\n};\r\n","export interface IRoomData {\r\n    roomName: string,\r\n    roomKey: string,\r\n    username: string,\r\n    sid: Number,\r\n}\r\nexport const roomData: IRoomData = {\r\n    roomName: '',\r\n    roomKey: \"\",\r\n    username: '',\r\n    sid: -1,\r\n}","import { message } from 'antd';\r\nimport moment from 'moment';\r\nimport { roomData } from './../models/variables/roomData';\r\nimport { serverConfig } from './../models/variables/serverConfig';\r\nimport { SCUAxiosInstance } from './setupAxiosInterceptors';\r\nlet currentRecorder: any = null;\r\nlet chunks: any = [];\r\nconst recorderVideo = async (stream: MediaStream) => {\r\n    const mime = window.MediaRecorder.isTypeSupported(\"video/webm; codecs=vp9\") ? \"video/webm; codecs=vp9\" : \"video/webm\";\r\n    const mediaRecorder = new window.MediaRecorder(stream, {\r\n        mimeType: mime,\r\n    });\r\n    mediaRecorder.ondataavailable = function (e: any) {\r\n        if (e.data.size > 0) {\r\n            chunks.push(e.data);\r\n        }\r\n    };\r\n\r\n    mediaRecorder.onstop = async function () {\r\n        const blob = new Blob(chunks, {\r\n            type: chunks[0].type,\r\n        });\r\n        // const url = URL.createObjectURL(blob);\r\n        // let a = document.createElement(\"a\");\r\n        // a.href = url;\r\n        // a.download = \"video.webm\";\r\n        // a.click();\r\n        const file = new File([blob], moment().format(\"HH-mm.DD-MM-YYYY\")+ \".webm\");\r\n        var formData = new FormData();\r\n        formData.append('files', file);\r\n        const response = await SCUAxiosInstance.post(`vrpacs-file/study-upload-file?sID=${roomData.sid}&seName=NonDicom&description=upload_${moment().format(\"DD-MM-YYYY\")}`, formData)\r\n        if (response.status === 1) {\r\n            message.success(\"Success!\")\r\n        } else {\r\n            message.error(\"error!\")\r\n        }\r\n        chunks = [];\r\n    };\r\n\r\n    mediaRecorder.start();\r\n    currentRecorder = mediaRecorder\r\n};\r\n\r\n\r\nconst blobToFile = (theBlob: Blob, fileName: string): File => {\r\n    var b: any = theBlob;\r\n    //A Blob() is almost a File() - it's just missing the two properties below which we will add\r\n    b.lastModifiedDate = new Date();\r\n    b.name = fileName;\r\n\r\n    //Cast to a File() type\r\n    return <File>theBlob;\r\n}\r\n\r\n\r\nconst stopRecording = async () => {\r\n    if (currentRecorder) {\r\n        currentRecorder.stop();\r\n        const stream = currentRecorder.stream;\r\n        stream.getTracks().forEach((track: any) => {\r\n            track.stop()\r\n        });\r\n        console.log(currentRecorder)\r\n\r\n\r\n\r\n        // currentRecorder.stopRecording(function () {\r\n        //     const blob = currentRecorder.getBlob();\r\n        // const url = URL.createObjectURL(blob);\r\n        // const a = document.createElement(\"a\");\r\n        // a.href = url;\r\n        // a.download = \"video.webm\";\r\n        // a.click();\r\n        // window.URL.revokeObjectURL(url);\r\n        // });\r\n    }\r\n};\r\n\r\nexport { recorderVideo, stopRecording };\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\ninterface Props {\r\n    name: string;\r\n    style: any ;\r\n}\r\ninterface State {\r\n\r\n}\r\n\r\nexport class IconFAPro extends Component<Props, State> {\r\n    state = {}\r\n    componentDidMount = () => {\r\n        const { name } = this.props;\r\n    }\r\n    componentDidUpdate = (prevProps: Props) => {\r\n        const { name } = this.props;\r\n        if (prevProps.name !== name) {\r\n        }\r\n    }\r\n    render() {\r\n        const { name ,style} = this.props;\r\n        return (\r\n            <i className={name} style={style} />\r\n        )\r\n    }\r\n}","import { Dropdown, Tooltip, Menu, Badge, message } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { DownOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport ResizeObserver from \"react-resize-observer\";\r\nimport { setModalSettingVisible } from \"../../reducers/ui/modalSettingVisibleReducer\";\r\nimport { setVideoOpen } from \"../../reducers/ui/videoOpenReducer\";\r\nimport { setMicOpen } from \"../../reducers/ui/micOpenReducer\";\r\nimport { setSiderActive } from \"../../reducers/ui/siderActive\";\r\nimport { ILocalStreams } from \"../../models/reducers/localStreams\";\r\nimport { ISrcVideo } from \"../../models/reducers/listSrcVideo\";\r\nimport { getConsumersFromServer } from \"../../reducers/consumer\";\r\nimport { closeLocalCamera, openLocalCamera, openMic, openShareScreen } from \"../../utils/cameraControl\";\r\nimport { ILocalProducer } from \"../../models/reducers/localProducer\";\r\nimport { IMessageState } from \"../../models/reducers/message\";\r\nimport { IUser } from \"../../models/reducers/comsumers\";\r\nimport { recorderVideo, stopRecording } from \"../../utils/recorderVideo\";\r\nimport { IconFAPro } from \"../../components/IconFAPro/IconFAPro\";\r\n\r\nconst menu = (\r\n    <Menu>\r\n        <Menu.Item\r\n            onClick={() => {\r\n                if (!document.fullscreenElement) {\r\n                    document.documentElement.requestFullscreen();\r\n                } else {\r\n                    if (document.exitFullscreen) {\r\n                        document.exitFullscreen();\r\n                    }\r\n                }\r\n            }}\r\n        >\r\n            Toàn màn hình\r\n        </Menu.Item>\r\n    </Menu>\r\n);\r\n\r\ninterface Props {\r\n    setModalSettingVisible: Function;\r\n    micOpen: boolean;\r\n    videoOpen: boolean;\r\n    setVideoOpen: Function;\r\n    setMicOpen: Function;\r\n    setSiderActive: Function;\r\n    siderActive: string;\r\n    localAudioInput: ILocalStreams | null;\r\n    localProducer: Array<ILocalProducer>;\r\n    listSrcVideo: Array<ISrcVideo>;\r\n    getConsumersFromServer: Function;\r\n    messageState: Array<IMessageState>;\r\n    listUser: Array<IUser>;\r\n}\r\ninterface State {\r\n    showButtonDropdown: boolean;\r\n    recordStart: boolean\r\n}\r\n\r\nexport class HomeFooter extends Component<Props, State> {\r\n    state = {\r\n        showButtonDropdown: false,\r\n        recordStart: false,\r\n    };\r\n    timer: any = null;\r\n\r\n    onOpenSharescreen = async () => {\r\n        openShareScreen();\r\n    };\r\n\r\n    onOpenCamera = async (value: boolean) => {\r\n        const { localProducer } = this.props;\r\n        const producerVideo = localProducer.filter((producer) => producer.type === \"videoinput\");\r\n        const producerActive = producerVideo.find((producer) => producer.active === true) || producerVideo[0];\r\n        if (!producerActive) {\r\n            return;\r\n        }\r\n        if (!producerActive.producer) {\r\n            console.log(\"create\");\r\n            openLocalCamera(localProducer);\r\n        } else if (producerActive.producer && value === true) {\r\n            producerActive.producer.producer.resume();\r\n            console.log(\"remuse\", producerActive.producer);\r\n        } else {\r\n            producerActive.producer.producer.pause();\r\n            console.log(\"pause\");\r\n        }\r\n        await this.props.setVideoOpen(value);\r\n    };\r\n\r\n    onOpenMic = async (value: boolean) => {\r\n        const { localProducer } = this.props;\r\n        const producerVideo = localProducer.filter((producer) => producer.type === \"audioinput\");\r\n        const producerActive = producerVideo.find((producer) => producer.active === true) || producerVideo[0];\r\n        if (!producerActive) {\r\n            return;\r\n        }\r\n        if (!producerActive.producer) {\r\n            console.log(\"create\");\r\n            openMic(localProducer);\r\n        } else if (producerActive.producer && value === true) {\r\n            producerActive.producer.producer.resume();\r\n            console.log(\"remuse\", producerActive.producer);\r\n        } else {\r\n            producerActive.producer.producer.pause();\r\n            console.log(\"pause\");\r\n        }\r\n        await this.props.setMicOpen(value);\r\n    };\r\n\r\n    onRecord = async () => {\r\n\r\n        var minutesLabel = document.getElementById(\"minutes-count\");\r\n        var secondsLabel = document.getElementById(\"seconds-count\");\r\n        if (!this.state.recordStart) {\r\n            console.log(\"Start\");\r\n            const { localProducer } = this.props;\r\n\r\n            const audiodeviceId = localProducer.filter(item => item.active && item.type === \"audioinput\")[0]?.deviceId\r\n            const audioStream = await navigator.mediaDevices.getUserMedia({\r\n                audio: {\r\n                    deviceId: audiodeviceId ? { exact: audiodeviceId } : undefined,\r\n                },\r\n            });\r\n            // @ts-ignore\r\n            const screenStream: any = await navigator.mediaDevices.getDisplayMedia({\r\n                video: true,\r\n                audio: true,\r\n            });\r\n            var totalSeconds = 0;\r\n            this.timer = setInterval(setTime, 1000);\r\n            audioStream.getAudioTracks().forEach((track) => {\r\n                screenStream.addTrack(track);\r\n            });\r\n\r\n            console.log(screenStream.getAudioTracks().forEach((track: any) => {\r\n                console.log(track);\r\n            }));\r\n            recorderVideo(screenStream);\r\n        } else {\r\n            console.log(\"Stop\");\r\n\r\n            if (secondsLabel && minutesLabel) {\r\n                secondsLabel.innerHTML = '';\r\n                minutesLabel.innerHTML = '';\r\n            }\r\n            clearInterval(this.timer);\r\n            stopRecording();\r\n        }\r\n\r\n        function setTime() {\r\n            ++totalSeconds;\r\n            if (secondsLabel && minutesLabel) {\r\n                console.log(pad(totalSeconds % 60) + \":\" + pad(Math.floor(totalSeconds / 60)));\r\n\r\n                secondsLabel.innerHTML = pad(totalSeconds % 60);\r\n                minutesLabel.innerHTML = pad(Math.floor(totalSeconds / 60)) + \":\";\r\n            }\r\n        }\r\n\r\n        function pad(val: Number) {\r\n            var valString = val + \"\";\r\n            if (valString.length < 2) {\r\n                return \"0\" + valString;\r\n            } else {\r\n                return valString;\r\n            }\r\n        }\r\n        this.setState({\r\n            recordStart: !this.state.recordStart\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { showButtonDropdown, recordStart } = this.state;\r\n        const { micOpen, videoOpen, siderActive, messageState, listUser } = this.props;\r\n        return (\r\n            <div className=\"home-footer\">\r\n                <ResizeObserver\r\n                    onResize={(rect) => {\r\n                        if (rect.width < 769) {\r\n                            this.setState({\r\n                                showButtonDropdown: true,\r\n                            });\r\n                        } else {\r\n                            this.setState({\r\n                                showButtonDropdown: false,\r\n                            });\r\n                        }\r\n                    }}\r\n                />\r\n\r\n                <div className=\"wrapper-left\">\r\n                    <Tooltip title=\"Chọn camera\">\r\n                        <button onClick={() => this.props.setModalSettingVisible(true)}>\r\n                            <IconFAPro name=\"fal fa-cog\" style={{}} />\r\n                        </button>\r\n                    </Tooltip>\r\n                    {!showButtonDropdown && (\r\n                        <>\r\n                            <div style={{ width: 1, height: 16, background: \"#dadce0\", margin: \"0 6px\" }}></div>\r\n                            <div className=\"room-name\">{window.roomClient.roomname}</div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <div style={{ flex: 1, justifyContent: \"center\" }}>\r\n                    {micOpen ? (\r\n                        <Tooltip title=\"Tắt micro\">\r\n                            <button className=\"circle\" onClick={() => this.onOpenMic(false)}>\r\n                                <IconFAPro style={{}} name=\"fal fa-microphone\" />\r\n                            </button>\r\n                        </Tooltip>\r\n                    ) : (\r\n                        <Tooltip title=\"Bật micro\">\r\n                            <button className=\"circle\" onClick={() => this.onOpenMic(true)}>\r\n                                <IconFAPro style={{}} name=\"fal fa-microphone-slash\" />\r\n                            </button>\r\n                        </Tooltip>\r\n                    )}\r\n                    {videoOpen ? (\r\n                        <Tooltip title=\"Tắt camera\">\r\n                            <button className=\"circle\" onClick={() => this.onOpenCamera(false)}>\r\n                                <IconFAPro style={{}} name=\"fal fa-video\" />\r\n                            </button>\r\n                        </Tooltip>\r\n                    ) : (\r\n                        <Tooltip title=\"Bật camera\">\r\n                            <button className=\"circle\" onClick={() => this.onOpenCamera(true)}>\r\n                                <IconFAPro style={{}} name=\"fal fa-video-slash\" />\r\n                            </button>\r\n                        </Tooltip>\r\n                    )}\r\n                    <Tooltip title=\"Share screen\">\r\n                        <button className=\"circle\" onClick={() => this.onOpenSharescreen()}>\r\n                            <IconFAPro style={{}} name=\"fal fa-desktop\" />\r\n                        </button>\r\n                    </Tooltip>\r\n                    {\r\n                        !recordStart ?\r\n                            <Tooltip title=\"Record start\">\r\n                                <button className=\"circle\" onClick={() => this.onRecord()}>\r\n                                    <IconFAPro style={{ fontSize: 18 }} name=\"fal fa-play\" />\r\n                                </button>\r\n                            </Tooltip>\r\n                            :\r\n                            <Tooltip title=\"Record stop\">\r\n                                <button style={{ fontSize: 12, background: 'tomato' }} className=\"circle\" onClick={() => this.onRecord()}>\r\n                                    <IconFAPro style={{ fontSize: 18 }} name=\"fal fa-stop\" />\r\n                                </button>\r\n                            </Tooltip>\r\n                    }\r\n                    <Dropdown overlay={menu} trigger={[\"click\"]}>\r\n                        <button className=\"circle\">\r\n                            <IconFAPro style={{}} name=\"fal fa-ellipsis-v-alt\" />\r\n                        </button>\r\n                    </Dropdown>\r\n                    <Tooltip title=\"Rời khỏi cuộc gọi\">\r\n                        <button className=\"end-call\">\r\n                            <IconFAPro style={{}} name=\"fal fa-phone-alt\" />\r\n                        </button>\r\n                    </Tooltip>\r\n                </div>\r\n                <div>\r\n                    {/* {showButtonDropdown ? (\r\n                        <Dropdown\r\n                            trigger={[\"click\"]}\r\n                            overlay={\r\n                                <Menu className=\"menu-footer\">\r\n                                    <Menu.Item key=\"1\" icon={<IconFAPro style={{}} name=\"fal fa-info-circle\" />}>\r\n                                        Chi tiết về cuộc họp\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"2\" icon={<IconFAPro style={{ color: \"#fff\" }} name=\"fal fa-users\" />} onClick={() => {\r\n                                        if (siderActive !== \"users\") {\r\n                                            this.props.setSiderActive(\"users\");\r\n                                        } else {\r\n                                            this.props.setSiderActive(\"none\");\r\n                                        }\r\n                                    }}>\r\n                                        Hiển thị tất cả mọi người\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"3\" icon={<IconFAPro style={{ color: \"#fff\"  }} name=\"fal fa-comment-alt-dots\" />} onClick={() => {\r\n                                        if (siderActive !== \"chat\") {\r\n                                            this.props.setSiderActive(\"chat\");\r\n                                        } else {\r\n                                            this.props.setSiderActive(\"none\");\r\n                                        }\r\n                                    }}>\r\n                                        Trò chuyện với mọi người\r\n                                    </Menu.Item>\r\n                                </Menu>\r\n                            }\r\n                        >\r\n                            <button style={{ margin: 0, width: 30 }}>\r\n                                <IconFAPro style={{ fontSize: \"25px\" }} name=\"fal fa-angle-up\" />\r\n                            </button>\r\n                        </Dropdown>\r\n                    ) : ( */}\r\n                    <>\r\n                        {/* <Tooltip placement=\"topRight\" title=\"Chi tiết về cuộc họp\">\r\n                                <button>\r\n                                    <IconFAPro style={{}} name=\"fal fa-info-circle\" />\r\n                                </button>\r\n                            </Tooltip> */}\r\n                        {\r\n                            !showButtonDropdown &&\r\n                            <Tooltip placement=\"topRight\" title=\"Hiển thị tất cả mọi người\">\r\n                                <Badge\r\n                                    size={\"default\"}\r\n                                    count={listUser.length}\r\n                                    overflowCount={99}\r\n                                    style={{ backgroundColor: \"#52c41a\" }}\r\n                                >\r\n                                    <button\r\n                                        onClick={() => {\r\n                                            if (siderActive !== \"users\") {\r\n                                                this.props.setSiderActive(\"users\");\r\n                                            } else {\r\n                                                this.props.setSiderActive(\"none\");\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <IconFAPro style={{ color: \"#fff\" }} name=\"fal fa-users\" />\r\n                                    </button>\r\n                                </Badge>\r\n                            </Tooltip>\r\n                        }\r\n                        <Tooltip placement=\"topRight\" title=\"Trò chuyện với mọi người\">\r\n                            <Badge size={\"default\"} count={messageState.length} overflowCount={10}>\r\n                                <button\r\n                                    onClick={() => {\r\n                                        if (siderActive !== \"chat\") {\r\n                                            this.props.setSiderActive(\"chat\");\r\n                                        } else {\r\n                                            this.props.setSiderActive(\"none\");\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <IconFAPro style={{ color: \"#fff\" }} name=\"fal fa-comment-alt-dots\" />\r\n                                </button>\r\n                            </Badge>\r\n                        </Tooltip>\r\n                    </>\r\n                    {/* )} */}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    listUser: state.listUser,\r\n    micOpen: state.micOpen,\r\n    videoOpen: state.videoOpen,\r\n    siderActive: state.siderActive,\r\n    localAudioInput: state.localAudioInput, // Lưu audio đã đc chọn\r\n    localProducer: state.localProducer, // Lưu video đã đc chọn\r\n    listSrcVideo: state.listSrcVideo,\r\n    messageState: state.messageState,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        setModalSettingVisible: (value: boolean) => dispatch(setModalSettingVisible(value)),\r\n        setVideoOpen: (value: boolean) => dispatch(setVideoOpen(value)),\r\n        setMicOpen: (value: boolean) => dispatch(setMicOpen(value)),\r\n        setSiderActive: (value: string) => dispatch(setSiderActive(value)),\r\n        getConsumersFromServer: (roomname: string) => dispatch(getConsumersFromServer(roomname)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeFooter);\r\n","const EVENTS = {\r\n    SOCKET_CONNECTION: \"connection\",\r\n    SOCKET_CHANGE_ROOM_PASSWORD: \"SOCKET_CHANGE_ROOM_PASSWORD\",\r\n    SOCKET_CREATE_ROOM: \"SOCKET_CREATE_ROOM\",\r\n    SOCKET_GET_ROOM_INFO: \"SOCKET_GET_ROOM_INFO\",\r\n    SOCKET_DISCONNECT: \"disconnect\",\r\n    SOCKET_USER_DISCONNECT: \"SOCKET_USER_DISCONNECT\",\r\n    SOCKET_REMOVE_ROOM: \"SOCKET_REMOVE_ROOM\",\r\n    SOCKET_USER_LEFT_ROOM: \"SOCKET_USER_LEFT_ROOM\",\r\n    SOCKET_USER_JOIN_ROOM: \"SOCKET_USER_JOIN_ROOM\",\r\n    INCOMMING_MESSAGE: \"INCOMMING_MESSAGE\",\r\n    SOCKET_EXIT_ROOM: \"SOCKET_EXIT_ROOM\",\r\n    SOCKET_SEND_MESSAGE: \"SOCKET_SEND_MESSAGE\",\r\n    SOCKET_GET_MESSAGE_IN_ROOM: \"SOCKET_GET_MESSAGE_IN_ROOM\",\r\n    CHECK_ROOM_ALREADY: \"CHECK_ROOM_ALREADY\"\r\n\r\n}\r\n\r\nconst RTC_EVENTS = {\r\n    CREATE_TRANSPORT: \"CREATE_RTC_TRANSPORT\",\r\n    CONNECT_TRANSPORT: \"CONNECT_RTC_TRANSPORT\",\r\n    CREATE_PRODUCE: \"CREATE_PRODUCE\",\r\n    CREATE_CONSUME: \"CREATE_CONSUME\",\r\n    CONSUME_RESUME: \"CONSUME_RESUME\",\r\n    GET_ROUTER_CAPABILITIES: \"GET_ROUTER_CAPABILITIES\",\r\n    GET_PRODUCER: \"GET_PRODUCER\",\r\n    NEW_PRODUCER: \"NEW_PRODUCER\",\r\n    CLOSE_PRODUCER: \"CLOSE_PRODUCER\",\r\n    CLOSE_CONSUME: \"CLOSE_CONSUME\",\r\n    UPDATE_CONSUME: \"UPDATE_CONSUME\",\r\n    GET_PRODUCER_OF_USER_KEY: \"GET_PRODUCER_OF_USER_KEY\"\r\n}\r\n\r\n\r\nexport { EVENTS, RTC_EVENTS };\r\n","import { notification } from \"antd\";\r\n\r\nconst Notification = (type, message) => {\r\n    notification[type]({\r\n        message: 'Thông báo!',\r\n        description: message,\r\n        placement: \"bottomRight\",\r\n    });\r\n}\r\n\r\nexport { Notification }","\r\nimport { store } from \"../redux/store\";\r\nimport { StreamAxiosInstance } from \"../utils/setupAxiosInterceptors\";\r\n\r\nconst ETrackKind = {\r\n    AUDIO: \"audio\",\r\n    VIDEO: \"video\",\r\n};\r\n\r\nclass UserClient {\r\n    socket: any;\r\n    id: string;\r\n    username: string;\r\n    iskey: boolean;\r\n    roomname: string;\r\n    constructor(socket: any, id: string, username: string, iskey: boolean, roomname: string) {\r\n        this.socket = socket;\r\n        this.id = id;\r\n        this.username = username;\r\n        this.iskey = iskey;\r\n        this.roomname = roomname;\r\n    }\r\n\r\n    produce = async (rtpCapabilities: any, producerTransport: any, track: MediaStreamTrack, type: string) => {\r\n        const params = this.getTrackParamsCodec(rtpCapabilities, track);\r\n        const producer = await producerTransport.produce(params);\r\n        producer.type = type;\r\n        producer.on(\"trackended\", async () => {\r\n            const producerInstance = {\r\n                kind: producer.kind,\r\n                id: producer.id,\r\n                producer,\r\n            };\r\n            await this.closeProducer(producerInstance.id);\r\n\r\n        });\r\n\r\n        producer.on(\"transportclose\", () => {\r\n            console.log(\"producer transport close\");\r\n        });\r\n\r\n        producer.on(\"close\", () => {\r\n            console.log(\"closing producer\");\r\n        });\r\n        const producerInstance = {\r\n            kind: producer.kind,\r\n            id: producer.id,\r\n            producer,\r\n        };\r\n\r\n        return producerInstance;\r\n    };\r\n\r\n    consumer = async (\r\n        roomname: string,\r\n        userId: string,\r\n        rtpCapabilities: any,\r\n        consumerTransport: any,\r\n        producerId: string\r\n    ) => {\r\n        const consumerData = await StreamAxiosInstance.post(\"/call/createConsumer\", {\r\n            roomname,\r\n            userId,\r\n            consumerParams: {\r\n                rtpCapabilities,\r\n                consumerTransportId: consumerTransport.id, // might be\r\n                producerId,\r\n            },\r\n        });\r\n        const { id, kind, rtpParameters } = consumerData.data.params;\r\n        const codecOptions = {\r\n            // encodings:\r\n            //     [\r\n            //         { ssrc: 222220, scalabilityMode: 'S4T3' }\r\n            //     ]\r\n        };\r\n        const consumer = await consumerTransport.consume({\r\n            id,\r\n            producerId,\r\n            kind,\r\n            rtpParameters,\r\n            codecOptions,\r\n        });\r\n\r\n        return consumer;\r\n    };\r\n\r\n    getTrackParamsCodec = (rtpCapabilities: any, track: MediaStreamTrack) => {\r\n        switch (track.kind) {\r\n            case ETrackKind.VIDEO: {\r\n                const codec = rtpCapabilities.codecs.find((codec: any) => codec.mimeType.toLowerCase() === \"video/vp8\");\r\n\r\n                const params = {\r\n                    track,\r\n                    codec,\r\n                    encodings: [\r\n                        { scaleResolutionDownBy: 1, maxBitrate: 10000000 },\r\n                        { scaleResolutionDownBy: 1, maxBitrate: 11000000 },\r\n                        { scaleResolutionDownBy: 1, maxBitrate: 11000000 }\r\n                    ],\r\n                    codecOptions: {\r\n                        videoGoogleStartBitrate: 1000,\r\n                    },\r\n                };\r\n\r\n                return params;\r\n            }\r\n            case ETrackKind.AUDIO: {\r\n                const codec = rtpCapabilities.codecs.find(\r\n                    (codec: any) => codec.mimeType.toLowerCase() === \"audio/opus\"\r\n                );\r\n\r\n                const params = {\r\n                    track,\r\n                    codec,\r\n                };\r\n\r\n                return params;\r\n            }\r\n\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    closeProducer = async (producerId: string) => {\r\n        if (producerId) {\r\n            await StreamAxiosInstance.post(\"/call/closeProducer\", {\r\n                roomname: this.roomname,\r\n                userId: this.id,\r\n                producerParams: { producerId: producerId },\r\n            });\r\n        }\r\n    };\r\n\r\n    closeProducerWithType = async (type: string) => { };\r\n\r\n    closeConsumer = async (consumerId: string) => { };\r\n\r\n    closeAddConsumerOfUser = (userId: string) => { };\r\n}\r\n\r\nexport { UserClient };\r\n","import { Modal, Select, Row, Button, Tooltip, Col } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ISrcVideo } from \"../../models/reducers/listSrcVideo\";\r\nimport { ILocalProducer } from \"../../models/reducers/localProducer\";\r\nimport { ILocalStreams } from \"../../models/reducers/localStreams\";\r\nimport { getConsumersFromServer } from \"../../reducers/consumer\";\r\n// import { getConsumersFromServer } from '../../reducers/consumersReducer'\r\nimport { setLocalAudioInput } from \"../../reducers/localAudioInput\";\r\nimport { setLocalProducer } from \"../../reducers/localProducerReducer\";\r\nimport { setLocalVideoInput } from \"../../reducers/localVideoInput\";\r\nimport { setMicOpen } from \"../../reducers/ui/micOpenReducer\";\r\nimport { setModalSettingVisible } from \"../../reducers/ui/modalSettingVisibleReducer\";\r\nimport { setVideoOpen } from \"../../reducers/ui/videoOpenReducer\";\r\nimport { openLocalCamera, openMic } from \"../../utils/cameraControl\";\r\nimport { getDevices } from \"../../utils/getDecices\";\r\nconst { Option } = Select;\r\ninterface Props {\r\n    modalSettingVisible: boolean;\r\n    setModalSettingVisible: Function;\r\n    localStreams: Array<ILocalStreams>;\r\n    getConsumersFromServer: Function;\r\n    setLocalVideoInput: Function;\r\n    setLocalAudioInput: Function;\r\n    localAudioInput: ILocalStreams | null;\r\n    localVideoInput: ILocalStreams | null;\r\n    micOpen: boolean;\r\n    videoOpen: boolean;\r\n    setVideoOpen: Function;\r\n    setMicOpen: Function;\r\n    listSrcVideo: Array<ISrcVideo>;\r\n    localProducer: Array<ILocalProducer>;\r\n    setLocalProducer: Function;\r\n}\r\ninterface State {}\r\n\r\nexport class ModalSetting extends Component<Props, State> {\r\n    handleOk = async () => {\r\n        const { videoOpen, micOpen, localProducer } = this.props;\r\n        console.log(videoOpen);\r\n        if (videoOpen) {\r\n            openLocalCamera(localProducer);\r\n        }\r\n        if (micOpen) {\r\n            openMic(localProducer);\r\n        }\r\n        this.props.setModalSettingVisible(false);\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.props.setModalSettingVisible(false);\r\n    };\r\n\r\n    onChangeVideoDevice = (value: string) => {\r\n        const { localProducer } = this.props;\r\n        localProducer.map((producer) => {\r\n            if (producer.deviceId === value) {\r\n                producer.active = true;\r\n            } else {\r\n                producer.active = false;\r\n            }\r\n        });\r\n        this.props.setLocalProducer(localProducer);\r\n    };\r\n    onChangeAudioDevice = (value: string) => {\r\n        const { localProducer } = this.props;\r\n        localProducer.map((producer) => {\r\n            if (producer.deviceId === value) {\r\n                producer.active = true;\r\n            } else {\r\n                producer.active = false;\r\n            }\r\n        });\r\n        this.props.setLocalProducer(localProducer);\r\n    };\r\n    render() {\r\n        const {\r\n            modalSettingVisible,\r\n            localStreams,\r\n            localVideoInput,\r\n            localAudioInput,\r\n            micOpen,\r\n            videoOpen,\r\n            localProducer,\r\n        } = this.props;\r\n        const videosInput: Array<ILocalProducer> = [];\r\n        const audiosInput: Array<ILocalProducer> = [];\r\n        localProducer.forEach((stream) => {\r\n            if (stream.type === \"audioinput\") {\r\n                audiosInput.push(stream);\r\n            } else if (stream.type === \"videoinput\") {\r\n                videosInput.push(stream);\r\n            }\r\n        });\r\n        return (\r\n            <Modal\r\n                title=\"Cấu hình Camera và Micro\"\r\n                closable={false}\r\n                width={420}\r\n                className=\"modal-setting-camera\"\r\n                visible={modalSettingVisible}\r\n                footer={[\r\n                    <Button key=\"submit\" type=\"primary\" onClick={this.handleOk}>\r\n                        Lưu\r\n                    </Button>,\r\n                    <Button key=\"close\" type=\"primary\" danger onClick={this.handleCancel}>\r\n                        Đóng\r\n                    </Button>,\r\n                ]}\r\n            >\r\n                <Row className=\"wrapper-input\">\r\n                    <Col span={24}>Micro</Col>\r\n                    <Col span={24}>\r\n                        <Select\r\n                            defaultValue={audiosInput.find((device) => device.deviceId === \"default\")?.deviceId}\r\n                            style={{ width: \"100%\" }}\r\n                            onChange={this.onChangeAudioDevice}\r\n                        >\r\n                            {audiosInput.map((audio, index) => {\r\n                                return (\r\n                                    <Option key={index} value={audio.deviceId}>\r\n                                        {audio.name}\r\n                                    </Option>\r\n                                );\r\n                            })}\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{ marginTop: 20 }} className=\"wrapper-input\">\r\n                    <Col span={24}>Camera</Col>\r\n                    <Col span={24}>\r\n                        <Select\r\n                            defaultValue={videosInput.find((device) => device.deviceId === \"default\")?.deviceId}\r\n                            style={{ width: \"100%\" }}\r\n                            onChange={this.onChangeVideoDevice}\r\n                        >\r\n                            {videosInput.map((video, index) => {\r\n                                return (\r\n                                    <Option key={index} value={video.deviceId}>\r\n                                        {video.name}\r\n                                    </Option>\r\n                                );\r\n                            })}\r\n                        </Select>\r\n                    </Col>\r\n                </Row>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    localProducer: state.localProducer,\r\n    modalSettingVisible: state.modalSettingVisible,\r\n    localStreams: state.localStreams,\r\n    localAudioInput: state.localAudioInput, // Lưu audio đã đc chọn\r\n    localVideoInput: state.localVideoInput, // Lưu video đã đc chọn\r\n    micOpen: state.micOpen,\r\n    videoOpen: state.videoOpen,\r\n    listSrcVideo: state.listSrcVideo,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        setLocalProducer: (data: Array<ILocalProducer>) => dispatch(setLocalProducer(data)),\r\n        setModalSettingVisible: (value: boolean) => dispatch(setModalSettingVisible(value)),\r\n        getConsumersFromServer: (roomname: string) => dispatch(getConsumersFromServer(roomname)),\r\n        setLocalAudioInput: (data: ILocalStreams | null) => dispatch(setLocalAudioInput(data)),\r\n        setLocalVideoInput: (data: ILocalStreams | null) => dispatch(setLocalVideoInput(data)),\r\n        setVideoOpen: (value: boolean) => dispatch(setVideoOpen(value)),\r\n        setMicOpen: (value: boolean) => dispatch(setMicOpen(value)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalSetting);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport VideoComponent from \"../../components/VideoComponent/VideoComponent\";\r\nimport { ISrcVideo } from \"../../models/reducers/listSrcVideo\";\r\n\r\ninterface Props {\r\n    listSrcVideo: Array<ISrcVideo>;\r\n}\r\ninterface State { }\r\n\r\nexport class HomeMain extends Component<Props, State> {\r\n    state = {};\r\n\r\n    render() {\r\n        const { listSrcVideo } = this.props;\r\n        const video = listSrcVideo.filter((item) => item.type === \"localUser\");\r\n        return (\r\n            <div\r\n                className=\"home-main\"\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    border: \"1px solid orange\",\r\n                    padding: 5,\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    position: 'relative'\r\n                }}\r\n            >\r\n                {\r\n                    <video\r\n                        poster=\"./images/poster.jpg\"\r\n                        id=\"main-video-element\"\r\n                        style={{ width: \"100%\", height: \"100%\", objectFit: \"contain\" }}\r\n                        autoPlay={true}\r\n                        muted={true}\r\n                    ></video>\r\n                }\r\n                <div style={{ height: 25, lineHeight: '25px', background: 'transparent', position: 'absolute', bottom: 0, left: 0, padding: '0 5px' }}>\r\n                    <span id=\"minutes-count\"></span><span id=\"seconds-count\"></span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    listSrcVideo: state.listSrcVideo,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeMain);\r\n","import React, { Component } from \"react\";\r\n\r\ninterface Props {\r\n    producer: any;\r\n}\r\ninterface State {}\r\n\r\nclass ProducerToConsumer extends Component<Props, State> {\r\n    videoRef: HTMLVideoElement | null;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.videoRef = null;\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const { producer } = this.props;\r\n        console.log(\"componentDidMount\", producer.producerId, this.videoRef);\r\n        const { consumer, stream } = await this.producerToConsumer(producer.producerId);\r\n        if (this.videoRef) {\r\n            console.log(stream);\r\n            this.stopStream();\r\n            this.videoRef.srcObject = stream;\r\n        }\r\n    };\r\n\r\n    shouldComponentUpdate = (nextProps: Props) => {\r\n        const { producer } = this.props;\r\n        console.log(\"shouldComponentUpdate\", producer.producerId !== nextProps.producer.producerId);\r\n        if (producer.producerId !== nextProps.producer.producerId) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    componentDidUpdate = async (prevProps: Props) => {\r\n        const { producer } = this.props;\r\n        console.log(\"componentDidUpdate\", producer.producerId !== prevProps.producer.producerId);\r\n        if (producer.producerId !== prevProps.producer.producerId) {\r\n            this.stopStream();\r\n            const { consumer, stream } = await this.producerToConsumer(producer.producerId);\r\n            if (this.videoRef) {\r\n                this.videoRef.srcObject = stream;\r\n            }\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        const { producer } = this.props;\r\n        this.stopStream();\r\n        console.log(\"componentWillUnmount\", producer.producerId);\r\n    };\r\n\r\n    stopStream = () => {\r\n        if (this.videoRef) {\r\n            const stream: any = this.videoRef.srcObject;\r\n            if (stream) {\r\n                const tracks = stream.getTracks();\r\n                tracks.forEach((track: any) => {\r\n                    track.stop();\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    producerToConsumer = async (producerId: string) => {\r\n        const consumer = await window.roomClient.getConsumerFromProducerId(producerId);\r\n        console.log(consumer.track);\r\n        const stream = new MediaStream();\r\n        stream.addTrack(consumer.track);\r\n        return {\r\n            consumer,\r\n            stream,\r\n        };\r\n    };\r\n\r\n    setMainVideoSrc = () => {\r\n        const mainVideoElement: any = document.getElementById(\"main-video-element\");\r\n        const p2mVideoElement: any = document.querySelectorAll(\".producer-to-consumer\");\r\n        for (let index = 0; index < p2mVideoElement.length; index++) {\r\n            const element = p2mVideoElement[index];\r\n            element.classList.remove(\"active\");\r\n        }\r\n        if (this.videoRef) {\r\n            this.videoRef.classList.add(\"active\");\r\n        }\r\n        if (mainVideoElement) {\r\n            mainVideoElement.srcObject = this.videoRef?.srcObject;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper-video \">\r\n                <video\r\n                    className={\"producer-to-consumer\"}\r\n                    onClick={this.setMainVideoSrc}\r\n                    id={this.props.producer.producerId}\r\n                    autoPlay={true}\r\n                    muted={true}\r\n                    style={{\r\n                        float: \"left\",\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        objectFit: \"contain\",\r\n                    }}\r\n                    ref={(ref) => {\r\n                        this.videoRef = ref;\r\n                    }}\r\n                ></video>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProducerToConsumer;\r\n","import { Button } from \"antd\";\r\nimport React, { Component } from \"react\";\r\n\r\ninterface Props {\r\n    producer: any;\r\n}\r\ninterface State {\r\n    mute: boolean\r\n}\r\n\r\nclass ProducerToConsumerAudio extends Component<Props, State> {\r\n    audioRef: HTMLAudioElement | null;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.audioRef = null;\r\n        this.state = {\r\n            mute: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const { producer } = this.props;\r\n        console.log(\"componentDidMount\", producer.producerId);\r\n        const { consumer, stream } = await this.producerToConsumer(producer.producerId);\r\n        if (this.audioRef) {\r\n            this.stopStream();\r\n            this.audioRef.srcObject = stream;\r\n        }\r\n    };\r\n\r\n    shouldComponentUpdate = (nextProps: Props, nextState: State) => {\r\n        const { producer } = this.props;\r\n        console.log(\"shouldComponentUpdate\", producer.producerId !== nextProps.producer.producerId);\r\n        console.log(\"shouldComponentUpdate nextState\", nextState);\r\n        if (producer.producerId !== nextProps.producer.producerId) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    componentDidUpdate = async (prevProps: Props) => {\r\n        const { producer } = this.props;\r\n        console.log(\"componentDidUpdate\", producer.producerId !== prevProps.producer.producerId);\r\n        if (producer.producerId !== prevProps.producer.producerId) {\r\n            this.stopStream();\r\n            const { consumer, stream } = await this.producerToConsumer(producer.producerId);\r\n            if (this.audioRef) {\r\n                this.audioRef.srcObject = stream;\r\n            }\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        const { producer } = this.props;\r\n        this.stopStream();\r\n        console.log(\"componentWillUnmount\", producer.producerId);\r\n    };\r\n\r\n    stopStream = () => {\r\n        if (this.audioRef) {\r\n            const stream: any = this.audioRef.srcObject;\r\n            if (stream) {\r\n                const tracks = stream.getTracks();\r\n                tracks.forEach((track: any) => {\r\n                    track.stop();\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    producerToConsumer = async (producerId: string) => {\r\n        const consumer = await window.roomClient.getConsumerFromProducerId(producerId);\r\n        const stream = new MediaStream();\r\n        stream.addTrack(consumer.track);\r\n        return {\r\n            consumer,\r\n            stream,\r\n        };\r\n    };\r\n\r\n    onMute = () => {\r\n        const btnOnMic = document.getElementById(\"btn-on-mic\")\r\n        const btnOffMic = document.getElementById(\"btn-off-mic\")\r\n        if (btnOnMic && btnOffMic) {\r\n            if (this.audioRef) {\r\n                this.audioRef.muted = !this.audioRef?.muted\r\n            }\r\n            if (btnOnMic.className.indexOf(\"hidden\") !== -1) {\r\n                btnOnMic.className = \"btn-audio\";\r\n                btnOffMic.className = \"btn-audio hidden\";\r\n            } else {\r\n                btnOnMic.className = \"btn-audio hidden\";\r\n                btnOffMic.className = \"btn-audio\";\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button\r\n                    className={\"btn-audio hidden\"}\r\n                    id=\"btn-on-mic\"\r\n                    onClick={this.onMute}\r\n                >\r\n                    <i className=\"fal fa-volume-slash\"></i>\r\n                </button>\r\n                <button\r\n                    className={\"btn-audio \"}\r\n                    id=\"btn-off-mic\"\r\n                    onClick={this.onMute}\r\n                >\r\n                    <i className=\"fal fa-volume-up\"></i>\r\n                </button>\r\n                <audio\r\n                    autoPlay={true}\r\n                    muted={false}\r\n                    style={{ display: \"none\", width: \"100%\", height: \"100%\", objectFit: \"contain\" }}\r\n                    ref={(ref) => {\r\n                        this.audioRef = ref;\r\n                    }}\r\n                ></audio>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProducerToConsumerAudio;\r\n","import { Col, Row } from \"antd\";\r\nimport React, { Component, PureComponent } from \"react\";\r\nimport { IComsumer } from \"../../models/reducers/comsumers\";\r\nimport { currentMainProducers } from \"../../models/variables/mainProducer\";\r\nimport ProducerToConsumer from \"../ProducerToConsumer/ProducerToConsumer\";\r\nimport ProducerToConsumerAudio from \"../ProducerToConsumer/ProducerToConsumerAudio\";\r\n\r\ninterface Props {\r\n    userData: IComsumer;\r\n}\r\ninterface State {}\r\n\r\nclass UserComponent extends PureComponent<Props, State> {\r\n    state = {};\r\n\r\n    render() {\r\n        const { userData } = this.props;\r\n        const { listProducer } = userData;\r\n        const audio = listProducer.filter((producer) => producer.producerType === \"audio\");\r\n        const video = listProducer.filter((producer) => producer.producerType !== \"audio\");\r\n\r\n        return (\r\n            <Col className=\"col-user-component\" span={video.length <= 1 ? 12 : 24}>\r\n                <div className=\"wrapper\">\r\n                    <div\r\n                        className=\"user-name\"\r\n                        style={userData.userId === window.roomClient.localUser.id ? { color: \"orange\" } : {}}\r\n                    >\r\n                        {userData.username}\r\n                        {audio && audio.length > 0 && userData.userId !== window.roomClient.localUser.id ? (\r\n                            <ProducerToConsumerAudio producer={audio[0]} />\r\n                        ) : null}\r\n                    </div>\r\n\r\n                    <Row className=\"row-wrapper-video\">\r\n                        {video.length > 0 ? (\r\n                            video.map((producer, index) => (\r\n                                <Col className=\"col-wrapper-video\" span={video.length <= 1 ? 24 : 12}>\r\n                                    <ProducerToConsumer\r\n                                        key={index}\r\n                                        producer={producer}\r\n                                    />\r\n                                </Col>\r\n                            ))\r\n                        ) : (\r\n                            <Col span={24} className=\"col-wrapper-video \">\r\n                                <div className=\"wrapper-video video-empty\">Không có video</div>\r\n                            </Col>\r\n                        )}\r\n                    </Row>\r\n                </div>\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserComponent;\r\n","import { Col, Row } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { IComsumer, IUser } from \"../../models/reducers/comsumers\";\r\nimport { ISrcVideo } from \"../../models/reducers/listSrcVideo\";\r\nimport UserComponent from \"../User/UserComponent\";\r\nimport VideoComponent from \"../VideoComponent/VideoComponent\";\r\n\r\ninterface Props {\r\n    listSrcVideo: Array<ISrcVideo>;\r\n    consumers: Array<IComsumer>;\r\n    listUser: Array<IUser>;\r\n}\r\ninterface State {}\r\n\r\nexport class ListUserCamera extends Component<Props, State> {\r\n    state = {};\r\n\r\n    render() {\r\n        const { listUser } = this.props;\r\n        listUser.sort(function (a, b) {\r\n            return (\r\n                b.listProducer.filter((producer) => producer.producerType === \"video\").length -\r\n                a.listProducer.filter((producer) => producer.producerType === \"video\").length\r\n            );\r\n        });\r\n        return (\r\n            <Row className=\"row-list-user\">\r\n                {listUser.map((user, index) => {\r\n                    return <UserComponent key={index} userData={user} />;\r\n                })}\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    listUser: state.listUser,\r\n    listSrcVideo: state.listSrcVideo,\r\n    consumers: state.consumers,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListUserCamera);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { IComsumer } from '../../models/reducers/comsumers';\r\nimport { ISrcVideo } from '../../models/reducers/listSrcVideo'\r\nimport { setSiderActive } from '../../reducers/ui/siderActive';\r\nimport ListUserCamera from './ListUserCamera';\r\nimport ListUserDefault from './ListUserDefault';\r\n\r\ninterface Props {\r\n    listSrcVideo: Array<ISrcVideo>\r\n    consumers: Array<IComsumer>\r\n    setSiderActive: Function\r\n}\r\ninterface State {\r\n\r\n}\r\n\r\nexport class ListUser extends Component<Props, State> {\r\n\r\n    onSwitchMode = () => {\r\n        this.props.setSiderActive(\"none\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"list-user\">\r\n                <div className=\"header\">\r\n                    <div className=\"header-title\">Mọi người</div>\r\n                    <div className=\"header-btn\">\r\n                        <button onClick={this.onSwitchMode}><i className=\"fal fa-times\"></i></button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"wrapper-list-user-camera\">\r\n                    <ListUserCamera />\r\n                    {/* <ListUserDefault /> */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    listSrcVideo: state.listSrcVideo,\r\n    consumers: state.consumers,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        setSiderActive: (value: string) => dispatch(setSiderActive(value))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListUser)\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BubbleGroup, ChatFeed, Message } from \"react-chat-ui\";\r\nimport { Button, Input, Layout, message } from \"antd\";\r\nimport { SendOutlined } from \"@ant-design/icons\";\r\nimport { IMessageState } from \"../../models/reducers/message\";\r\nimport { StreamAxiosInstance } from \"../../utils/setupAxiosInterceptors\";\r\nimport { getMessage } from \"../../reducers/messageReducer\";\r\nimport { roomData } from \"../../models/variables/roomData\";\r\nimport { setSiderActive } from \"../../reducers/ui/siderActive\";\r\nconst { Footer, Content, Header } = Layout;\r\nconst { Search } = Input;\r\ninterface Props {\r\n    messageState: Array<IMessageState>;\r\n    getMessage: Function;\r\n    setSiderActive: Function\r\n}\r\ninterface State {\r\n    messages: Array<any>;\r\n}\r\n\r\nclass HomeSiderChat extends Component<Props, State> {\r\n    messagebox: any;\r\n    shouldComponentUpdate = (nextProp: Props) => {\r\n        if (nextProp.messageState.length !== this.props.messageState.length) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    sendMessage = async (value: any) => {\r\n        const response = await StreamAxiosInstance.post(\"/call/sendMessage\", {\r\n            roomname: window.roomClient.roomname,\r\n            message: value,\r\n            userId: window.roomClient.localUser.id,\r\n        });\r\n        this.props.getMessage();\r\n        this.messagebox.setState({ value: \"\" });\r\n    };\r\n    render() {\r\n        const messages = this.props.messageState;\r\n        const convertMessage = [];\r\n        for (let index = 0; index < messages.length; index++) {\r\n            const mess = new Message({\r\n                id: messages[index].id === window.roomClient.localUser.id ? 0 : 1,\r\n                senderName: messages[index].name,\r\n                message: messages[index].message,\r\n            });\r\n            convertMessage.push(mess);\r\n        }\r\n\r\n        return (\r\n            <div className=\"home-sider-chat\">\r\n                <Layout style={{ width: \"100%\", height: \"100%\", borderRadius: 5, background: '#fff' }}>\r\n                    <Header\r\n                        style={{\r\n                            height: 40,\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"space-between\",\r\n                            color: \"#fff\",\r\n                            fontSize: '14px',\r\n                            padding: '0 10px',\r\n                            background: '#333',\r\n                        }}\r\n                    >\r\n                        <b style={{\r\n                            marginLeft: 10, fontSize: '18px',\r\n                        }}> {roomData.roomName}</b>\r\n\r\n                        <Button style={{\r\n                            color: 'tomato', fontSize: 20, display: \"flex\",\r\n                            alignItems: \"center\", justifyContent: 'center', padding: 0\r\n                        }} type=\"link\" onClick={() => this.props.setSiderActive(\"none\")}><i className=\"fal fa-times\"></i></Button>\r\n\r\n                    </Header>\r\n                    <Content>\r\n                        <ChatFeed\r\n                            messages={convertMessage} // Array: list of message objects\r\n                            hasInputField={false} // Boolean: use our input, or use your own\r\n                            showSenderName // show the name of the user who sent the message\r\n                            bubblesCentered={false} //Boolean should the bubbles be centered in the feed?\r\n                            bubbleStyles={{\r\n                                text: {\r\n                                    fontSize: 13,\r\n                                    color: '#050505'\r\n                                },\r\n                                chatbubble: {\r\n                                    borderRadius: 18,\r\n                                    padding: '7px 12px',\r\n                                    color: '#000',\r\n                                    marginTop: 0,\r\n                                    marginLeft: 5,\r\n                                    marginRight: 5,\r\n                                    backgroundColor: '#e4e6eb',\r\n                                    maxWidth: '80%'\r\n                                },\r\n                            }}\r\n                        />\r\n                    </Content>\r\n                    <Footer style={{ padding: 5, borderBottomRightRadius: 5, borderBottomLeftRadius: 5, background: '#fff' }}>\r\n                        <Search\r\n                            ref={(ref) => {\r\n                                this.messagebox = ref;\r\n                            }}\r\n                            placeholder=\"\"\r\n                            enterButton={<SendOutlined />}\r\n                            size=\"middle\"\r\n                            onSearch={this.sendMessage}\r\n                        />\r\n                    </Footer>\r\n                </Layout>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    messageState: state.messageState,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        getMessage: () => dispatch(getMessage()),\r\n        setSiderActive: (value: string) => dispatch(setSiderActive(value))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeSiderChat);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Layout, Spin } from \"antd\";\r\nimport HomeFooter from \"../layouts/HomePage/HomeFooter\";\r\nimport { connect } from \"react-redux\";\r\nimport { RoomClient } from \"../module/RoomClientNew\";\r\nimport { getMessage, setMessage } from \"../reducers/messageReducer\";\r\nimport { ILocalStreams } from \"../models/reducers/localStreams\";\r\nimport ModalSetting from \"../components/Modal/ModalSetting\";\r\nimport HomeMain from \"../layouts/HomePage/HomeMain\";\r\nimport ListUser from \"../components/ListUser/ListUser\";\r\nimport { getUserInRoom } from \"../reducers/usersReducer\";\r\nimport HomeSiderChat from \"../layouts/HomePage/HomeSiderChat\";\r\nimport ResizeObserver from \"react-resize-observer\";\r\nimport { roomData } from \"../models/variables/roomData\";\r\nimport ListUserCamera from \"../components/ListUser/ListUserCamera\";\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\ninterface Props {\r\n    localStreams: Array<ILocalStreams>;\r\n    siderActive: string;\r\n    getUserInRoom: Function;\r\n    getMessage: Function;\r\n}\r\ninterface State { }\r\n\r\nclass HomePage extends Component<Props, State> {\r\n    state = {\r\n        loading: true,\r\n        siderFull: false,\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        // getDevices();\r\n        if (roomData) {\r\n            try {\r\n                const roomClient = new RoomClient(\r\n                    roomData.roomName,\r\n                    roomData.roomKey,\r\n                    roomData.username,\r\n                    async (roomClient: RoomClient) => {\r\n                        console.log(roomClient);\r\n\r\n                        await roomClient.init();\r\n                        await roomClient.initSocketEvent();\r\n                        window.roomClient = roomClient;\r\n                        this.props.getMessage()\r\n                        await this.setState({ loading: false });\r\n                        await this.props.getUserInRoom();\r\n                    }\r\n                );\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        } else {\r\n            this.setState({\r\n                loading: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { loading, siderFull } = this.state;\r\n        const { siderActive } = this.props;\r\n        if (loading) {\r\n            return (\r\n                <div\r\n                    style={{\r\n                        width: \"100%\",\r\n                        height: \"100vh\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                    }}\r\n                >\r\n                    <Spin size=\"large\" tip=\"Loading...\"></Spin>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <Layout id=\"home-page\">\r\n                <ResizeObserver\r\n                    onResize={(rect) => {\r\n                        if (rect.width < 769) {\r\n                            this.setState({\r\n                                siderFull: true,\r\n                            });\r\n                        } else {\r\n                            this.setState({\r\n                                siderFull: false,\r\n                            });\r\n                        }\r\n                    }}\r\n                />\r\n                <Header style={{ display: \"none\" }} id=\"home-page-header\"></Header>\r\n                {\r\n                    siderFull ?\r\n                        <Layout className=\"layout-sub-smallview\">\r\n                            <Header className=\"header-smallview\">\r\n                                <ListUserCamera />\r\n                            </Header>\r\n                            <Layout style={{background: 'transparent'}}>\r\n                                <Content id=\"home-page-content-smallview\" >\r\n                                    <HomeMain />\r\n                                </Content>\r\n                                <Sider width={siderActive === \"chat\" ? 360 : 0} id=\"home-page-chat-sider\" >\r\n                                    <HomeSiderChat />\r\n                                </Sider>\r\n                            </Layout>\r\n                            <ModalSetting />\r\n                        </Layout>\r\n                        :\r\n                        <Layout className=\"layout-sub\">\r\n                            <Content id=\"home-page-content\" >\r\n                                <HomeMain />\r\n                            </Content>\r\n                            <Sider width={siderActive === \"chat\" ? 360 : 0} id=\"home-page-chat-sider\" >\r\n                                <HomeSiderChat />\r\n                            </Sider>\r\n                            <Sider width={siderActive === \"users\" ? 360 : 0} id=\"home-page-users\">\r\n                                <ListUser />\r\n                            </Sider>\r\n                            <ModalSetting />\r\n                        </Layout>\r\n                }\r\n                <Footer id=\"home-page-footer\">\r\n                    <HomeFooter />\r\n                </Footer>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        localStreams: state.localStreams,\r\n        siderActive: state.siderActive,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        getUserInRoom: () => dispatch(getUserInRoom()),\r\n        getMessage: () => dispatch(getMessage()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import { Button, Input, message } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { roomData } from \"../models/variables/roomData\";\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from \"@ant-design/icons\";\r\nimport { store } from \"../redux/store\";\r\nimport { setPage } from \"../reducers/pageReducer\";\r\ninterface Props {}\r\ninterface State {}\r\n\r\nexport class LoginPage extends Component<Props, State> {\r\n    state = {\r\n        roomName: \"\",\r\n        roomKey: \"\",\r\n        username: \"\",\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        const url = new URL(window.location.href);\r\n        const params = url.searchParams.get(\"option\");\r\n        // getDevices();\r\n        if (params) {\r\n            const decodeParams = decodeURIComponent(window.atob(params));\r\n            const toJson = JSON.parse(decodeParams);\r\n            roomData.roomName = toJson.roomName;\r\n            roomData.roomKey = toJson.roomKey;\r\n            roomData.username = toJson.username;\r\n            roomData.sid = toJson.sid;\r\n            this.setState({\r\n                roomName: toJson.roomName,\r\n                roomKey: toJson.roomKey ? toJson.roomKey : \"\",\r\n                username: toJson.username,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                loading: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    onSubmit = () => {\r\n        if (!roomData.username || roomData.username.trim() === \"\") {\r\n            message.info(\"Vui lòng nhập tên hiển thị!\");\r\n        } else {\r\n            store.dispatch(setPage(\"home\"));\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                <div className=\"login-wrapper\">\r\n                    <div style={{ textAlign: \"center\", color: \"orangered\", fontSize: 22, fontWeight: 600 }}>VRPACS</div>\r\n                    <div style={{ textAlign: \"center\", color: \"royalblue\", fontSize: 16, fontWeight: 600 }}>\r\n                        Video Conference\r\n                    </div>\r\n                    <div className=\"label\">Tên phòng</div>\r\n                    <Input\r\n                        value={this.state.roomName}\r\n                        onChange={(e) => {\r\n                            roomData.roomName = e.target.value;\r\n                            this.setState({ roomName: roomData.roomName });\r\n                        }}\r\n                    ></Input>\r\n                    <div className=\"label\">Mã phòng</div>\r\n                    <Input.Password\r\n                        value={this.state.roomKey}\r\n                        onChange={(e) => {\r\n                            roomData.roomKey = e.target.value;\r\n                            this.setState({ roomKey: roomData.roomKey });\r\n                        }}\r\n                        iconRender={(visible) => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                    />\r\n                    <div className=\"label\">Tên hiển thị</div>\r\n                    <Input\r\n                        value={this.state.username}\r\n                        onChange={(e) => {\r\n                            roomData.username = e.target.value;\r\n                            this.setState({ username: roomData.username });\r\n                        }}\r\n                    ></Input>\r\n                    <Button type=\"primary\" block style={{ marginTop: 20, marginBottom: 10 }} onClick={this.onSubmit}>\r\n                        Vào phòng\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport HomePage from './HomePage';\r\nimport LoginPage from './LoginPage';\r\n\r\ninterface Props {\r\n    pageReducer: string\r\n}\r\ninterface State {\r\n\r\n}\r\n\r\nexport class RedirectPage extends Component<Props, State> {\r\n    state = {}\r\n\r\n    render() {\r\n        const { pageReducer } = this.props;\r\n        if (pageReducer === 'home') {\r\n            return (\r\n                <HomePage />\r\n            )\r\n        } else {\r\n            return (\r\n                <LoginPage />\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    pageReducer: state.pageReducer\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RedirectPage)\r\n","import React, { Component } from \"react\";\r\nimport HomePage from \"./pages/HomePage\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport ErrorBoundry from \"./components/ErrorBoundry/ErrorBoundry\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./style/App.scss\";\r\nimport \"./style/home-page.scss\";\r\nimport \"./style/home-footer.scss\";\r\nimport \"./style/home-main.scss\";\r\nimport \"./style/modal-setting-camera.scss\";\r\nimport \"./style/list-user.scss\";\r\nimport \"./style/producer-consumer.scss\";\r\nimport \"./style/home-page-chat-sider.scss\";\r\n\r\nimport \"./style/home-chat-slider.scss\";\r\nimport \"./style/login-page.scss\";\r\nimport \"./style/smallview.scss\"\r\n\r\nimport { serverConfig } from \"./models/variables/serverConfig\";\r\nimport { setupAxiosInterceptors } from \"./utils/setupAxiosInterceptors\";\r\nimport { getDevices } from \"./utils/getDecices\";\r\nimport { store } from \"./redux/store\";\r\nimport { Spin } from \"antd\";\r\nimport { LoginPage } from \"./pages/LoginPage\";\r\nimport RedirectPage from \"./pages/RedirectPage\";\r\n\r\ninterface Props { }\r\ninterface State {\r\n    loadDevices: boolean;\r\n    page: string;\r\n}\r\n\r\ndeclare global {\r\n    interface Window {\r\n        test: any;\r\n    }\r\n}\r\n\r\ndeclare global {\r\n    interface Window {\r\n        ReactDOM: any;\r\n        React: any;\r\n        roomClient: any;\r\n        MediaRecorder: any;\r\n        RecordRTC: any;\r\n        config: any;\r\n    }\r\n}\r\nclass App extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.setupDevicesDefault();\r\n        this.setGlobalWindowVariable();\r\n        this.getConfig();\r\n        setupAxiosInterceptors(() => { });\r\n        this.state = { loadDevices: true, page: \"login\" };\r\n    }\r\n    setGlobalWindowVariable = () => {\r\n        window.React = React;\r\n        window.ReactDOM = ReactDOM;\r\n        window.MediaRecorder = window.MediaRecorder;\r\n        window.RecordRTC = window.RecordRTC;\r\n        window.config = window.config;\r\n    };\r\n\r\n    getConfig = () => {\r\n        const scStr: any = window.config;\r\n        let serverCfg = null;\r\n        let localStorageServerConfig: string | any = localStorage.getItem(\"serverConfig\");\r\n        if (localStorageServerConfig) {\r\n            serverCfg = JSON.parse(localStorageServerConfig);\r\n        }\r\n        if (!serverCfg) {\r\n            return;\r\n        }\r\n        if (window.location.protocol === \"http:\") {\r\n            serverConfig.scuServerUrl = serverCfg.HTTP_SCU_SERVER;\r\n            serverConfig.risServerUrl = serverCfg.HTTP_RIS_SERVER;\r\n            serverConfig.socketServerUrl = serverCfg.HTTP_SOCKET_SERVER;\r\n        } else {\r\n            serverConfig.scuServerUrl = serverCfg.HTTPS_SCU_SERVER;\r\n            serverConfig.risServerUrl = serverCfg.HTTPS_RIS_SERVER;\r\n            serverConfig.socketServerUrl = serverCfg.HTTPS_SOCKET_SERVER;\r\n        }\r\n    };\r\n\r\n    setupDevicesDefault = async () => {\r\n        await getDevices();\r\n        console.log(12312);\r\n\r\n        this.setState({ loadDevices: false });\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { loadDevices, page } = this.state;\r\n        return loadDevices ? (\r\n            <div style={{ width: '100%', height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                <Spin size=\"large\" tip=\"Loading devices\"></Spin>\r\n            </div>\r\n        ) : (\r\n            <Provider store={store}>\r\n                <ErrorBoundry />\r\n                <RedirectPage />\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}